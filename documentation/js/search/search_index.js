var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.048,1,0.725]],["body/components/AddExpenseComponent.html",[0,0.077,1,0.923,2,0.654,3,0.157,4,0.099,5,0.459,6,0.951,7,0.459,8,0.459,9,0.075,10,5.933,11,5.283,12,1.785,13,2.323,14,4.087,15,1.301,16,1.781,17,3.294,18,5.383,19,5.286,20,6.827,21,3.375,22,3.294,23,1.699,24,2.415,25,0.414,26,1.581,27,1.21,28,1.079,29,0.942,30,1.147,31,0.985,32,0.765,33,3.121,34,1.423,35,0.923,36,1.505,37,4.087,38,0.726,39,3.294,40,0.126,41,0.467,42,4.087,43,4.087,44,4.087,45,4.087,46,4.087,47,4.087,48,3.121,49,4.087,50,4.087,51,0.495,52,3.984,53,4.646,54,2.397,55,2.824,56,4.646,57,3.984,58,4.646,59,3.294,60,3.294,61,0.699,62,1.785,63,4.11,64,2.672,65,3.017,66,0.649,67,3.294,68,2.515,69,2.284,70,0.741,71,0.02,72,0.469,73,0.38,74,0.699,75,3.121,76,1.946,77,3.548,78,3.181,79,2.123,80,0.856,81,2.824,82,2.082,83,2.099,84,3.294,85,0.927,86,4.305,87,3.294,88,2.082,89,2.515,90,2.824,91,3.393,92,1,93,2.082,94,2.284,95,2.284,96,2.515,97,2.824,98,2.082,99,2.099,100,0.951,101,2.824,102,4.11,103,4.054,104,2.082,105,3.294,106,2.788,107,2.099,108,3.294,109,2.082,110,3.294,111,3.294,112,2.082,113,2.824,114,1.422,115,2.097,116,2.672,117,3.294,118,0.558,119,2.082,120,4.646,121,5.286,122,4.646,123,3.294,124,2.082,125,2.834,126,1.23,127,3.294,128,2.099,129,2.385,130,1.025,131,2.082,132,2.099,133,1.222,134,0.899,135,0.751,136,2.082,137,4.646,138,1.461,139,2.082,140,2.082,141,3.222,142,3.548,143,2.082,144,3.121,145,2.082,146,2.515,147,1.699,148,1.939,149,2.082,150,3.984,151,3.222,152,2.082,153,0.225,154,1.443,155,1.443,156,0.087,157,1.589,158,1.074,159,1.327,160,2.082,161,1.443,162,1.785,163,0.689,164,1.443,165,0.087,166,0.099,167,2.61,168,0.69,169,2.082,170,1.785,171,1.147,172,2.082,173,2.415,174,3.294,175,3.294,176,2.082,177,1.025,178,1.589,179,4.11,180,1.785,181,1.982,182,1.814,183,3.984,184,2.082,185,2.082,186,1.814,187,4.087,188,1.785,189,2.515,190,1.785,191,1.006,192,1.443,193,2.824,194,1.589,195,2.082,196,1.589,197,1.368,198,2.082,199,3.294,200,2.082,201,2.082,202,2.082,203,2.082,204,2.082,205,2.082,206,2.082,207,1.009,208,2.082,209,2.082,210,1.785,211,1.589,212,1.443,213,1.009,214,1.868,215,1.785,216,1.785,217,1.785,218,4.087,219,1.443,220,2.082,221,2.284,222,3.294,223,2.082,224,2.082,225,4.087,226,2.082,227,2.082,228,2.082,229,2.082,230,3.294,231,4.087,232,3.294,233,2.082,234,2.082,235,2.082,236,2.082,237,4.087,238,3.294,239,2.082,240,2.082,241,2.082,242,2.515,243,4.054,244,2.284,245,1.814,246,2.824,247,2.515,248,3.548,249,3.548,250,1.597,251,2.824,252,1.946,253,2.284,254,0.459,255,0.726,256,0.459,257,1.025,258,0.459,259,0.459,260,0.414,261,0.459,262,0.414,263,0.459,264,0.414,265,0.459,266,0.414,267,0.459,268,0.414,269,0.459,270,0.459,271,0.414,272,0.436,273,0.726,274,0.414,275,0.371,276,0.414,277,0.459,278,0.414,279,0.459,280,0.392,281,0.436,282,0.459,283,0.414,284,0.459,285,0.414,286,0.459,287,0.459,288,0.414,289,0.459,290,0.414,291,0.459,292,0.436,293,0.436,294,0.459,295,0.414,296,0.459,297,0.414,298,0.459,299,0.414,300,0.436,301,0.459,302,0.414,303,0.436,304,0.459,305,0.414,306,0.459,307,0.414,308,0.436,309,0.459,310,0.436,311,0.459,312,0.414,313,0.459,314,0.392,315,0.459,316,0.459,317,0.009,318,0.009]],["title/components/AiComponent.html",[0,0.048,260,0.725]],["body/components/AiComponent.html",[0,0.077,1,0.761,2,1.024,3,0.246,4,0.183,5,0.845,7,0.845,8,0.845,9,0.137,25,0.761,26,1.675,27,1.282,28,0.646,29,0.73,30,1.796,31,1.541,32,1.197,34,2.03,35,0.761,38,1.137,40,0.231,41,0.73,51,0.775,61,0.775,66,0.589,70,0.611,71,0.02,72,0.468,73,0.352,74,0.576,80,0.802,85,0.576,100,0.543,118,0.334,130,1.137,134,0.822,135,0.687,153,0.286,156,0.16,158,1.976,163,1.267,165,0.16,166,0.183,168,0.87,177,1.137,191,1.039,254,0.845,255,1.285,256,0.845,257,1.375,258,0.845,259,0.845,260,1.238,261,0.845,262,0.761,263,0.845,264,0.761,265,0.845,266,0.761,267,0.845,268,0.761,269,0.845,270,0.845,271,0.761,272,0.802,273,1.137,274,0.761,275,0.683,276,0.761,277,0.845,278,0.761,279,0.845,280,0.721,281,0.802,282,0.845,283,0.761,284,0.845,285,0.761,286,0.845,287,0.845,288,0.761,289,0.845,290,0.761,291,0.845,292,0.802,293,0.802,294,0.845,295,0.761,296,0.845,297,0.761,298,0.845,299,0.761,300,0.802,301,0.845,302,0.761,303,0.802,304,0.845,305,0.761,306,0.845,307,0.761,308,0.802,309,0.845,310,0.802,311,0.845,312,0.761,313,0.845,314,0.721,315,0.845,316,0.845,317,0.013,318,0.013,319,3.284,320,3.683,321,4.041,322,5.828,323,5.156,324,2.225,325,5.156,326,5.828,327,5.828,328,3.715,329,6.702,330,3.83,331,4.323,332,5.828,333,6.234,334,5.156,335,5.156,336,3.83,337,6.234,338,2.171,339,3.83,340,2.441,341,3.284,342,2.263,343,4.421,344,3.83,345,2.925,346,3.284,347,3.83,348,3.83,349,3.83,350,3.83,351,2.656,352,3.284,353,5.828,354,2.441,355,3.83,356,5.156,357,3.83,358,3.83,359,3.83,360,3.286,361,5.156]],["title/components/AnalysisComponent.html",[0,0.048,262,0.725]],["body/components/AnalysisComponent.html",[0,0.085,1,0.928,2,1.165,3,0.28,4,0.223,5,1.03,7,1.03,8,1.03,9,0.167,25,0.928,26,1.697,27,1.298,28,0.788,29,0.831,32,1.085,35,0.928,38,1.294,71,0.019,72,0.471,80,0.978,100,0.662,130,1.294,153,0.195,156,0.195,165,0.195,166,0.223,254,1.03,255,1.294,256,1.03,257,1.484,258,1.03,259,1.03,260,0.928,261,1.03,262,1.336,263,1.03,264,0.928,265,1.03,266,0.928,267,1.03,268,0.928,269,1.03,270,1.03,271,0.928,272,0.978,273,1.294,274,0.928,275,0.833,276,0.928,277,1.03,278,0.928,279,1.03,280,0.88,281,0.978,282,1.03,283,0.928,284,1.03,285,0.928,286,1.03,287,1.03,288,0.928,289,1.03,290,0.928,291,1.03,292,0.978,293,0.978,294,1.03,295,0.928,296,1.03,297,0.928,298,1.03,299,0.928,300,0.978,301,1.03,302,0.928,303,0.978,304,1.03,305,0.928,306,1.03,307,0.928,308,0.978,309,1.03,310,0.978,311,1.03,312,0.928,313,1.03,314,0.88,315,1.03,316,1.03,317,0.015,318,0.015,324,2.532,362,4.006,363,5.769,364,5.867,365,5.867,366,5.031]],["title/components/AppComponent.html",[0,0.048,264,0.725]],["body/components/AppComponent.html",[0,0.076,1,0.947,2,0.678,3,0.201,4,0.104,5,0.481,6,0.996,7,0.481,8,0.481,9,0.078,11,1.664,13,2.369,25,0.433,26,1.59,27,1.24,28,0.368,29,0.484,30,1.189,31,1.258,32,0.793,34,1.466,35,0.433,36,1.56,38,0.753,40,0.131,41,0.484,51,0.514,54,2.458,61,0.717,65,3.065,66,0.62,68,1.664,70,0.825,71,0.02,72,0.477,73,0.331,74,0.778,79,3.035,80,0.998,85,0.778,92,0.633,94,2.367,95,2.367,96,2.607,100,0.309,107,3.298,114,2.476,118,0.451,126,2.017,130,0.753,133,0.651,134,0.76,135,0.635,138,1.868,141,1.511,146,2.607,148,1.868,153,0.299,154,1.511,156,0.142,163,0.721,164,1.511,165,0.091,166,0.104,167,3.03,168,1.03,171,1.2,191,0.609,197,0.589,245,1.2,254,0.481,255,0.753,256,0.481,257,1.051,258,0.481,259,0.481,260,0.947,261,0.481,262,0.947,263,0.481,264,1.09,265,0.481,266,0.947,267,0.481,268,0.947,269,0.481,270,0.481,271,0.433,272,0.456,273,0.753,274,0.433,275,0.389,276,0.433,277,0.481,278,0.947,279,0.481,280,0.897,281,1.083,282,0.481,283,0.433,284,0.481,285,0.433,286,0.481,287,0.481,288,0.947,289,0.481,290,0.433,291,0.481,292,0.998,293,0.456,294,0.481,295,0.947,296,0.481,297,0.947,298,0.481,299,0.433,300,0.456,301,0.481,302,0.433,303,0.456,304,0.481,305,0.947,306,0.481,307,0.433,308,0.456,309,0.481,310,0.998,311,0.481,312,0.947,313,0.481,314,0.897,315,0.481,316,0.481,317,0.009,318,0.009,342,2.017,346,1.868,367,1.868,368,1.164,369,3.057,370,2.927,371,2.607,372,5.093,373,3.298,374,5.174,375,3.691,376,4.765,377,3.951,378,3.657,379,2.607,380,4.765,381,3.286,382,3.414,383,4.21,384,3.414,385,3.61,386,4.21,387,4.21,388,4.21,389,3.214,390,2.417,391,4.21,392,4.21,393,3.414,394,3.414,395,2.607,396,3.414,397,3.414,398,1.868,399,4.535,400,2.311,401,3.272,402,2.179,403,6.248,404,4.119,405,4.765,406,3.272,407,3.414,408,6.107,409,3.414,410,5.174,411,2.607,412,4.21,413,4.21,414,3.414,415,4.191,416,2.607,417,2.927,418,2.919,419,3.806,420,2.607,421,2.017,422,2.927,423,2.607,424,1.762,425,3.414,426,2.782,427,2.176,428,2.927,429,2.607,430,3.817,431,2.179,432,3.214,433,3.414,434,3.414,435,2.927,436,2.927,437,2.927,438,2.927,439,3.414,440,3.414,441,2.179,442,3.414,443,1.719,444,5.489,445,2.179,446,2.179,447,2.179,448,2.179,449,2.179,450,2.179,451,2.179,452,2.179,453,2.179,454,2.683,455,2.021,456,2.179,457,2.179,458,2.607,459,2.607,460,3.414,461,3.414,462,2.927,463,2.927,464,3.414,465,3.414,466,2.179,467,2.179,468,3.037,469,2.179,470,2.927,471,2.607,472,2.487,473,2.179,474,5.489,475,4.191,476,3.414,477,5.174,478,2.179,479,3.414,480,3.414,481,2.927,482,2.367,483,2.179,484,2.179,485,2.179,486,3.414,487,1.868,488,1.511,489,1.511,490,2.179,491,2.179,492,2.179,493,1.868,494,1.868,495,1.762,496,1.868,497,2.179,498,2.179,499,2.179,500,2.179,501,2.179,502,1.868,503,2.179,504,2.179,505,2.179,506,2.179,507,2.179,508,2.179,509,2.179,510,2.179,511,1.287,512,1.389,513,1.287,514,1.511,515,2.179,516,1.664,517,2.179,518,1.868,519,2.179,520,2.179,521,1.511,522,2.179,523,2.179,524,1.511,525,2.179,526,2.179,527,2.179,528,1.868,529,2.179,530,2.367,531,2.179,532,2.179,533,2.179,534,2.179,535,2.179,536,3.414,537,3.414,538,2.179,539,1.868,540,1.881,541,2.179,542,2.179,543,2.179,544,2.179,545,2.179,546,2.179,547,2.927,548,1.511,549,1.2,550,2.179,551,2.179,552,2.179,553,1.664,554,3.638,555,1.389,556,2.179,557,2.179,558,2.179,559,1.287,560,2.179,561,1.868,562,1.389,563,1.664,564,1.868,565,2.179,566,1.389,567,2.179,568,2.179,569,1.868,570,3.414,571,2.179,572,2.179,573,1.868,574,2.179,575,2.179,576,3.414,577,2.179,578,2.927,579,2.179,580,0.89]],["title/injectables/AppVersionService.html",[581,0.371,582,2.157]],["body/injectables/AppVersionService.html",[3,0.233,4,0.233,9,0.234,13,2.104,27,1.016,40,0.294,41,0.854,51,0.906,61,1.055,66,0.617,71,0.02,73,0.294,79,2.753,85,1.027,114,2.948,118,0.624,134,0.777,135,0.649,153,0.251,156,0.203,165,0.203,166,0.233,168,1.103,177,1.075,317,0.016,318,0.016,368,1.191,369,4.223,581,0.613,582,4.035,583,1.613,584,5.856,585,4.353,586,4.18,587,4.6,588,5.747,589,5.165,590,5.165,591,3.207,592,4.177,593,4.534,594,6.83,595,6.024,596,4.875,597,5.165,598,6.024,599,5.165,600,3.107,601,1.253,602,4.875]],["title/interfaces/Budget.html",[603,0.987,604,1.668]],["body/interfaces/Budget.html",[3,0.222,4,0.222,9,0.166,40,0.28,41,0.828,61,0.698,71,0.02,73,0.405,92,0.962,118,0.647,129,2.731,133,1.386,153,0.244,156,0.194,165,0.244,166,0.222,168,0.985,177,1.557,191,1.042,250,3.254,317,0.015,318,0.015,368,1.133,402,2.346,443,1.894,455,1.535,581,0.594,601,1.192,603,1.254,604,3.226,605,2.555,606,3.541,607,5.027,608,3.462,609,3.254,610,2.346,611,2.393,612,2.956,613,2.12,614,2.385,615,2.143,616,2.12,617,2.74,618,3.462,619,3.541,620,2.74,621,2.74,622,3.777,623,2.74,624,2.74,625,3.216,626,5.481,627,3.777,628,3.977,629,3.451,630,2.74,631,3.451,632,5.008,633,3.1,634,3.216,635,3.977,636,3.216]],["title/components/BudgetComponent.html",[0,0.048,266,0.725]],["body/components/BudgetComponent.html",[0,0.056,1,0.435,2,0.681,3,0.164,4,0.105,5,0.483,7,0.483,8,0.483,9,0.078,15,1.228,16,0.725,23,1.769,24,2.495,25,0.435,26,1.591,27,1.217,28,0.875,29,0.677,30,1.194,31,1.644,32,0.796,33,3.225,34,1.471,35,0.435,38,0.756,40,0.132,41,0.486,51,0.516,52,4.097,54,2.465,57,4.097,61,0.516,63,3.648,64,2.514,65,2.966,66,0.679,70,0.349,71,0.02,72,0.339,73,0.405,74,0.329,75,3.225,80,0.459,85,0.941,86,3.96,92,0.988,100,0.31,115,2.257,118,0.453,129,2.302,130,0.756,133,1.025,134,1.047,135,0.875,148,2.005,153,0.24,156,0.091,157,1.672,158,1.13,159,1.396,163,0.725,164,1.519,165,0.143,166,0.164,168,0.875,170,1.878,171,1.206,173,1.294,177,0.931,178,1.672,179,3.225,180,1.878,191,1.229,197,1.862,207,1.062,210,1.878,211,3.225,212,2.929,213,1.062,214,1.93,215,1.878,216,1.878,217,1.878,219,1.519,221,1.519,242,2.617,243,3.814,250,2.048,254,0.483,255,0.756,256,0.483,257,1.054,258,0.483,259,0.483,260,0.435,261,0.483,262,0.435,263,0.483,264,0.435,265,0.483,266,0.949,267,0.483,268,0.435,269,0.483,270,0.483,271,0.435,272,0.459,273,0.756,274,0.435,275,0.391,276,0.435,277,0.483,278,0.435,279,0.483,280,0.412,281,0.459,282,0.483,283,0.435,284,0.483,285,0.435,286,0.483,287,0.483,288,0.435,289,0.483,290,0.435,291,0.483,292,0.459,293,0.459,294,0.483,295,0.435,296,0.483,297,0.435,298,0.483,299,0.435,300,0.459,301,0.483,302,0.435,303,0.459,304,0.483,305,0.435,306,0.483,307,0.435,308,0.459,309,0.483,310,0.459,311,0.483,312,0.435,313,0.483,314,0.412,315,0.483,316,0.483,317,0.009,318,0.009,324,1.479,338,1.194,381,2.465,390,2.224,454,1.396,455,1.134,511,1.294,540,3.03,547,2.939,548,1.519,549,1.206,573,1.878,580,1.951,604,3.169,608,2.465,609,2.048,610,2.018,612,3.664,637,1.672,638,3.428,639,3.428,640,4.224,641,4.224,642,4.224,643,4.224,644,4.224,645,5.187,646,4.224,647,4.224,648,2.795,649,4.224,650,3.622,651,5.187,652,4.224,653,4.224,654,3.622,655,4.224,656,4.778,657,4.778,658,3.648,659,4.778,660,4.778,661,4.778,662,4.097,663,1.878,664,3.428,665,2.19,666,2.19,667,2.19,668,2.19,669,2.19,670,2.19,671,2.19,672,2.19,673,2.19,674,2.19,675,2.19,676,2.19,677,2.19,678,4.2,679,3.225,680,2.19,681,2.19,682,2.19,683,2.19,684,2.19,685,2.19,686,2.19,687,2.19,688,2.19,689,2.19,690,2.19,691,2.19,692,2.19,693,1.672,694,1.878,695,2.19,696,1.294,697,1.878,698,1.878,699,2.19,700,2.19,701,1.519,702,1.519,703,2.19,704,1.519,705,2.939,706,4.224,707,2.19,708,4.224,709,3.622,710,2.19,711,2.19,712,4.224,713,4.224,714,2.19,715,2.19,716,2.19,717,2.19,718,3.428,719,2.19,720,3.428,721,2.19,722,2.19,723,2.19,724,3.428,725,2.19,726,2.19,727,2.19,728,2.19,729,4.778,730,2.19,731,2.19,732,2.19,733,2.19,734,2.19,735,1.878,736,1.878,737,2.19,738,5.187,739,2.19,740,3.622,741,2.19,742,4.929,743,4.224,744,3.428,745,4.224,746,2.19,747,0.945,748,1.878,749,2.19,750,4.778,751,1.672,752,1.672,753,1.878,754,1.672,755,1.294,756,3.428,757,2.19,758,3.428,759,2.19,760,2.19,761,1.878,762,2.19,763,2.377,764,2.19,765,2.19,766,2.19,767,2.19,768,3.428,769,2.19,770,3.428,771,2.939,772,3.648,773,2.939,774,1.878,775,4.224,776,2.19,777,3.428,778,2.19,779,2.19,780,2.19,781,2.19,782,1.888,783,2.19,784,4.778,785,1.878,786,3.428,787,4.224,788,1.878,789,1.878,790,2.19,791,2.19,792,2.19,793,2.19,794,2.19,795,2.19,796,2.327,797,2.19,798,2.19,799,2.19,800,2.617,801,3.428,802,2.939,803,3.428,804,3.25,805,3.428,806,3.428,807,2.939,808,3.428,809,1.396,810,3.428,811,2.939]],["title/injectables/BudgetService.html",[581,0.371,612,2.327]],["body/injectables/BudgetService.html",[3,0.208,4,0.208,9,0.156,28,0.946,40,0.263,51,0.844,61,0.844,66,0.656,70,1.045,71,0.02,72,0.526,73,0.395,74,0.986,85,1.02,92,1.045,118,0.631,129,2.401,133,1.677,153,0.234,156,0.182,165,0.234,166,0.208,168,1.106,177,1.532,191,1,250,3.178,317,0.015,318,0.015,368,1.063,381,2.894,402,2.548,443,1.778,455,1.856,581,0.571,583,1.44,601,1.119,603,1.177,604,3.174,606,3.324,607,4.899,608,2.246,609,2.111,610,1.597,611,2.246,612,3.575,613,2.995,614,2.29,615,2.058,616,1.989,617,3.873,618,3.382,619,3.324,620,3.314,621,3.667,622,3.667,623,2.572,624,2.572,625,3.019,626,5.321,627,3.667,628,4.81,629,3.873,630,3.667,631,3.314,632,4.81,633,3.009,634,3.019,635,4.81,636,3.019,796,3.09,812,3.019,813,4.353,814,4.353,815,4.353,816,4.353,817,4.353,818,4.353]],["title/components/CalendarComponent.html",[0,0.048,268,0.725]],["body/components/CalendarComponent.html",[0,0.063,1,0.534,2,0.797,3,0.192,4,0.129,5,0.593,7,0.593,8,0.593,9,0.096,15,1.668,16,2.101,21,1.946,23,2.07,24,2.834,25,0.534,26,1.627,27,1.244,28,0.454,29,0.753,31,0.804,32,0.931,34,1.671,35,0.534,38,0.885,40,0.162,41,0.568,51,0.603,54,2.744,61,0.603,64,2.726,66,0.672,70,0.907,71,0.02,72,0.496,73,0.414,74,0.856,80,0.563,85,0.897,91,1.946,92,1.009,100,0.381,114,1.161,115,1.852,116,1.833,118,0.585,130,0.885,133,0.804,134,1.035,135,0.865,142,2.055,148,1.672,153,0.222,156,0.112,159,1.715,163,0.89,165,0.112,166,0.129,168,0.454,173,1.59,191,1.158,193,4.114,197,1.786,207,1.305,213,1.946,244,2.782,245,2.21,254,0.593,255,0.885,256,0.593,257,1.316,258,0.593,259,0.593,260,0.534,261,0.593,262,0.534,263,0.593,264,0.534,265,0.593,266,0.534,267,0.593,268,1.056,269,0.593,270,0.593,271,0.534,272,0.563,273,0.885,274,0.534,275,0.48,276,0.534,277,0.593,278,0.534,279,0.593,280,0.507,281,0.563,282,0.593,283,0.534,284,0.593,285,0.534,286,0.593,287,0.593,288,0.534,289,0.593,290,0.534,291,0.593,292,0.563,293,0.563,294,0.593,295,0.534,296,0.593,297,0.534,298,0.593,299,0.534,300,0.563,301,0.593,302,0.534,303,0.563,304,0.593,305,0.534,306,0.593,307,0.534,308,0.563,309,0.593,310,0.563,311,0.593,312,0.534,313,0.593,314,0.507,315,0.593,316,0.593,317,0.01,318,0.01,324,1.732,338,1.397,389,3.663,390,2.556,511,1.59,540,1.482,578,2.307,580,1.959,608,2.07,609,2.579,610,2.425,648,2.824,654,4.114,658,4.061,662,3.44,663,2.307,678,2.055,701,1.866,702,1.866,709,3.44,736,2.307,747,1.732,774,2.307,804,3.142,809,1.715,819,2.307,820,2.782,821,4.012,822,4.012,823,4.797,824,5.688,825,3.663,826,3.663,827,4.797,828,5.688,829,5.688,830,4.797,831,4.012,832,4.012,833,4.012,834,4.012,835,2.691,836,2.691,837,4.012,838,2.691,839,4.012,840,2.691,841,2.691,842,4.012,843,2.691,844,4.012,845,4.501,846,2.691,847,2.93,848,2.691,849,2.691,850,2.691,851,4.012,852,2.691,853,4.012,854,2.691,855,2.691,856,2.691,857,2.691,858,2.691,859,2.691,860,4.012,861,4.012,862,4.012,863,4.012,864,4.012,865,4.012,866,4.012,867,4.012,868,5.688,869,2.307,870,2.691,871,2.691,872,4.012,873,4.56,874,2.691,875,4.012,876,4.012,877,4.012,878,4.797,879,2.691,880,2.307,881,2.691,882,2.691,883,2.691,884,2.691,885,2.691,886,2.782,887,2.691,888,1.715,889,2.307,890,1.305,891,2.691,892,2.691,893,2.691,894,2.691,895,3.063,896,2.691,897,2.691,898,2.055,899,2.691,900,2.691,901,4.012,902,4.56,903,2.691,904,2.307,905,2.691,906,2.691,907,2.691,908,2.557,909,1.59,910,1.866,911,2.691,912,2.691,913,4.012,914,2.782,915,3.063,916,3.063,917,3.063,918,3.44,919,3.44,920,3.44,921,3.44]],["title/interfaces/Category.html",[100,0.517,603,0.987]],["body/interfaces/Category.html",[3,0.196,4,0.196,9,0.147,16,1.358,29,0.855,40,0.248,41,0.765,71,0.02,72,0.515,73,0.42,92,0.907,100,1.023,118,0.659,133,1.227,153,0.267,156,0.171,165,0.225,166,0.196,168,0.911,177,1.577,181,3.501,191,1.276,197,1.631,317,0.014,318,0.014,368,1.003,390,2.334,402,2.214,426,1.991,427,2.617,443,1.676,454,2.617,455,1.358,553,3.135,555,2.617,580,1.676,581,0.549,601,1.055,603,1.11,605,2.262,610,2.352,611,2.118,613,1.876,614,2.205,615,1.981,616,1.876,617,2.426,618,3.307,620,2.426,621,2.426,622,3.564,623,2.426,624,2.426,627,3.19,629,3.19,630,2.426,631,2.426,633,2.618,747,2.766,914,2.847,922,3.135,923,5.709,924,3.531,925,3.531,926,4.038,927,3.52,928,3.52,929,2.426,930,2.617,931,2.847,932,2.617,933,2.426,934,1.167,935,3.52,936,2.617,937,2.089,938,3.442,939,3.52,940,3.52,941,4.63,942,3.135,943,2.118,944,3.52,945,3.52,946,2.847,947,2.426,948,3.52,949,3.52,950,3.52,951,5.173,952,3.52,953,3.52,954,3.52,955,3.52,956,4.63,957,3.52,958,3.744,959,3.52,960,3.52,961,3.52]],["title/components/CategoryDropdownComponent.html",[0,0.048,35,0.725]],["body/components/CategoryDropdownComponent.html",[0,0.081,1,0.518,2,0.779,3,0.187,4,0.125,5,0.576,6,1.193,7,1.039,8,0.576,9,0.093,13,2.423,15,0.671,25,0.518,26,1.622,27,1.241,28,0.44,29,0.742,30,1.366,31,1.172,32,0.91,34,1.641,35,1.04,36,1.792,38,0.865,40,0.157,41,0.556,48,4.287,51,0.59,54,2.702,61,0.709,66,0.65,68,2.994,70,0.835,71,0.02,72,0.505,73,0.416,74,0.947,79,2.695,80,0.546,85,0.845,89,3.999,92,0.986,96,2.994,99,2.5,100,1.051,101,3.363,102,5.305,103,4.364,106,2.139,118,0.515,125,3.267,126,2.317,128,2.5,130,1.155,133,1.172,134,1.116,135,0.748,138,1.233,144,2.994,146,2.994,147,2.702,148,1.647,151,3.632,153,0.219,154,1.81,155,1.81,156,0.109,161,4.818,163,0.864,165,0.109,166,0.225,167,2.54,168,0.44,189,1.993,190,2.238,191,0.465,197,1.06,254,0.576,255,0.865,256,0.576,257,1.155,258,0.576,259,0.576,260,0.518,261,0.576,262,0.518,263,0.576,264,0.518,265,0.576,266,0.518,267,0.576,268,0.518,269,0.576,270,0.576,271,0.518,272,1.348,273,0.865,274,0.518,275,0.465,276,0.518,277,0.576,278,0.518,279,0.576,280,0.491,281,0.546,282,0.576,283,0.518,284,0.576,285,0.518,286,0.576,287,0.576,288,0.518,289,0.576,290,0.518,291,0.576,292,0.546,293,1.176,294,0.576,295,0.518,296,0.576,297,0.518,298,0.576,299,0.518,300,0.546,301,0.576,302,0.518,303,0.546,304,0.576,305,0.518,306,0.576,307,0.518,308,0.546,309,0.576,310,0.546,311,0.576,312,0.518,313,0.576,314,0.491,315,0.576,316,0.576,317,0.01,318,0.01,371,2.994,390,2.435,395,2.994,411,2.994,429,1.993,430,3.547,432,3.999,438,4.039,455,1.297,488,2.719,511,1.542,554,2.994,555,1.664,785,4.491,933,3.614,934,0.742,937,2.757,962,5.957,963,2.238,964,3.363,965,4.491,966,4.491,967,4.711,968,3.922,969,4.711,970,4.711,971,5.238,972,3.922,973,3.922,974,5.238,975,1.902,976,5.615,977,4.711,978,2.719,979,4.711,980,3.363,981,2.238,982,3.922,983,5.238,984,2.61,985,5.057,986,5.238,987,2.61,988,3.363,989,3.363,990,3.363,991,3.922,992,2.61,993,3.632,994,2.61,995,2.238,996,3.922,997,4.711,998,4.711,999,3.597,1000,3.597,1001,2.61,1002,3.922,1003,2.61,1004,3.922,1005,3.363,1006,3.922,1007,2.61,1008,2.61,1009,3.363,1010,2.61,1011,3.922,1012,2.61,1013,2.719,1014,2.238,1015,2.61,1016,4.039,1017,2.61,1018,3.922,1019,3.922,1020,3.922,1021,5.615,1022,2.61,1023,2.238,1024,1.993,1025,2.238,1026,2.61,1027,2.61,1028,3.363,1029,3.922]],["title/injectables/CategoryService.html",[581,0.371,933,2.157]],["body/injectables/CategoryService.html",[3,0.187,4,0.187,9,0.14,16,1.296,28,0.883,29,0.835,40,0.236,51,0.787,61,0.589,66,0.65,70,1.003,71,0.02,72,0.526,73,0.38,74,0.946,85,1.015,92,1.015,100,1.023,118,0.638,133,1.564,153,0.262,156,0.163,165,0.218,166,0.187,168,1.061,177,1.563,181,3.436,191,1.264,197,1.593,317,0.014,318,0.014,368,0.957,381,2.7,390,2.664,402,2.475,426,1.899,427,2.496,443,1.599,454,2.496,455,1.731,553,2.99,555,2.496,580,1.599,581,0.533,583,1.296,601,1.006,603,1.059,610,1.92,611,2.021,613,2.875,614,2.137,615,1.92,616,1.79,617,3.717,618,3.246,620,3.092,621,3.482,622,3.482,623,2.314,624,2.314,627,3.092,629,3.717,630,3.482,631,2.314,633,2.538,747,1.69,796,2.883,812,2.716,914,2.716,922,2.99,923,4.487,924,2.157,925,2.157,926,3.482,927,3.358,928,3.358,929,2.314,930,2.496,931,2.716,932,2.496,933,3.092,934,1.113,935,5.394,936,2.496,937,2.024,938,3.336,939,3.358,940,3.358,941,4.487,942,2.99,943,2.021,944,3.358,945,3.358,946,2.716,947,2.314,948,3.358,949,3.358,950,3.358,951,5.054,952,4.487,953,3.358,954,4.487,955,3.358,956,4.487,957,3.358,958,3.629,959,3.358,960,3.358,961,3.358,1030,3.916,1031,3.916,1032,3.916,1033,3.916,1034,3.916,1035,3.916,1036,3.916]],["title/interfaces/ChatMessage.html",[603,0.987,1037,2.327]],["body/interfaces/ChatMessage.html",[3,0.179,4,0.179,9,0.134,15,0.964,25,0.745,40,0.226,41,0.72,71,0.02,72,0.496,73,0.39,78,1.935,114,2.668,118,0.594,135,0.861,138,2.094,153,0.278,156,0.157,165,0.212,166,0.179,168,1.043,177,1.502,191,1.253,197,1.014,207,1.819,213,1.819,214,1.714,252,2.216,275,0.669,317,0.013,318,0.013,328,2.391,338,1.307,340,2.391,351,4.286,354,2.391,360,2.391,368,0.916,400,2.796,406,2.067,482,2.601,489,2.601,495,1.935,512,2.391,513,2.216,581,0.517,587,3.882,591,1.714,600,2.391,601,0.964,603,1.014,605,2.067,615,1.376,782,2.067,847,2.067,890,3.133,908,3.24,909,2.216,929,2.216,934,1.066,1037,3.94,1038,2.864,1039,2.864,1040,5.201,1041,5.086,1042,3.882,1043,3.525,1044,3.882,1045,4.359,1046,2.864,1047,2.391,1048,2.391,1049,2.864,1050,3.217,1051,3.217,1052,2.864,1053,2.864,1054,2.864,1055,2.864,1056,2.601,1057,3.217,1058,3.217,1059,2.864,1060,3.217,1061,2.864,1062,3.217,1063,3.217,1064,3.94,1065,5.201,1066,3.217,1067,5.3,1068,3.217,1069,3.217,1070,4.359,1071,4.359,1072,3.882,1073,3.217,1074,3.217,1075,2.864,1076,3.217,1077,3.217,1078,3.217,1079,4.403,1080,3.217,1081,3.217,1082,3.217,1083,3.217,1084,2.864,1085,4.403,1086,3.217,1087,3.217,1088,2.391,1089,3.217,1090,3.217,1091,3.217,1092,3.882,1093,5.3,1094,3.676,1095,4.359,1096,4.359,1097,4.359,1098,3.217,1099,3.217,1100,2.391,1101,4.359,1102,3.882,1103,3.217,1104,3.217,1105,3.217,1106,3.217,1107,3.217,1108,3.217,1109,3.217,1110,3.217,1111,3.217,1112,2.864,1113,3.217,1114,2.864,1115,2.864,1116,2.864,1117,3.217,1118,3.217,1119,2.864,1120,3.217,1121,2.601,1122,3.217,1123,3.217,1124,3.217,1125,2.601,1126,3.217,1127,4.359,1128,3.676,1129,2.601,1130,3.217,1131,3.217,1132,2.864,1133,3.882,1134,3.882,1135,2.601,1136,2.864,1137,3.882,1138,2.864,1139,3.882,1140,2.391,1141,2.864,1142,2.864,1143,4.403,1144,2.864,1145,2.864,1146,2.864,1147,2.864]],["title/injectables/ConfigService.html",[581,0.371,1148,2.532]],["body/injectables/ConfigService.html",[3,0.22,4,0.22,9,0.164,13,1.983,40,0.277,41,0.822,51,0.873,61,0.957,66,0.601,71,0.02,73,0.277,76,3.43,78,3.45,79,2.653,83,3.7,85,1.006,114,3.04,118,0.602,134,0.732,135,0.848,153,0.242,156,0.192,165,0.192,166,0.22,168,1.074,177,1.404,308,1.215,317,0.015,318,0.015,368,1.122,369,3.43,416,5.265,421,4.275,530,4.637,581,0.591,583,1.52,591,3.337,592,4.025,593,4.413,600,2.928,601,1.181,1148,4.637,1149,3.939,1150,4.977,1151,5.805,1152,4.637,1153,4.977,1154,6.039,1155,5.805,1156,5.913,1157,5.457,1158,6.686,1159,5.805,1160,4.594,1161,4.977,1162,4.977,1163,5.805,1164,4.977,1165,4.025,1166,4.025,1167,5.805,1168,5.805,1169,5.805,1170,4.594]],["title/components/CustomModalComponent.html",[0,0.048,271,0.725]],["body/components/CustomModalComponent.html",[0,0.081,1,0.851,2,1.103,3,0.265,4,0.205,5,0.945,7,0.945,8,0.945,9,0.153,25,0.851,26,1.688,27,1.291,28,0.723,29,0.787,30,1.934,31,1.66,32,0.995,35,0.851,38,1.224,40,0.259,66,0.582,71,0.02,72,0.446,73,0.372,80,0.897,92,0.644,100,0.607,106,2.661,118,0.569,130,1.224,134,0.885,135,0.74,153,0.179,156,0.179,165,0.179,166,0.205,254,0.945,255,1.224,256,0.945,257,1.437,258,0.945,259,0.945,260,0.851,261,0.945,262,0.851,263,0.945,264,0.851,265,0.945,266,0.851,267,0.945,268,0.851,269,0.945,270,0.945,271,1.294,272,1.413,273,1.224,274,0.851,275,0.764,276,0.851,277,0.945,278,0.851,279,0.945,280,0.807,281,0.897,282,0.945,283,0.851,284,0.945,285,0.851,286,0.945,287,0.945,288,0.851,289,0.945,290,0.851,291,0.945,292,0.897,293,0.897,294,0.945,295,0.851,296,0.945,297,0.851,298,0.945,299,0.851,300,0.897,301,0.945,302,0.851,303,0.897,304,0.945,305,0.851,306,0.945,307,0.851,308,0.897,309,0.945,310,0.897,311,0.945,312,0.851,313,0.945,314,0.807,315,0.945,316,0.945,317,0.014,318,0.014,809,2.731,975,2.692,1171,5.587,1172,5.587,1173,3.272,1174,4.975,1175,4.761,1176,6.159,1177,6.159,1178,5.375,1179,4.285,1180,2.971,1181,4.285,1182,4.285]],["title/interfaces/Expense.html",[29,0.517,603,0.987]],["body/interfaces/Expense.html",[3,0.172,4,0.172,9,0.129,15,1.69,16,1.19,21,2.945,29,0.998,40,0.217,41,0.7,64,1.643,71,0.02,73,0.433,74,0.989,91,2.945,92,0.849,100,0.7,115,2.217,116,2.775,118,0.666,129,2.606,133,1.075,153,0.235,156,0.15,165,0.206,166,0.172,168,0.607,177,1.602,181,2.945,182,3.346,186,3.346,191,1.296,192,2.494,194,2.746,197,1.821,250,3.189,317,0.013,318,0.013,338,1.965,368,0.879,402,2.07,443,1.468,455,2.009,580,1.468,581,0.503,601,0.924,603,0.972,605,1.981,609,1.744,610,2.228,611,1.855,613,1.643,614,2.017,615,1.812,616,1.643,617,2.125,618,3.393,620,2.125,621,2.125,622,3.588,623,2.125,624,2.125,625,2.494,627,3.333,629,2.918,630,2.125,631,2.918,633,2.945,634,3.425,636,3.425,895,2.746,929,2.125,930,2.292,931,2.494,932,2.292,934,1.022,936,2.292,937,1.391,938,2.292,946,2.494,947,2.125,958,2.494,1183,2.746,1184,5.458,1185,5.458,1186,4.861,1187,4.827,1188,3.084,1189,3.084,1190,3.084,1191,3.084,1192,3.084,1193,3.084,1194,3.084,1195,4.235,1196,3.084,1197,3.084,1198,3.084,1199,3.084,1200,3.084,1201,3.084,1202,3.084,1203,3.084,1204,3.084,1205,3.084,1206,3.084,1207,3.084,1208,3.084,1209,3.084,1210,4.837,1211,3.084,1212,4.837,1213,3.084,1214,3.084,1215,3.084,1216,3.084,1217,3.084,1218,3.084,1219,4.837,1220,3.084,1221,3.084,1222,3.084,1223,3.084,1224,4.235,1225,3.084]],["title/components/ExpenseDetailsModalComponent.html",[0,0.048,274,0.725]],["body/components/ExpenseDetailsModalComponent.html",[0,0.064,1,0.544,2,0.808,3,0.194,4,0.131,5,0.604,7,0.604,8,0.604,9,0.098,15,1.246,21,3.014,23,2.098,24,2.864,25,0.544,26,1.629,27,1.246,28,0.462,29,0.94,30,1.416,31,1.215,32,0.944,33,3.702,34,1.689,35,1.066,38,0.897,40,0.165,41,0.576,48,3.702,51,0.611,54,2.768,55,3.486,61,0.611,62,2.348,63,4.096,66,0.666,70,0.648,71,0.02,72,0.431,73,0.4,74,0.611,75,3.104,80,0.573,85,0.935,86,3.702,91,3.014,92,0.935,97,3.486,100,0.954,106,2.19,115,2.165,116,2.84,118,0.468,129,2.523,130,0.897,134,0.773,135,0.646,144,3.104,148,1.524,153,0.239,156,0.17,157,2.091,158,1.413,161,1.899,162,2.348,163,0.906,165,0.114,166,0.131,168,0.462,173,2.402,178,2.091,179,4.376,181,1.971,182,1.509,183,3.486,186,1.509,188,2.348,189,2.091,191,0.488,242,3.104,243,4.427,244,3.72,245,2.955,246,3.486,247,3.104,248,4.096,249,4.096,250,1.971,251,3.486,252,3.169,253,3.72,254,0.604,255,0.897,256,0.604,257,1.183,258,0.604,259,0.604,260,0.544,261,0.604,262,0.544,263,0.604,264,0.544,265,0.604,266,0.544,267,0.604,268,0.544,269,0.604,270,0.604,271,0.544,272,0.573,273,0.897,274,1.066,275,1.344,276,0.544,277,0.604,278,0.544,279,0.604,280,0.516,281,0.573,282,0.604,283,0.544,284,0.604,285,0.544,286,0.604,287,0.604,288,0.544,289,0.604,290,0.544,291,0.604,292,0.573,293,0.573,294,0.604,295,0.544,296,0.604,297,0.544,298,0.604,299,0.544,300,0.573,301,0.604,302,0.544,303,0.573,304,0.604,305,0.544,306,0.604,307,0.544,308,0.573,309,0.604,310,0.573,311,0.604,312,0.544,313,0.604,314,0.516,315,0.604,316,0.604,317,0.011,318,0.011,338,1.416,455,1.345,648,2.619,658,3.702,796,3.157,811,3.486,917,3.104,975,1.971,978,2.819,993,4.31,1000,4.584,1013,3.72,1173,2.091,1174,3.104,1175,3.486,1226,5.421,1227,5.421,1228,6.087,1229,4.848,1230,5.364,1231,5.364,1232,5.364,1233,5.364,1234,5.731,1235,4.848,1236,4.914,1237,4.065,1238,2.739,1239,2.739,1240,2.739,1241,2.739,1242,2.739,1243,2.739,1244,2.739,1245,2.739,1246,2.739,1247,2.739,1248,2.739,1249,2.739,1250,2.739,1251,2.739,1252,4.065,1253,2.739,1254,2.739,1255,2.739,1256,2.739,1257,2.739,1258,2.739,1259,2.739,1260,2.739,1261,2.739,1262,2.739,1263,4.848,1264,2.739,1265,2.739,1266,2.739,1267,2.739,1268,2.739,1269,2.739,1270,2.739,1271,2.739,1272,2.739,1273,4.065,1274,4.065,1275,4.065,1276,4.065,1277,4.065,1278,4.065,1279,4.065,1280,4.065]],["title/components/ExpenseListComponent.html",[0,0.048,276,0.725]],["body/components/ExpenseListComponent.html",[0,0.074,1,0.707,2,0.974,3,0.234,4,0.17,5,0.785,7,0.785,8,0.785,9,0.127,15,1.26,16,1.857,25,0.707,26,1.666,27,1.275,28,0.601,29,0.984,30,1.708,31,1.466,32,1.139,34,1.954,35,0.707,38,1.082,40,0.215,51,0.738,61,0.844,66,0.634,70,0.895,71,0.02,72,0.509,73,0.396,74,0.844,80,0.745,85,0.844,92,0.535,100,0.504,106,2.291,115,1.24,118,0.606,130,1.082,134,0.567,135,0.474,153,0.205,156,0.149,163,1.178,165,0.149,166,0.17,177,1.238,191,1.169,197,1.517,207,1.726,213,1.726,250,1.726,254,0.785,255,1.082,256,0.785,257,1.334,258,0.785,259,0.785,260,0.707,261,0.785,262,0.707,263,0.785,264,0.707,265,0.785,266,0.707,267,0.785,268,0.707,269,0.785,270,0.785,271,0.707,272,0.745,273,1.082,274,0.707,275,0.635,276,1.201,277,0.785,278,0.707,279,0.785,280,0.67,281,0.745,282,0.785,283,0.707,284,0.785,285,0.707,286,0.785,287,0.785,288,0.707,289,0.785,290,0.707,291,0.785,292,0.745,293,1.175,294,0.785,295,0.707,296,0.785,297,0.707,298,0.785,299,0.707,300,0.745,301,0.785,302,0.707,303,0.745,304,0.785,305,0.707,306,0.785,307,0.707,308,0.745,309,0.785,310,0.745,311,0.785,312,0.707,313,0.785,314,0.67,315,0.785,316,0.785,317,0.013,318,0.013,324,2.117,338,1.708,610,2.059,648,2.898,701,2.468,735,3.052,747,2.117,904,3.052,915,3.745,916,3.745,917,3.745,947,2.103,975,2.378,978,3.401,993,3.891,1013,3.401,1226,5.226,1227,5.226,1281,5.869,1282,3.052,1283,4.904,1284,4.904,1285,4.904,1286,4.904,1287,4.904,1288,5.611,1289,4.904,1290,3.559,1291,3.559,1292,4.904,1293,6.047,1294,3.559,1295,6.047,1296,3.559,1297,4.904,1298,3.559,1299,3.559,1300,3.559,1301,6.047,1302,3.559,1303,4.205,1304,6.047,1305,3.559,1306,3.559,1307,3.559,1308,3.052,1309,3.559,1310,3.559,1311,3.559,1312,3.559,1313,3.559,1314,4.904]],["title/injectables/ExpenseService.html",[64,1.668,581,0.371]],["body/injectables/ExpenseService.html",[3,0.166,4,0.166,9,0.124,15,1.672,16,1.149,21,1.684,28,0.813,29,1.01,40,0.21,51,0.725,61,0.522,64,2.203,66,0.652,70,1.037,71,0.02,72,0.522,73,0.393,74,0.979,85,1.023,91,1.684,92,0.979,100,0.683,115,1.679,116,1.587,118,0.657,129,2.315,133,1.441,153,0.231,156,0.145,165,0.201,166,0.166,168,0.934,177,1.594,181,1.684,182,1.913,186,1.913,191,1.289,192,2.408,194,2.651,197,1.803,250,3.155,317,0.013,318,0.013,338,2.084,368,0.848,381,2.487,402,2.387,443,1.418,455,1.832,580,1.418,581,0.491,583,1.149,601,0.892,603,0.938,608,1.791,609,2.686,610,1.769,611,1.791,613,2.734,614,1.969,615,1.769,616,1.587,617,3.535,618,3.357,620,2.848,621,3.272,622,3.535,623,2.051,624,2.051,625,2.408,627,3.272,629,3.535,630,3.272,631,2.848,633,2.901,634,3.343,636,3.343,796,2.656,812,2.408,895,2.651,929,2.051,930,2.213,931,2.408,932,2.213,934,0.987,936,2.213,937,1.343,938,2.213,946,2.408,947,2.051,958,2.408,1183,2.651,1184,4.134,1185,4.134,1186,3.681,1187,4.79,1188,2.977,1189,5.13,1190,2.977,1191,2.977,1192,2.977,1193,2.977,1194,2.977,1195,4.134,1196,2.977,1197,2.977,1198,2.977,1199,2.977,1200,2.977,1201,2.977,1202,2.977,1203,2.977,1204,2.977,1205,2.977,1206,2.977,1207,2.977,1208,2.977,1209,2.977,1210,4.749,1211,4.134,1212,4.749,1213,4.134,1214,2.977,1215,4.134,1216,4.134,1217,2.977,1218,2.977,1219,4.749,1220,2.977,1221,2.977,1222,2.977,1223,2.977,1224,4.134,1225,2.977,1315,4.821,1316,4.821,1317,3.472,1318,3.472,1319,3.472,1320,3.472,1321,3.472,1322,3.472,1323,3.472,1324,3.472,1325,3.472]],["title/components/FooterComponent.html",[0,0.048,278,0.725]],["body/components/FooterComponent.html",[0,0.082,1,0.871,2,1.119,3,0.269,4,0.209,5,0.967,7,0.967,8,0.967,9,0.157,25,0.871,26,1.69,27,1.293,28,0.739,29,0.798,32,1.018,35,0.871,38,1.243,40,0.264,41,0.798,61,0.659,66,0.532,70,0.699,71,0.02,72,0.5,73,0.34,74,0.659,80,0.918,100,0.621,118,0.492,130,1.243,134,0.699,135,0.584,153,0.235,156,0.183,165,0.183,166,0.209,254,0.967,255,1.243,256,0.967,257,1.449,258,0.967,259,0.967,260,0.871,261,0.967,262,0.871,263,0.967,264,0.871,265,0.967,266,0.871,267,0.967,268,0.871,269,0.967,270,0.967,271,0.871,272,0.918,273,1.243,274,0.871,275,0.782,276,0.871,277,0.967,278,1.305,279,0.967,280,0.825,281,0.918,282,0.967,283,0.871,284,0.967,285,0.871,286,0.967,287,0.967,288,0.871,289,0.967,290,0.871,291,0.967,292,0.918,293,0.918,294,0.967,295,0.871,296,0.967,297,0.871,298,0.967,299,0.871,300,0.918,301,0.967,302,0.871,303,0.918,304,0.967,305,0.871,306,0.967,307,0.871,308,0.918,309,0.967,310,0.918,311,0.967,312,0.871,313,0.967,314,0.825,315,0.967,316,0.967,317,0.015,318,0.015,324,2.432,582,4.111,585,2.794,934,1.246,1326,3.758,1327,5.634,1328,5.634,1329,5.634,1330,6.226,1331,3.758,1332,5.634,1333,4.383,1334,3.347,1335,4.383,1336,3.347,1337,5.634,1338,5.634,1339,5.634,1340,5.634,1341,5.634]],["title/injectables/GeminiApiService.html",[331,2.532,581,0.371]],["body/injectables/GeminiApiService.html",[3,0.145,4,0.145,9,0.108,15,1.446,16,2.057,21,1.467,28,0.51,29,0.909,40,0.183,41,0.619,51,0.658,61,0.455,64,2.93,66,0.563,70,0.818,71,0.02,72,0.412,73,0.36,74,0.772,85,0.772,91,1.467,115,1.788,118,0.593,129,1.17,133,1.859,134,0.482,135,0.403,138,2.016,153,0.283,156,0.182,165,0.214,166,0.209,168,1.082,177,1.448,182,1.666,186,1.666,191,1.285,207,2.12,213,2.12,214,2.346,252,1.787,253,2.097,281,0.633,317,0.013,318,0.011,320,1.787,328,3.585,331,3.56,338,1.054,340,2.787,345,4.748,351,3.032,352,2.594,354,2.787,360,1.928,363,2.594,368,1.068,400,3.109,421,1.787,471,2.31,495,1.561,513,1.787,563,2.31,581,0.572,583,1.001,591,1.998,600,2.787,601,1.124,603,0.818,608,1.561,609,1.467,753,4.402,755,3.033,886,3.56,890,2.728,908,3.803,909,1.787,915,2.31,916,2.31,918,2.594,919,2.594,920,2.594,921,2.594,934,1.243,999,2.31,1037,3.273,1040,4.748,1041,3.92,1043,4.312,1044,4.295,1046,3.338,1047,2.787,1049,2.31,1052,4.295,1053,3.92,1054,3.92,1055,3.92,1056,3.56,1061,3.338,1085,3.338,1092,2.31,1094,1.928,1100,1.928,1112,2.31,1121,3.032,1125,2.097,1128,3.964,1129,2.097,1133,3.338,1134,4.295,1135,3.032,1136,3.338,1137,4.295,1138,3.338,1139,3.338,1140,2.787,1141,3.338,1142,3.338,1143,3.92,1144,3.338,1145,3.338,1146,3.338,1147,2.31,1161,2.594,1186,2.31,1342,5.332,1343,2.097,1344,5.134,1345,5.625,1346,4.372,1347,2.31,1348,4.372,1349,3.025,1350,5.134,1351,5.967,1352,3.025,1353,5.134,1354,3.025,1355,4.372,1356,3.025,1357,5.134,1358,3.025,1359,3.025,1360,3.025,1361,3.025,1362,4.372,1363,3.025,1364,3.025,1365,3.025,1366,3.025,1367,3.025,1368,3.025,1369,3.025,1370,2.31,1371,2.31,1372,3.025,1373,4.372,1374,3.025,1375,4.372,1376,2.594,1377,3.025,1378,2.594,1379,3.749,1380,4.372,1381,4.402,1382,3.025,1383,3.025,1384,3.025,1385,3.025,1386,3.025,1387,3.025,1388,3.025,1389,3.025,1390,3.025,1391,4.372,1392,3.025,1393,3.025,1394,3.025,1395,3.749,1396,3.749,1397,4.372,1398,3.025,1399,5.134,1400,3.025,1401,2.594,1402,3.025,1403,3.025,1404,3.025,1405,3.025,1406,2.594,1407,3.025,1408,3.025,1409,2.31,1410,3.025,1411,3.025,1412,3.025,1413,3.025,1414,3.025,1415,2.594,1416,2.594,1417,3.025,1418,4.372,1419,3.025,1420,3.025,1421,2.31,1422,3.025,1423,3.025,1424,3.749,1425,3.025,1426,3.025,1427,3.025,1428,3.025,1429,4.372,1430,3.025,1431,3.025,1432,3.025,1433,3.025,1434,2.594,1435,2.31,1436,2.31,1437,3.025,1438,3.025,1439,4.372,1440,3.025,1441,1.928,1442,2.097,1443,3.025,1444,3.025,1445,3.025]],["title/injectables/GetApiService.html",[581,0.371,1446,2.788]],["body/injectables/GetApiService.html",[3,0.274,4,0.274,9,0.205,61,1.054,66,0.541,71,0.02,153,0.239,156,0.239,165,0.239,166,0.274,317,0.017,318,0.017,368,1.399,581,0.675,583,1.895,601,1.472,1343,3.972,1446,5.067,1447,5.067,1448,5.69,1449,5.728]],["title/components/GlobalLoaderComponent.html",[0,0.048,280,0.687]],["body/components/GlobalLoaderComponent.html",[0,0.078,1,0.788,2,1.049,3,0.252,4,0.19,5,0.875,7,0.875,8,0.875,9,0.142,25,0.788,26,1.68,27,1.285,28,0.67,29,0.748,31,1.187,32,1.226,34,2.067,35,0.788,38,1.164,40,0.239,41,0.748,51,0.794,61,0.597,66,0.622,70,0.842,71,0.02,72,0.508,73,0.358,74,0.794,80,0.831,85,0.794,92,0.794,100,0.562,118,0.552,130,1.164,134,0.946,135,0.791,148,1.866,153,0.248,156,0.166,163,1.313,165,0.166,166,0.19,171,2.187,254,0.875,255,1.164,256,0.875,257,1.395,258,0.875,259,0.875,260,0.788,261,0.875,262,0.788,263,0.875,264,0.788,265,0.875,266,0.788,267,0.875,268,0.788,269,0.875,270,0.875,271,0.788,272,0.831,273,1.164,274,0.788,275,0.708,276,0.788,277,0.875,278,0.788,279,0.875,280,1.191,281,1.447,282,0.875,283,0.788,284,0.875,285,0.788,286,0.875,287,0.875,288,0.788,289,0.875,290,0.788,291,0.875,292,0.831,293,0.831,294,0.875,295,0.788,296,0.875,297,0.788,298,0.875,299,0.788,300,0.831,301,0.875,302,0.788,303,0.831,304,0.875,305,0.788,306,0.875,307,0.788,308,0.831,309,0.875,310,0.831,311,0.875,312,0.788,313,0.875,314,0.747,315,0.875,316,0.875,317,0.014,318,0.014,324,2.279,399,4.53,400,3.283,495,3.565,512,2.53,513,2.345,539,3.403,559,3.12,755,3.89,890,2.56,910,3.661,934,1.501,1450,5.806,1451,3.403,1452,5.28,1453,5.28,1454,5.933,1455,4.386,1456,3.969,1457,5.28,1458,3.969,1459,4.527,1460,3.969,1461,3.969,1462,3.969,1463,3.969,1464,5.28,1465,3.969,1466,3.969,1467,3.969,1468,3.031]],["title/injectables/GlobalLoaderService.html",[400,1.77,581,0.371]],["body/injectables/GlobalLoaderService.html",[0,0.082,3,0.243,4,0.243,9,0.182,40,0.307,41,0.876,51,0.93,66,0.654,70,0.986,71,0.02,72,0.497,73,0.402,74,0.93,85,1.002,92,1.002,118,0.581,134,0.811,135,0.678,153,0.258,156,0.212,165,0.212,166,0.243,168,1.124,280,1.399,317,0.016,318,0.016,368,1.243,400,2.999,494,4.363,495,3.726,496,4.363,559,3.654,581,0.629,583,1.684,601,1.308,890,2.467,910,4.289,1455,4.807,1459,5.303,1469,6.091,1470,4.363,1471,4.723,1472,5.088,1473,6.185,1474,5.088,1475,5.088,1476,5.088,1477,5.088,1478,5.088,1479,5.088]],["title/components/GraphsComponent.html",[0,0.048,283,0.725]],["body/components/GraphsComponent.html",[0,0.059,1,0.328,2,0.542,3,0.13,4,0.079,5,0.364,6,0.754,7,0.364,8,0.364,9,0.059,13,2.21,15,0.897,16,2.24,23,1.408,24,2.061,25,0.328,26,1.532,27,1.172,28,0.278,29,0.959,30,0.95,31,1.754,32,0.634,35,0.328,36,1.247,38,0.602,40,0.1,41,0.574,51,0.41,54,2.092,61,0.41,64,2.447,66,0.631,70,0.771,71,0.02,72,0.49,73,0.428,74,0.728,78,2.092,79,2.052,80,0.345,85,0.77,89,4.089,92,0.934,94,2.811,95,2.811,100,0.685,103,2.811,106,2.091,107,1.739,114,2.47,115,1.564,116,2.447,129,1.568,130,0.602,132,2.584,133,1.997,134,0.935,135,0.876,138,1.097,141,1.892,148,2.049,153,0.187,156,0.069,159,1.052,165,0.069,166,0.079,167,2.483,168,0.278,177,1.262,191,1.269,196,1.26,197,1.384,219,1.144,245,2.233,254,0.364,255,0.602,256,0.364,257,1.225,258,0.364,259,0.364,260,0.328,261,0.364,262,0.328,263,0.364,264,0.328,265,0.364,266,0.328,267,0.364,268,0.328,269,0.364,270,0.364,271,0.328,272,0.345,273,0.602,274,0.328,275,0.294,276,0.328,277,0.364,278,0.328,279,0.364,280,0.311,281,0.345,282,0.364,283,1.064,284,0.364,285,0.328,286,0.364,287,0.364,288,0.328,289,0.364,290,0.328,291,0.364,292,0.345,293,1.072,294,0.364,295,0.328,296,0.364,297,0.328,298,0.364,299,0.328,300,0.345,301,0.364,302,0.328,303,0.345,304,0.364,305,0.328,306,0.364,307,0.328,308,0.345,309,0.364,310,0.345,311,0.364,312,0.328,313,0.364,314,0.311,315,0.364,316,0.364,317,0.007,318,0.007,373,3.413,377,4.089,389,2.664,390,2.214,398,1.415,406,1.503,411,2.084,458,3.096,459,2.084,472,2.061,475,2.084,511,0.975,548,1.144,549,2.233,559,3.164,580,1.975,590,2.34,592,4.305,610,1.28,648,1.595,694,2.34,696,3.85,697,2.992,702,2.42,704,3.114,747,2.311,763,1.892,804,3.768,809,1.739,825,2.084,826,3.096,845,4.56,847,3.513,886,1.144,888,1.739,890,2.597,898,2.084,902,3.85,937,1.981,942,2.664,947,2.061,975,1.323,988,2.34,1094,2.224,1119,2.084,1152,1.892,1153,2.34,1165,1.892,1166,1.892,1178,3.429,1370,1.26,1441,1.052,1480,1.415,1481,1.503,1482,4.054,1483,1.892,1484,2.34,1485,2.729,1486,2.992,1487,2.084,1488,3.489,1489,3.489,1490,2.729,1491,3.489,1492,3.489,1493,3.489,1494,3.489,1495,3.489,1496,4.49,1497,4.49,1498,4.578,1499,3.476,1500,2.34,1501,2.34,1502,2.34,1503,2.34,1504,2.729,1505,2.664,1506,3.694,1507,1.65,1508,2.729,1509,2.992,1510,2.729,1511,1.65,1512,2.729,1513,1.65,1514,2.729,1515,2.34,1516,2.34,1517,1.65,1518,2.729,1519,1.65,1520,4.837,1521,4.837,1522,2.729,1523,1.65,1524,2.729,1525,1.65,1526,2.34,1527,3.476,1528,1.65,1529,2.34,1530,2.729,1531,1.65,1532,2.729,1533,1.65,1534,2.729,1535,2.729,1536,2.729,1537,4.054,1538,4.054,1539,5.032,1540,2.729,1541,2.084,1542,2.34,1543,2.729,1544,1.65,1545,2.34,1546,3.489,1547,1.65,1548,3.476,1549,3.489,1550,1.65,1551,4.39,1552,4.054,1553,4.054,1554,3.489,1555,1.65,1556,4.39,1557,3.489,1558,1.65,1559,3.489,1560,1.65,1561,2.34,1562,3.489,1563,2.729,1564,1.65,1565,2.084,1566,2.729,1567,3.489,1568,1.65,1569,3.489,1570,1.65,1571,3.489,1572,4.49,1573,4.49,1574,1.65,1575,1.65,1576,2.34,1577,2.34,1578,1.65,1579,2.992,1580,1.415,1581,1.415,1582,2.664,1583,1.65,1584,1.65,1585,1.65,1586,1.65,1587,3.096,1588,2.34,1589,1.415,1590,2.729,1591,2.34,1592,2.084,1593,5.553,1594,1.415,1595,2.729,1596,3.85,1597,1.65,1598,2.729,1599,2.729,1600,1.65,1601,4.837,1602,2.729,1603,3.489,1604,4.837,1605,1.65,1606,2.34,1607,2.34,1608,2.34,1609,2.34,1610,2.34,1611,2.34,1612,2.34,1613,2.34,1614,2.34,1615,2.34,1616,2.34,1617,2.34,1618,3.489,1619,1.415,1620,3.489,1621,3.489,1622,2.992,1623,3.489,1624,1.65,1625,3.489,1626,1.65,1627,2.34,1628,1.415,1629,1.415,1630,1.65,1631,1.65,1632,3.489,1633,3.489,1634,2.729,1635,1.65,1636,3.489,1637,3.489,1638,2.729,1639,1.65,1640,1.65,1641,1.415,1642,1.65,1643,1.65,1644,1.65,1645,1.65,1646,1.65,1647,1.65,1648,1.65,1649,1.65,1650,1.65,1651,1.65,1652,1.65,1653,1.415,1654,1.415,1655,1.65,1656,1.65,1657,1.65,1658,2.34,1659,1.65,1660,1.65,1661,1.65,1662,1.65,1663,1.65,1664,1.65,1665,1.65,1666,1.65,1667,1.65,1668,1.65,1669,1.65,1670,1.65,1671,1.65,1672,1.65,1673,1.65,1674,1.65,1675,1.65]],["title/components/HamburgerMenuComponent.html",[0,0.048,285,0.725]],["body/components/HamburgerMenuComponent.html",[0,0.076,1,0.741,2,1.006,3,0.242,4,0.178,5,0.822,6,1.704,7,0.822,8,0.822,9,0.133,25,0.741,26,1.672,27,1.279,28,0.629,29,0.717,32,1.176,34,2.002,35,0.741,36,2.314,38,1.117,40,0.225,41,0.717,51,0.762,61,0.561,66,0.642,70,0.916,71,0.02,72,0.518,73,0.347,74,0.865,80,0.781,85,0.865,92,0.865,100,0.528,118,0.502,126,2.203,130,1.117,134,0.807,135,0.675,148,2.027,153,0.24,154,2.586,156,0.156,163,1.234,165,0.156,166,0.178,191,0.665,254,0.822,255,1.117,256,0.822,257,1.36,258,0.822,259,0.822,260,0.741,261,0.822,262,0.741,263,0.822,264,0.741,265,0.822,266,0.741,267,0.822,268,0.741,269,0.822,270,0.822,271,0.741,272,0.781,273,1.117,274,0.741,275,0.665,276,0.741,277,0.822,278,0.741,279,0.822,280,0.702,281,0.781,282,0.822,283,0.741,284,0.822,285,1.225,286,1.526,287,0.822,288,0.741,289,0.822,290,0.741,291,0.822,292,0.781,293,0.781,294,0.822,295,0.741,296,0.822,297,0.741,298,0.822,299,0.741,300,0.781,301,0.822,302,0.741,303,1.204,304,0.822,305,0.741,306,0.822,307,0.741,308,0.781,309,0.822,310,0.781,311,0.822,312,0.741,313,0.822,314,0.702,315,0.822,316,0.822,317,0.013,318,0.013,320,2.203,375,2.992,395,3.866,401,3.663,429,2.848,430,3.908,432,4.708,436,5.528,472,2.992,514,2.586,521,2.586,528,3.198,934,1.06,980,4.342,995,3.198,999,2.848,1000,2.848,1005,4.342,1024,2.848,1025,3.198,1676,5.934,1677,5.284,1678,3.198,1679,5.749,1680,5.063,1681,5.749,1682,5.749,1683,3.866,1684,5.063,1685,6.166,1686,2.848,1687,5.063,1688,5.063,1689,3.866,1690,3.729,1691,5.063,1692,3.729,1693,3.729,1694,3.729,1695,2.848,1696,2.848,1697,5.063,1698,6.447,1699,5.063,1700,3.729,1701,3.198,1702,2.586,1703,2.848]],["title/components/HomeComponent.html",[0,0.048,288,0.725]],["body/components/HomeComponent.html",[0,0.068,1,0.421,2,0.664,3,0.16,4,0.101,5,0.467,6,0.969,7,0.467,8,0.467,9,0.076,13,2.451,15,1.459,25,0.421,26,1.585,27,1.212,28,0.358,29,0.473,30,1.164,31,1.403,32,0.776,34,1.44,35,0.421,36,1.527,38,0.737,40,0.202,41,0.473,51,0.503,66,0.63,70,0.865,71,0.02,72,0.472,73,0.431,74,0.816,78,2.421,80,0.444,85,0.993,92,0.816,99,2.992,100,0.3,103,3.762,106,2.834,113,2.865,114,2.539,115,2.511,116,1.527,118,0.576,128,2.992,130,1.196,133,0.999,134,0.938,135,0.826,138,1.051,142,2.551,147,2.421,148,1.85,151,3.254,153,0.213,156,0.088,158,1.094,163,0.701,165,0.088,166,0.101,167,2.853,173,1.252,177,1.252,191,0.911,197,0.573,254,0.467,255,0.737,256,0.467,257,1.126,258,0.467,259,0.467,260,0.421,261,0.467,262,0.421,263,0.467,264,0.421,265,0.467,266,0.421,267,0.467,268,0.421,269,0.467,270,0.467,271,0.421,272,0.444,273,0.737,274,0.421,275,0.378,276,0.421,277,0.467,278,0.421,279,0.467,280,0.399,281,0.444,282,0.467,283,0.932,284,0.467,285,0.421,286,0.467,287,0.467,288,1.078,289,0.467,290,0.421,291,0.467,292,0.444,293,0.444,294,0.467,295,0.421,296,0.467,297,0.421,298,0.467,299,0.932,300,0.444,301,0.467,302,0.421,303,0.444,304,0.467,305,0.421,306,0.467,307,0.421,308,0.444,309,0.467,310,0.444,311,0.467,312,0.421,313,0.467,314,0.399,315,0.467,316,0.467,317,0.009,318,0.009,321,2.868,371,2.551,373,4.449,375,2.773,406,3.241,430,3.541,437,1.818,455,1.947,462,2.865,468,2.13,470,4.024,488,1.47,524,3.254,559,1.974,580,2.319,747,0.915,804,4.201,820,2.317,845,4.949,847,3.884,873,1.818,880,1.818,924,1.168,975,1.62,1064,2.13,1088,2.13,1100,2.13,1165,3.254,1166,2.317,1401,4.024,1409,2.551,1481,1.841,1483,2.317,1487,2.551,1505,3.158,1506,3.158,1541,1.619,1542,1.818,1545,2.865,1582,4.908,1587,2.551,1592,1.619,1606,1.818,1607,1.818,1608,1.818,1609,1.818,1610,1.818,1611,1.818,1612,1.818,1613,1.818,1614,1.818,1615,1.818,1616,1.818,1617,1.818,1619,1.818,1695,3.584,1702,1.47,1704,1.818,1705,2.865,1706,4.135,1707,3.341,1708,4.135,1709,4.135,1710,4.135,1711,4.135,1712,3.341,1713,3.341,1714,3.341,1715,5.425,1716,4.693,1717,4.693,1718,2.865,1719,3.341,1720,3.341,1721,3.341,1722,4.135,1723,2.12,1724,3.341,1725,3.341,1726,3.341,1727,3.341,1728,3.341,1729,3.341,1730,2.12,1731,4.693,1732,4.693,1733,4.693,1734,3.341,1735,3.341,1736,5.884,1737,3.341,1738,2.12,1739,3.341,1740,2.12,1741,2.12,1742,4.693,1743,4.693,1744,2.12,1745,3.341,1746,5.884,1747,4.652,1748,2.12,1749,4.693,1750,3.341,1751,2.12,1752,3.341,1753,2.12,1754,3.341,1755,3.341,1756,2.12,1757,2.12,1758,2.865,1759,3.341,1760,2.12,1761,3.341,1762,3.341,1763,4.135,1764,2.12,1765,2.12,1766,4.024,1767,2.12,1768,2.12,1769,2.12,1770,1.47,1771,2.12,1772,5.107,1773,3.341,1774,3.341,1775,3.341,1776,3.341,1777,3.341,1778,3.341,1779,2.12,1780,3.341,1781,3.341,1782,4.693,1783,3.341,1784,3.341,1785,2.12,1786,2.12,1787,3.341,1788,2.12,1789,2.12,1790,2.12,1791,2.12,1792,2.12,1793,2.12,1794,2.12,1795,2.12,1796,5.425,1797,4.135,1798,3.341,1799,2.865,1800,4.135,1801,2.12,1802,3.341,1803,3.341,1804,2.12,1805,4.135,1806,2.12,1807,2.12,1808,2.12,1809,1.818,1810,2.12,1811,2.12,1812,2.12]],["title/components/InfoIconComponent.html",[0,0.048,290,0.725]],["body/components/InfoIconComponent.html",[0,0.083,1,0.889,2,1.134,3,0.35,4,0.214,5,0.987,7,0.987,8,0.987,9,0.16,25,0.889,26,1.693,27,1.295,28,0.755,29,0.809,32,1.039,35,0.889,38,1.259,40,0.27,66,0.423,71,0.02,72,0.458,73,0.27,80,0.937,100,0.634,106,2.331,118,0.498,130,1.259,134,0.713,135,0.596,153,0.187,156,0.187,165,0.187,166,0.214,254,0.987,255,1.259,256,0.987,257,1.461,258,0.987,259,0.987,260,0.889,261,0.987,262,0.889,263,0.987,264,0.889,265,0.987,266,0.889,267,0.987,268,0.889,269,0.987,270,0.987,271,0.889,272,0.937,273,1.259,274,0.889,275,0.798,276,0.889,277,0.987,278,0.889,279,0.987,280,0.843,281,0.937,282,0.987,283,0.889,284,0.987,285,0.889,286,0.987,287,0.987,288,0.889,289,0.987,290,1.316,291,0.987,292,0.937,293,0.937,294,0.987,295,0.889,296,0.987,297,0.889,298,0.987,299,0.889,300,0.937,301,0.987,302,0.889,303,0.937,304,0.987,305,0.889,306,0.987,307,0.889,308,0.937,309,0.987,310,0.937,311,0.987,312,0.889,313,0.987,314,0.843,315,0.987,316,0.987,317,0.015,318,0.015,324,2.464,755,4.042,924,3.145,975,2.769,1498,4.36,1813,4.896,1814,4.896,1815,3.837,1816,5.71,1817,5.71,1818,4.475]],["title/components/MusicComponent.html",[0,0.048,295,0.725]],["body/components/MusicComponent.html",[0,0.062,1,0.509,2,0.768,3,0.185,4,0.122,5,0.565,7,0.565,8,0.565,9,0.092,15,1.197,23,1.996,25,0.509,26,1.619,27,1.238,28,0.432,29,0.548,30,1.347,31,1.156,32,0.898,34,1.623,35,0.509,38,0.853,40,0.155,41,0.548,51,0.582,61,0.385,66,0.659,70,0.934,71,0.02,72,0.546,73,0.4,74,0.881,80,0.537,85,0.941,92,0.781,100,0.363,118,0.57,121,3.995,130,0.853,133,0.766,134,0.969,135,0.81,153,0.217,156,0.107,158,1.322,163,0.848,165,0.107,166,0.122,177,1.292,191,1.199,197,1.045,207,1.876,213,1.876,214,2.129,243,1.777,254,0.565,255,0.853,256,0.565,257,1.145,258,0.565,259,0.565,260,0.509,261,0.565,262,0.509,263,0.565,264,0.509,265,0.565,266,0.509,267,0.565,268,0.509,269,0.565,270,0.565,271,0.509,272,0.537,273,0.853,274,0.509,275,0.69,276,0.509,277,0.565,278,0.509,279,0.565,280,0.483,281,0.537,282,0.565,283,0.509,284,0.565,285,0.509,286,0.565,287,0.565,288,0.509,289,0.565,290,0.509,291,0.565,292,0.537,293,0.537,294,0.565,295,1.031,296,0.565,297,0.509,298,0.565,299,0.509,300,0.537,301,0.565,302,0.509,303,1.226,304,0.565,305,0.509,306,0.565,307,0.509,308,0.537,309,0.565,310,0.537,311,0.565,312,0.509,313,0.565,314,0.483,315,0.565,316,0.565,317,0.013,318,0.01,320,3.066,321,3.231,324,1.669,328,2.97,338,1.94,354,1.634,430,2.859,482,2.682,530,3.863,540,1.412,610,1.71,614,1.046,772,2.954,782,3.069,788,3.995,789,2.197,800,3.963,807,2.197,847,2.131,888,2.466,909,2.285,914,1.777,934,0.728,1023,2.197,1024,1.957,1048,3.733,1059,3.558,1064,1.634,1065,4.985,1072,2.954,1075,2.954,1079,3.558,1088,1.634,1114,2.954,1115,3.963,1128,1.634,1129,2.682,1132,3.558,1140,1.634,1442,3.231,1747,2.197,1819,2.197,1820,4.659,1821,3.868,1822,3.868,1823,5.857,1824,3.995,1825,3.868,1826,3.868,1827,5.19,1828,3.868,1829,5.571,1830,3.868,1831,5.19,1832,3.868,1833,2.563,1834,3.868,1835,3.868,1836,2.563,1837,2.563,1838,3.868,1839,2.563,1840,2.563,1841,3.868,1842,2.563,1843,2.563,1844,3.868,1845,2.563,1846,2.563,1847,3.868,1848,2.563,1849,3.868,1850,3.868,1851,2.563,1852,2.563,1853,5.19,1854,2.563,1855,2.563,1856,2.563,1857,4.659,1858,2.563,1859,2.563,1860,2.563,1861,2.563,1862,3.868,1863,2.563,1864,2.563,1865,2.563,1866,2.563,1867,2.563,1868,2.563,1869,5.19,1870,2.563,1871,2.563,1872,3.868,1873,2.563,1874,2.563,1875,3.868,1876,2.563,1877,4.659,1878,2.563,1879,2.563,1880,2.563,1881,2.563,1882,2.563,1883,2.563,1884,4.659,1885,2.563,1886,3.868,1887,3.868,1888,3.868,1889,4.659,1890,4.659,1891,2.563,1892,2.563,1893,3.317,1894,3.868,1895,2.563,1896,2.563,1897,5.19,1898,2.563,1899,3.868,1900,2.563,1901,2.563,1902,2.563,1903,2.563,1904,3.868,1905,2.563,1906,2.563,1907,2.197,1908,2.563,1909,2.563,1910,2.563,1911,2.563,1912,2.563,1913,3.868,1914,2.563,1915,2.563,1916,2.563,1917,3.868,1918,1.957,1919,2.563,1920,2.563,1921,2.563,1922,2.563,1923,2.563,1924,3.868,1925,2.563,1926,2.563,1927,3.868,1928,2.563,1929,2.563,1930,2.563,1931,2.563,1932,2.563,1933,2.563,1934,2.563,1935,2.563,1936,2.563,1937,2.563,1938,2.563,1939,2.563,1940,2.563,1941,2.563,1942,2.563,1943,3.868,1944,3.868,1945,4.45,1946,3.868,1947,3.868,1948,3.868,1949,3.868,1950,3.868]],["title/components/NavbarComponent.html",[0,0.048,297,0.725]],["body/components/NavbarComponent.html",[0,0.081,1,0.832,2,1.086,3,0.261,4,0.2,5,0.923,6,1.913,7,0.923,8,0.923,9,0.15,25,0.832,26,1.686,27,1.289,28,0.706,29,0.915,32,1.27,34,2.121,35,0.832,36,2.499,38,1.206,40,0.253,41,0.775,51,0.823,61,0.63,66,0.575,70,0.872,71,0.02,72,0.518,73,0.33,74,0.823,80,0.877,85,0.63,92,0.63,100,0.593,118,0.531,130,1.206,134,0.667,135,0.558,148,1.72,153,0.269,156,0.175,163,1.385,165,0.175,166,0.2,254,0.923,255,1.206,256,0.923,257,1.424,258,0.923,259,0.923,260,0.832,261,0.923,262,0.832,263,0.923,264,0.832,265,0.923,266,0.832,267,0.923,268,0.832,269,0.923,270,0.923,271,0.832,272,0.877,273,1.206,274,0.832,275,0.747,276,0.832,277,0.923,278,0.832,279,0.923,280,0.788,281,0.877,282,0.923,283,0.832,284,0.923,285,1.283,286,1.206,287,0.923,288,0.832,289,0.923,290,0.832,291,0.923,292,0.877,293,0.877,294,0.923,295,0.832,296,0.923,297,1.283,298,0.923,299,0.832,300,0.877,301,0.923,302,0.832,303,0.877,304,0.923,305,0.832,306,0.923,307,0.832,308,0.877,309,0.923,310,0.877,311,0.923,312,0.832,313,0.923,314,0.788,315,0.923,316,0.923,317,0.014,318,0.014,375,3.231,401,3.786,430,3.786,468,2.669,514,2.903,521,2.903,934,1.19,1677,3.197,1683,4.176,1686,3.197,1689,4.176,1702,2.903,1703,3.197,1951,3.59,1952,5.469,1953,6.091,1954,5.469,1955,6.091,1956,5.469,1957,4.186,1958,4.186,1959,4.186,1960,4.689]],["title/components/PieChartComponent.html",[0,0.048,299,0.725]],["body/components/PieChartComponent.html",[0,0.057,1,0.452,2,0.701,3,0.169,4,0.109,5,0.501,6,1.039,7,0.501,8,0.501,9,0.081,15,0.584,16,1.431,23,1.821,24,2.556,25,0.452,26,1.598,27,1.222,28,0.384,29,0.748,30,1.229,31,1.457,35,0.452,36,1.613,38,0.778,40,0.137,41,0.5,51,0.531,54,2.516,61,0.531,64,2.664,66,0.659,70,0.69,71,0.02,72,0.424,73,0.433,74,0.651,80,0.476,85,0.906,92,1.018,100,0.691,106,1.766,107,1.449,115,1.229,118,0.585,125,2.999,126,1.343,129,1.673,130,0.778,133,1.742,134,0.929,135,0.803,147,1.173,148,1.756,153,0.203,155,1.576,156,0.095,159,1.449,165,0.095,166,0.109,168,0.73,177,1.075,191,1.244,196,1.736,197,1.427,207,1.102,213,1.102,214,1.613,219,1.576,254,0.778,255,0.778,256,0.501,257,1.075,258,0.501,259,0.501,260,0.452,261,0.501,262,0.452,263,0.501,264,0.452,265,0.501,266,0.452,267,0.501,268,0.452,269,0.501,270,0.501,271,0.452,272,0.476,273,0.778,274,0.452,275,0.405,276,0.452,277,0.501,278,0.452,279,0.501,280,0.428,281,0.476,282,0.501,283,0.452,284,0.501,285,0.452,286,0.501,287,0.501,288,0.452,289,0.501,290,0.452,291,0.501,292,0.476,293,0.476,294,0.501,295,0.452,296,0.501,297,0.452,298,0.501,299,0.969,300,1.262,301,0.501,302,0.452,303,0.476,304,0.501,305,0.452,306,0.501,307,0.452,308,0.476,309,0.501,310,0.476,311,0.501,312,0.452,313,0.501,314,0.428,315,0.501,316,0.501,317,0.009,318,0.009,338,1.229,390,2.255,426,1.102,435,1.949,443,2.155,455,1.168,511,1.343,548,1.576,549,1.252,580,1.441,610,1.587,614,0.928,615,1.587,648,1.977,650,3.709,696,3.119,698,4.998,701,3.381,702,1.576,705,4.181,747,1.867,796,1.252,804,2.556,825,2.695,826,3.723,845,4.042,847,3.211,888,3.715,933,3.3,937,1.673,943,2.723,975,1.711,981,1.949,1014,1.949,1016,1.949,1028,1.949,1042,2.695,1178,1.736,1180,1.576,1370,1.736,1441,2.25,1483,2.999,1486,3.709,1498,1.736,1499,4.181,1500,4.181,1501,4.181,1502,4.181,1503,3.026,1505,3.303,1506,3.303,1526,3.026,1527,4.181,1551,1.949,1556,1.949,1565,3.303,1577,3.026,1579,3.026,1580,1.949,1581,1.949,1582,3.303,1587,3.303,1588,3.026,1589,1.949,1591,3.026,1592,2.695,1594,1.949,1596,3.709,1627,3.026,1628,1.949,1629,1.949,1641,1.949,1653,1.949,1654,1.949,1758,1.949,1770,4.866,1961,5.358,1962,1.736,1963,3.709,1964,4.326,1965,3.529,1966,4.326,1967,4.326,1968,4.326,1969,4.181,1970,3.529,1971,3.529,1972,2.273,1973,2.273,1974,2.273,1975,2.273,1976,2.273,1977,2.273,1978,2.273,1979,2.273,1980,3.529,1981,2.273,1982,3.529,1983,2.695,1984,2.273,1985,2.273,1986,2.273,1987,2.273,1988,2.273,1989,2.273,1990,2.273,1991,2.273,1992,2.273,1993,2.273,1994,2.273,1995,2.273,1996,2.273,1997,2.273,1998,2.273,1999,2.273,2000,4.326,2001,2.273,2002,2.273,2003,2.273,2004,2.273,2005,2.273,2006,4.326,2007,3.529,2008,4.326,2009,4.326,2010,5.586,2011,4.326,2012,4.326,2013,4.326,2014,4.326,2015,5.586,2016,4.326,2017,4.326,2018,4.326,2019,2.273,2020,4.326,2021,3.529,2022,2.273,2023,4.326,2024,2.273,2025,3.529,2026,2.273,2027,2.273,2028,2.273,2029,2.273,2030,2.273,2031,2.273,2032,2.273,2033,1.949,2034,1.949,2035,2.273,2036,2.273,2037,3.026,2038,2.273,2039,2.273,2040,2.273,2041,4.326,2042,2.273,2043,3.529,2044,2.273,2045,2.273,2046,2.273,2047,2.273,2048,2.273,2049,3.529,2050,3.529,2051,2.273,2052,2.273,2053,1.949]],["title/injectables/PostApiService.html",[404,2.532,581,0.371]],["body/injectables/PostApiService.html",[3,0.227,4,0.162,9,0.121,13,2.047,15,1.219,16,2.193,40,0.205,51,0.713,61,0.713,65,3.49,66,0.516,70,0.541,71,0.02,72,0.272,73,0.205,74,0.51,76,2.802,77,4.523,78,2.447,79,2.168,83,3.024,85,0.823,92,0.713,100,0.775,115,1.181,133,2.103,138,2.265,148,1.067,153,0.277,156,0.142,165,0.142,166,0.162,167,3.022,168,1.052,171,1.869,177,1.046,191,1.276,192,2.352,211,2.59,214,1.55,248,3.622,317,0.012,318,0.012,338,1.181,340,2.162,368,0.829,370,4.067,381,2.447,390,2.617,402,2.482,404,4.107,406,2.613,418,3.289,419,3.289,420,4.523,421,3.499,422,4.067,424,2.447,426,2.652,472,2.004,489,2.352,516,4.523,524,3.289,530,3.793,540,1.869,554,4.176,555,2.162,561,2.909,562,3.775,563,2.59,564,2.909,581,0.483,583,1.122,591,2.168,601,0.872,604,3.03,615,2.007,619,2.59,771,2.909,772,3.622,773,5.538,908,3.024,909,2.004,926,3.816,936,2.162,937,2.291,938,2.162,1043,4.478,1056,4.322,1064,2.162,1116,3.622,1128,2.162,1140,3.024,1148,4.69,1152,3.289,1154,4.067,1343,2.352,1347,2.59,1381,4.69,1447,4.523,1481,2.613,1529,4.067,1541,4.759,1907,2.909,2054,4.743,2055,5.923,2056,4.067,2057,4.743,2058,4.743,2059,3.622,2060,6.233,2061,5.923,2062,5.923,2063,3.392,2064,4.743,2065,4.067,2066,4.743,2067,3.024,2068,3.392,2069,4.743,2070,4.743,2071,4.743,2072,5.47,2073,3.392,2074,4.743,2075,3.289,2076,4.743,2077,4.743,2078,5.923,2079,4.743,2080,5.47,2081,4.743,2082,3.392,2083,3.392,2084,3.392,2085,3.392,2086,3.392,2087,4.743,2088,3.392,2089,4.743,2090,3.392,2091,4.743,2092,3.392,2093,3.392,2094,3.392,2095,3.392,2096,5.47,2097,3.392,2098,3.392,2099,3.392,2100,3.392,2101,3.392,2102,4.743,2103,3.392,2104,4.743,2105,3.392,2106,3.392,2107,3.392,2108,3.392,2109,3.392,2110,3.392,2111,3.392,2112,3.392,2113,3.392,2114,3.392,2115,2.59]],["title/injectables/SaavnService.html",[581,0.371,1048,2.327]],["body/injectables/SaavnService.html",[3,0.166,4,0.166,9,0.124,15,0.892,25,0.69,40,0.21,41,0.683,51,0.725,61,0.522,66,0.63,70,0.883,71,0.02,72,0.536,73,0.393,74,0.833,78,1.791,85,0.833,114,2.582,118,0.61,134,0.883,135,0.906,138,1.881,153,0.271,156,0.145,165,0.201,166,0.166,168,1.18,177,1.472,191,1.232,197,0.938,207,1.684,213,1.684,214,1.587,252,2.051,275,0.619,317,0.013,318,0.013,328,3.53,338,1.209,340,2.213,351,3.343,354,2.213,360,2.213,368,0.848,400,3.236,406,1.913,482,2.408,489,2.408,495,1.791,512,2.213,513,2.051,581,0.491,583,1.149,587,3.681,591,1.587,600,2.213,601,0.892,603,0.938,615,1.274,782,1.913,847,1.913,890,3.048,908,3.073,909,2.051,929,2.051,934,0.987,1037,4.007,1038,5.195,1039,2.651,1040,4.569,1041,4.229,1043,4.149,1044,3.681,1045,4.134,1046,2.651,1047,2.213,1048,3.073,1049,4.229,1050,4.749,1051,4.134,1052,4.229,1053,3.681,1054,3.681,1055,3.681,1056,3.343,1057,4.134,1058,2.977,1059,2.651,1060,2.977,1061,2.651,1062,4.134,1063,2.977,1064,3.814,1065,5.095,1066,2.977,1067,5.13,1068,2.977,1069,2.977,1070,4.134,1071,4.134,1072,3.681,1073,2.977,1074,2.977,1075,2.651,1076,2.977,1077,2.977,1078,2.977,1079,4.229,1080,2.977,1081,2.977,1082,2.977,1083,2.977,1084,2.651,1085,4.229,1086,2.977,1087,2.977,1088,2.213,1089,2.977,1090,2.977,1091,2.977,1092,3.681,1093,5.13,1094,3.53,1095,4.134,1096,4.134,1097,4.134,1098,2.977,1099,2.977,1100,2.213,1101,4.134,1102,3.681,1103,2.977,1104,2.977,1105,2.977,1106,2.977,1107,2.977,1108,2.977,1109,2.977,1110,2.977,1111,2.977,1112,2.651,1113,2.977,1114,2.651,1115,2.651,1116,2.651,1117,2.977,1118,2.977,1119,2.651,1120,2.977,1121,2.408,1122,2.977,1123,2.977,1124,2.977,1125,2.408,1126,2.977,1127,4.134,1128,3.53,1129,2.408,1130,2.977,1131,2.977,1132,2.651,1133,3.681,1134,3.681,1135,2.408,1136,2.651,1137,3.681,1138,2.651,1139,3.681,1140,2.213,1141,2.651,1142,2.651,1143,4.229,1144,2.651,1145,2.651,1146,2.651,1147,4.569,1347,2.651,1442,2.408,1824,2.977,1945,2.977,2116,4.821,2117,4.821,2118,4.821,2119,3.472,2120,3.472,2121,3.472,2122,3.472,2123,3.472]],["title/interfaces/Schema.html",[378,2.327,603,0.987]],["body/interfaces/Schema.html",[3,0.177,4,0.177,9,0.133,16,1.67,21,1.8,66,0.35,71,0.02,72,0.405,91,1.8,115,1.293,116,1.696,118,0.618,129,1.952,138,1.587,148,1.587,153,0.239,156,0.155,165,0.155,166,0.177,168,1.086,177,1.625,181,2.447,182,2.044,186,2.044,191,1.286,197,1.55,317,0.013,318,0.013,342,2.193,368,0.907,378,4.695,379,2.834,402,1.362,418,4.267,424,1.915,426,1.8,427,2.366,443,1.515,455,1.228,549,2.044,562,3.217,566,2.366,581,0.514,582,3.388,585,2.366,591,2.306,593,4.267,601,0.954,603,1.003,604,2.306,605,2.044,607,2.574,608,1.915,609,1.8,613,1.696,614,2.061,615,1.852,616,1.696,633,1.8,648,1.696,747,1.602,924,2.044,925,2.78,926,2.193,934,1.055,937,2.381,943,3.175,1180,2.574,1187,2.574,1334,2.834,1336,2.834,1983,2.834,2067,2.366,2124,2.834,2125,3.711,2126,3.711,2127,3.182,2128,3.182,2129,3.182,2130,3.182,2131,3.182,2132,3.182,2133,3.182,2134,3.182,2135,4.327,2136,3.182,2137,3.182,2138,4.327,2139,3.182,2140,3.182,2141,4.327,2142,2.574,2143,2.574,2144,2.574,2145,2.574,2146,2.574,2147,2.574,2148,3.182,2149,3.182,2150,4.327,2151,3.182,2152,3.182,2153,3.182,2154,4.327,2155,4.327,2156,4.327,2157,4.327,2158,4.327,2159,3.182,2160,4.327,2161,3.182,2162,4.327,2163,4.327,2164,3.182,2165,3.182,2166,4.327,2167,4.327,2168,3.182,2169,3.182,2170,4.327,2171,4.327,2172,3.182,2173,3.182,2174,4.327,2175,3.182,2176,3.182,2177,3.182,2178,4.327,2179,3.182,2180,3.182,2181,3.182,2182,3.182,2183,3.182,2184,3.182,2185,3.182,2186,3.182,2187,3.182,2188,3.182,2189,3.182,2190,3.182,2191,3.182,2192,3.182,2193,3.182,2194,3.182,2195,3.182,2196,3.182,2197,3.182,2198,3.182]],["title/components/SearchButtonComponent.html",[0,0.048,302,0.725]],["body/components/SearchButtonComponent.html",[0,0.085,1,0.606,2,0.873,3,0.21,4,0.146,5,1.137,6,1.393,7,0.672,8,0.672,9,0.109,13,1.898,15,0.784,25,0.606,26,1.645,27,1.259,28,0.514,29,0.623,30,1.532,31,1.314,32,1.021,34,1.796,35,0.606,36,2.009,38,0.97,40,0.184,41,0.623,51,0.661,61,0.661,66,0.621,70,0.486,71,0.02,72,0.414,73,0.341,74,0.661,76,2.598,79,2.009,80,0.638,83,2.803,85,0.776,92,0.938,99,2.803,100,0.432,106,2.892,107,2.803,114,2.437,118,0.266,125,3.576,126,1.801,128,2.803,130,0.97,134,0.701,135,0.752,138,1.775,147,1.573,148,1.775,151,3.049,153,0.236,155,2.114,156,0.127,158,1.573,163,1.009,165,0.127,166,0.146,167,1.478,168,0.514,171,2.422,173,1.801,249,3.357,254,0.672,255,0.97,256,0.672,257,1.245,258,0.672,259,0.672,260,0.606,261,0.672,262,0.606,263,0.672,264,0.606,265,0.672,266,0.606,267,0.672,268,0.606,269,0.672,270,0.672,271,0.606,272,0.638,273,0.97,274,0.606,275,0.544,276,0.606,277,0.672,278,0.606,279,0.672,280,0.574,281,1.346,282,0.672,283,0.606,284,0.672,285,0.606,286,0.672,287,0.672,288,0.606,289,0.672,290,0.606,291,0.672,292,0.638,293,0.638,294,0.672,295,0.606,296,0.672,297,0.606,298,0.672,299,0.606,300,0.638,301,0.672,302,1.307,303,1.568,304,0.672,305,0.606,306,0.672,307,0.606,308,0.638,309,0.672,310,0.638,311,0.672,312,0.606,313,0.672,314,0.574,315,0.672,316,0.672,317,0.011,318,0.011,321,3.576,399,4.311,400,2.738,463,3.77,475,3.357,495,1.573,512,1.943,513,1.801,540,1.68,569,2.614,599,3.77,782,2.422,910,3.049,930,4.194,965,5.347,966,5.347,978,3.049,993,3.576,1009,3.77,1013,3.049,1395,4.841,1442,4.911,1481,2.422,1696,4.311,1718,4.841,1799,3.77,1809,2.614,2199,5.747,2200,5.747,2201,2.614,2202,4.397,2203,5.646,2204,4.397,2205,4.397,2206,5.157,2207,4.397,2208,5.157,2209,5.157,2210,5.646,2211,5.646,2212,3.049,2213,4.397,2214,5.157,2215,3.77,2216,3.049,2217,4.397,2218,4.397,2219,4.397,2220,4.397,2221,4.397,2222,4.841,2223,3.049,2224,4.397,2225,4.397,2226,4.397,2227,4.397,2228,3.049,2229,4.397,2230,4.397,2231,4.397,2232,4.397,2233,3.049,2234,4.397,2235,3.77,2236,4.397,2237,3.357,2238,3.049,2239,4.397,2240,4.397,2241,3.049,2242,5.157,2243,3.049,2244,3.049,2245,3.049,2246,4.397,2247,3.049,2248,3.049,2249,3.049,2250,3.049,2251,3.049,2252,3.049,2253,3.049,2254,3.049,2255,3.049,2256,3.049]],["title/components/SearchComponent.html",[0,0.048,305,0.725]],["body/components/SearchComponent.html",[0,0.085,1,0.922,2,1.161,3,0.279,4,0.222,5,1.024,7,1.024,8,1.024,9,0.166,16,1.536,25,0.922,26,1.696,27,1.298,28,0.783,29,0.828,32,1.078,35,0.922,38,1.289,71,0.02,72,0.469,80,0.972,100,0.658,130,1.289,153,0.194,156,0.194,165,0.194,166,0.222,254,1.024,255,1.289,256,1.024,257,1.48,258,1.024,259,1.024,260,0.922,261,1.024,262,0.922,263,1.024,264,0.922,265,1.024,266,0.922,267,1.024,268,0.922,269,1.024,270,1.024,271,0.922,272,0.972,273,1.289,274,0.922,275,0.828,276,0.922,277,1.024,278,0.922,279,1.024,280,0.874,281,0.972,282,1.024,283,0.922,284,1.024,285,0.922,286,1.024,287,1.024,288,0.922,289,1.024,290,0.922,291,1.024,292,0.972,293,0.972,294,1.024,295,0.922,296,1.024,297,0.922,298,1.024,299,0.922,300,0.972,301,1.024,302,0.922,303,1.479,304,1.024,305,1.333,306,1.024,307,0.922,308,0.972,309,1.024,310,0.972,311,1.024,312,0.922,313,1.024,314,0.874,315,1.024,316,1.024,317,0.015,318,0.015,324,2.523,366,5.012,2257,3.982,2258,5.845,2259,5.845,2260,4.644]],["title/injectables/SectionService.html",[401,2.011,581,0.371]],["body/injectables/SectionService.html",[3,0.256,4,0.256,9,0.192,15,1.638,40,0.323,41,0.903,51,0.959,66,0.643,70,0.853,71,0.02,72,0.43,73,0.323,74,0.805,85,0.805,92,0.805,118,0.594,134,1.016,135,0.849,153,0.266,156,0.223,165,0.223,166,0.256,168,1.149,317,0.017,318,0.017,368,1.307,375,3.162,385,5.839,401,3.512,581,0.649,583,1.771,601,1.375,1047,3.411,2261,4.589,2262,6.81,2263,6.376,2264,6.376,2265,5.352,2266,6.376,2267,5.352,2268,6.376,2269,5.352,2270,5.352,2271,5.352]],["title/components/SettingItemComponent.html",[0,0.048,307,0.725]],["body/components/SettingItemComponent.html",[0,0.084,1,0.9,2,1.143,3,0.275,4,0.216,5,0.999,7,0.999,8,0.999,9,0.162,25,0.9,26,1.694,27,1.296,28,0.764,29,0.815,30,2.004,31,1.72,32,1.051,35,0.9,38,1.269,40,0.273,66,0.428,71,0.02,72,0.462,73,0.273,80,0.948,100,0.642,106,2.349,118,0.502,130,1.269,153,0.189,156,0.189,165,0.189,166,0.216,254,0.999,255,1.269,256,0.999,257,1.467,258,0.999,259,0.999,260,0.9,261,0.999,262,0.9,263,0.999,264,0.9,265,0.999,266,0.9,267,0.999,268,0.9,269,0.999,270,0.999,271,0.9,272,0.948,273,1.269,274,0.9,275,0.808,276,0.9,277,0.999,278,0.9,279,0.999,280,0.853,281,0.948,282,0.999,283,0.9,284,0.999,285,0.9,286,0.999,287,0.999,288,0.9,289,0.999,290,0.9,291,0.999,292,0.948,293,0.948,294,0.999,295,0.9,296,0.999,297,0.9,298,0.999,299,0.9,300,0.948,301,0.999,302,0.9,303,0.948,304,0.999,305,0.9,306,0.999,307,1.321,308,1.438,309,0.999,310,0.948,311,0.999,312,0.9,313,0.999,314,0.853,315,0.999,316,0.999,317,0.015,318,0.015,633,2.789,888,4.377,975,2.789,2272,4.932,2273,4.932,2274,3.883,2275,5.752,2276,4.528]],["title/components/SidebarComponent.html",[0,0.048,312,0.725]],["body/components/SidebarComponent.html",[0,0.08,1,0.809,2,1.067,3,0.257,4,0.195,5,0.899,6,1.862,7,0.899,8,0.899,9,0.146,25,0.809,26,1.683,27,1.287,28,1.014,29,0.905,30,1.871,31,1.606,32,1.247,34,2.094,35,0.809,36,2.455,38,1.185,40,0.246,41,0.761,51,0.808,61,0.613,66,0.568,70,0.856,71,0.02,72,0.513,73,0.363,74,0.808,80,0.853,85,0.613,92,0.613,100,0.577,118,0.58,130,1.185,134,0.65,135,0.543,153,0.251,156,0.17,163,1.348,165,0.17,166,0.195,254,0.899,255,1.185,256,0.899,257,1.409,258,0.899,259,0.899,260,0.809,261,0.899,262,0.809,263,0.899,264,0.809,265,0.899,266,0.809,267,0.899,268,0.809,269,0.899,270,0.899,271,0.809,272,0.853,273,1.185,274,0.809,275,0.727,276,0.809,277,0.899,278,0.809,279,0.899,280,0.767,281,0.853,282,0.899,283,0.809,284,0.899,285,0.809,286,0.899,287,0.899,288,0.809,289,0.899,290,0.809,291,0.899,292,0.853,293,1.259,294,0.899,295,0.809,296,0.899,297,0.809,298,0.899,299,0.809,300,0.853,301,0.899,302,0.809,303,0.853,304,0.899,305,0.809,306,0.899,307,0.809,308,0.853,309,0.899,310,0.853,311,0.899,312,1.269,313,0.899,314,0.767,315,0.899,316,0.899,317,0.014,318,0.014,320,3.174,360,3.425,375,3.174,401,3.758,430,3.758,468,3.425,472,3.174,514,2.826,521,2.826,604,2.455,820,3.726,934,1.158,1683,4.102,1686,3.111,1689,4.102,1702,2.826,1703,3.111,2277,3.494,2278,5.373,2279,6.011,2280,5.373,2281,6.011,2282,5.373,2283,4.075,2284,4.075]],["title/injectables/StorageService.html",[402,1.34,581,0.371]],["body/injectables/StorageService.html",[3,0.147,4,0.147,9,0.11,16,1.713,21,1.488,40,0.185,41,0.626,51,0.664,61,0.462,66,0.69,70,0.825,71,0.02,72,0.482,73,0.389,74,0.779,85,1.073,91,1.488,92,0.94,115,1.069,116,1.402,118,0.64,129,1.709,134,0.903,135,0.754,138,1.628,148,1.389,153,0.216,156,0.128,165,0.128,166,0.147,168,1.204,177,1.583,181,2.142,182,1.69,186,1.69,191,1.243,197,1.399,317,0.011,318,0.011,342,1.813,368,0.75,378,4.642,379,2.343,402,1.621,418,3.926,424,1.583,426,1.488,427,1.956,443,1.253,455,1.462,549,1.69,562,2.816,566,1.956,581,0.45,582,3.692,583,1.015,585,1.956,591,2.019,593,4.835,601,0.789,603,0.829,604,2.365,607,2.128,608,1.583,609,1.488,613,2.588,614,1.804,615,1.621,616,1.402,633,1.488,648,1.402,747,1.324,924,1.69,925,2.433,926,1.813,934,0.872,937,2.321,943,2.671,1180,2.128,1187,2.128,1331,2.631,1334,2.343,1336,2.343,1983,3.952,2067,1.956,2124,2.343,2127,2.631,2128,2.631,2129,4.438,2130,4.438,2131,4.438,2132,4.438,2133,2.631,2134,4.855,2135,3.788,2136,2.631,2137,4.855,2138,3.788,2139,2.631,2140,4.855,2141,3.788,2142,2.128,2143,2.128,2144,2.128,2145,2.128,2146,2.128,2147,2.128,2148,2.631,2149,4.855,2150,3.788,2151,2.631,2152,2.631,2153,3.788,2154,5.358,2155,3.788,2156,3.788,2157,3.788,2158,3.788,2159,4.438,2160,3.788,2161,2.631,2162,3.788,2163,3.788,2164,2.631,2165,2.631,2166,3.788,2167,3.788,2168,2.631,2169,2.631,2170,3.788,2171,3.788,2172,2.631,2173,2.631,2174,3.788,2175,2.631,2176,2.631,2177,3.788,2178,3.788,2179,2.631,2180,2.631,2181,2.631,2182,2.631,2183,2.631,2184,2.631,2185,4.855,2186,4.855,2187,2.631,2188,4.855,2189,2.631,2190,4.855,2191,2.631,2192,4.855,2193,4.855,2194,2.631,2195,4.855,2196,2.631,2197,4.855,2198,2.631,2285,4.417,2286,4.417,2287,3.068,2288,3.068,2289,3.068,2290,3.068,2291,3.068,2292,3.068,2293,3.068,2294,3.068,2295,3.068,2296,3.068,2297,3.068,2298,3.068,2299,3.068,2300,3.068,2301,3.068,2302,3.068,2303,3.068,2304,3.068,2305,3.068,2306,3.068]],["title/components/ToastComponent.html",[0,0.048,314,0.687]],["body/components/ToastComponent.html",[0,0.09,1,0.637,2,0.906,3,0.319,4,0.153,5,0.707,7,0.707,8,0.707,9,0.115,13,2.29,23,2.353,25,0.637,26,1.653,27,1.264,28,0.769,29,0.646,32,0.745,35,0.637,38,1.006,40,0.194,51,0.686,61,0.482,65,3.592,66,0.501,70,0.727,71,0.02,72,0.464,73,0.409,74,0.686,76,3.414,79,2.084,80,1.52,81,3.91,83,2.906,85,0.686,92,0.869,94,3.162,95,3.162,99,2.906,100,0.454,118,0.463,130,1.17,132,2.906,134,0.511,135,0.427,147,2.353,153,0.19,156,0.134,164,2.224,165,0.134,166,0.153,167,2.802,171,1.767,191,0.946,212,4.771,214,2.898,254,0.707,255,1.006,256,0.707,257,1.274,258,0.707,259,0.707,260,0.637,261,0.707,262,0.637,263,0.707,264,0.637,265,0.707,266,0.637,267,0.707,268,0.637,269,0.707,270,0.707,271,0.637,272,0.672,273,1.006,274,0.637,275,0.572,276,0.637,277,0.707,278,0.637,279,0.707,280,0.604,281,0.672,282,0.707,283,0.637,284,0.707,285,0.637,286,0.707,287,0.707,288,0.637,289,0.707,290,0.637,291,0.707,292,0.672,293,0.672,294,0.707,295,0.637,296,0.707,297,0.637,298,0.707,299,0.637,300,0.672,301,0.707,302,0.637,303,0.672,304,0.707,305,0.637,306,0.707,307,0.637,308,0.672,309,0.707,310,0.672,311,0.707,312,0.637,313,0.707,314,1.256,315,0.707,316,0.707,317,0.012,318,0.012,324,1.968,373,2.906,424,2.353,540,3.183,610,1.947,678,4.412,679,2.449,751,2.449,752,2.449,754,2.449,755,3.855,763,2.224,782,3.872,809,2.044,889,2.75,890,2.802,934,0.912,985,2.75,1094,3.382,1102,2.449,1135,3.162,1150,3.91,1435,4.843,1436,3.482,1468,4.412,1471,3.482,1481,2.512,1622,2.75,1696,2.449,1701,2.75,1963,4.549,1969,4.954,2053,3.91,2237,4.412,2307,2.75,2308,4.56,2309,4.56,2310,4.56,2311,4.549,2312,5.305,2313,4.56,2314,4.56,2315,4.56,2316,5.305,2317,3.207,2318,3.207,2319,5.305,2320,5.305,2321,3.207,2322,4.56,2323,4.56,2324,4.56,2325,4.56,2326,3.91,2327,4.56,2328,4.56,2329,3.207,2330,3.207,2331,3.91,2332,3.482,2333,4.56,2334,3.207,2335,4.56,2336,3.207,2337,3.207,2338,3.207,2339,3.207,2340,3.207,2341,2.75,2342,2.75,2343,3.207,2344,3.207,2345,3.207,2346,3.207,2347,3.207,2348,3.207,2349,3.207,2350,3.207,2351,4.56,2352,3.207,2353,3.207,2354,3.207,2355,2.449,2356,3.207,2357,3.207,2358,3.207,2359,4.56,2360,3.207,2361,3.207,2362,3.207,2363,3.207,2364,3.207,2365,3.207,2366,3.207,2367,2.75,2368,3.207]],["title/injectables/ToastService.html",[65,1.884,581,0.371]],["body/injectables/ToastService.html",[0,0.094,3,0.327,4,0.197,9,0.147,13,2.607,27,0.912,40,0.248,41,0.766,51,0.813,65,3.31,66,0.57,70,0.862,71,0.02,72,0.434,73,0.436,74,0.813,76,4.179,79,2.471,80,1.542,85,0.813,92,0.965,118,0.527,128,3.447,132,3.447,134,0.963,135,0.548,147,2.79,153,0.226,156,0.172,165,0.172,166,0.197,167,3.111,168,1.019,212,5.008,214,3.045,314,1.387,317,0.014,318,0.014,368,1.475,369,3.195,423,4.129,424,3.31,458,4.129,459,4.129,493,3.528,559,3.568,581,0.55,583,1.361,589,4.636,601,1.057,610,2.216,755,4.119,782,3.84,890,2.622,1435,4.898,1436,4.129,1455,3.749,1468,4.898,1471,4.129,1481,2.979,1918,4.129,2059,4.898,2237,4.129,2311,4.636,2326,4.636,2331,4.636,2332,4.129,2369,3.528,2370,5.407,2371,5.407,2372,5.407,2373,5.407,2374,4.636,2375,5.407,2376,4.114,2377,5.407,2378,4.114,2379,4.114,2380,4.114,2381,4.114,2382,4.114,2383,5.407,2384,4.114,2385,4.114]],["title/interfaces/User.html",[138,1.148,603,0.987]],["body/interfaces/User.html",[3,0.215,4,0.215,9,0.161,40,0.272,41,0.812,71,0.02,72,0.533,73,0.45,92,0.677,118,0.675,135,0.764,138,1.802,153,0.239,156,0.188,165,0.239,166,0.215,168,0.76,177,1.512,191,1.022,317,0.015,318,0.015,338,1.996,368,1.1,390,1.741,402,2.313,424,3.424,426,3.218,443,1.838,455,2.196,566,4.231,581,0.583,601,1.157,603,1.217,605,2.48,611,2.323,613,2.057,614,2.34,615,2.103,616,2.057,618,2.957,648,3.033,925,3.656,934,1.28,943,2.323,1371,3.437,2067,4.231,2115,3.437,2142,4.602,2143,4.602,2144,4.602,2145,4.602,2146,4.602,2147,4.602,2386,3.437,2387,3.86,2388,3.86,2389,5.406,2390,4.914,2391,4.914,2392,3.86,2393,3.86,2394,3.86]],["title/injectables/UserService.html",[390,1.412,581,0.371]],["body/injectables/UserService.html",[3,0.221,4,0.221,9,0.166,40,0.28,51,0.878,61,0.697,66,0.653,70,1.069,71,0.02,72,0.538,73,0.405,74,0.961,85,1.009,92,0.878,118,0.662,135,0.894,138,1.457,153,0.244,156,0.193,165,0.244,166,0.221,168,1.078,177,1.525,191,1.041,317,0.015,318,0.015,338,2.225,368,1.132,381,3.011,390,2.258,402,2.59,424,2.39,426,2.246,443,1.892,455,2.114,566,2.953,581,0.594,583,1.533,601,1.191,603,1.252,611,2.39,613,3.065,614,2.383,615,2.141,616,2.117,618,3.011,648,2.117,812,3.212,925,2.552,934,1.317,943,3.296,1371,4.878,2067,2.953,2115,3.537,2142,3.212,2143,3.212,2144,3.212,2145,3.212,2146,3.212,2147,3.212,2386,3.537,2387,5.004,2388,5.004,2389,5.478,2390,5.004,2391,5.004,2392,3.972,2393,3.972,2394,5.004,2395,5.836,2396,4.633,2397,4.633,2398,4.633,2399,4.633,2400,4.633]],["title/injectables/UtilsService.html",[581,0.371,2401,2.788]],["body/injectables/UtilsService.html",[3,0.275,4,0.275,9,0.206,61,1.056,66,0.544,71,0.02,153,0.24,156,0.24,165,0.24,166,0.275,317,0.017,318,0.017,368,1.408,581,0.678,583,1.907,601,1.481,2401,5.084,2402,4.941,2403,5.763]],["title/coverage.html",[2404,4.279]],["body/coverage.html",[0,0.1,1,0.72,9,0.13,10,3.11,11,2.769,12,3.11,15,0.932,27,0.612,29,0.514,35,0.72,64,1.657,65,1.871,71,0.02,73,0.3,100,0.514,138,1.14,161,2.515,197,2.078,250,3.545,260,0.72,262,0.72,264,0.72,266,0.72,268,0.72,271,0.72,274,0.72,275,0.886,276,0.72,278,0.72,280,0.683,283,0.72,285,0.72,288,0.72,290,0.72,292,0.759,295,0.72,297,0.72,299,0.72,302,0.72,305,0.72,307,0.72,310,0.759,312,0.72,314,0.683,317,0.013,318,0.013,319,3.11,331,2.515,345,2.769,362,3.11,367,3.11,378,2.312,390,1.403,400,1.759,401,1.998,402,1.331,404,2.515,495,2.563,502,3.11,516,2.769,581,0.744,582,2.143,584,3.11,585,2.312,586,3.11,591,1.657,603,1.782,604,1.657,606,3.793,612,2.312,637,3.793,693,2.769,696,2.143,819,3.11,922,3.793,932,2.312,933,2.143,937,1.403,962,3.11,963,3.11,1037,2.312,1038,3.793,1039,3.793,1048,2.312,1148,2.515,1149,3.11,1171,3.11,1172,3.11,1173,3.793,1183,3.793,1226,3.793,1227,3.793,1228,3.11,1281,3.11,1282,3.11,1326,3.11,1342,3.11,1343,3.929,1446,2.769,1447,3.793,1448,3.11,1450,3.11,1451,3.11,1469,3.11,1470,3.11,1480,3.11,1676,3.11,1677,2.769,1678,3.11,1704,3.11,1770,3.445,1813,3.11,1814,3.11,1815,3.11,1819,3.11,1951,3.11,1961,3.793,1962,3.793,2124,3.793,2199,3.11,2200,3.11,2201,3.11,2257,3.11,2261,3.11,2272,3.11,2273,3.11,2274,3.11,2277,3.11,2307,3.11,2369,3.11,2386,3.793,2401,2.769,2402,3.11,2404,3.11,2405,3.11,2406,3.627,2407,3.627,2408,3.627,2409,4.26,2410,7.231,2411,3.11,2412,7.312,2413,3.11,2414,3.11,2415,3.11,2416,3.11,2417,3.11,2418,3.627,2419,6.095,2420,3.627,2421,6.095,2422,4.968,2423,6.385,2424,3.627,2425,3.627,2426,3.627,2427,5.667,2428,3.627,2429,3.627,2430,3.627,2431,3.627,2432,3.627,2433,3.627,2434,3.627,2435,3.627,2436,3.627,2437,6.385,2438,5.667,2439,3.627,2440,3.11,2441,3.627,2442,3.627,2443,3.627,2444,3.627,2445,4.968,2446,3.11,2447,4.968,2448,3.11,2449,3.11,2450,5.475,2451,3.11,2452,3.11,2453,3.11,2454,3.11,2455,3.627]],["title/dependencies.html",[69,3.046,2456,2.611]],["body/dependencies.html",[69,3.78,71,0.02,156,0.227,158,2.812,163,1.803,317,0.017,318,0.017,341,5.884,342,3.808,343,4.674,487,4.674,518,4.674,1047,3.475,1483,3.78,1548,5.527,1576,4.674,2075,3.78,2457,7.511,2458,5.451,2459,5.451,2460,5.451,2461,5.451,2462,5.451,2463,5.451,2464,5.451,2465,5.451,2466,4.674,2467,5.451,2468,5.451,2469,5.451,2470,5.451,2471,5.451,2472,5.451,2473,5.451,2474,5.451,2475,5.451,2476,5.451]],["title/index.html",[40,0.184,2477,3.045,2478,3.045]],["body/index.html",[2,0.708,15,0.916,16,2.386,19,3.055,21,1.728,27,0.947,28,1.021,29,0.984,69,2.47,71,0.02,77,4.619,78,1.838,90,3.055,91,2.38,100,0.952,102,2.72,106,1.455,115,2.284,116,2.243,129,1.899,133,2.077,138,2.062,141,3.893,147,1.838,150,3.055,153,0.149,165,0.149,221,2.47,244,3.893,245,3.333,252,2.899,253,3.893,272,0.746,275,0.635,293,1.267,300,0.746,303,1.028,317,0.013,318,0.013,369,3.875,372,4.814,373,4.482,377,2.72,381,2.532,415,2.72,417,4.208,419,3.403,420,3.747,421,2.105,423,2.72,471,2.72,472,2.899,481,3.055,488,3.403,524,2.47,549,1.963,562,2.271,580,1.455,597,3.055,604,3.071,696,2.105,704,2.47,740,3.055,742,3.055,748,3.055,761,3.055,763,3.403,796,3.093,800,2.72,802,3.055,804,2.105,820,3.893,886,2.47,898,4.619,937,2.172,964,3.055,989,4.208,990,3.055,1088,2.271,1100,2.271,1125,2.47,1166,2.47,1174,3.747,1236,4.208,1376,3.055,1378,3.055,1379,3.055,1396,3.055,1406,4.208,1409,2.72,1415,4.208,1416,3.055,1421,2.72,1424,3.055,1434,4.814,1441,2.271,1455,2.47,1481,2.703,1484,3.055,1487,4.287,1515,4.814,1516,4.208,1561,4.208,1565,2.72,1658,3.055,1695,4.287,1705,3.055,1960,4.208,2033,4.814,2034,4.814,2037,3.055,2056,3.055,2059,2.72,2065,3.055,2075,2.47,2215,4.208,2235,4.208,2341,3.055,2355,2.72,2367,3.055,2374,4.814,2405,4.814,2479,3.563,2480,3.563,2481,3.563,2482,3.563,2483,3.563,2484,2.72,2485,4.908,2486,4.908,2487,4.908,2488,6.846,2489,3.563,2490,3.563,2491,3.563,2492,3.563,2493,4.908,2494,3.563,2495,3.563,2496,3.563,2497,3.563,2498,3.563,2499,3.563,2500,4.908,2501,3.563,2502,4.908,2503,3.563,2504,3.563,2505,3.563,2506,3.563,2507,3.563,2508,3.563,2509,3.563,2510,3.563,2511,4.908,2512,3.563,2513,3.563,2514,4.908,2515,3.563,2516,3.563,2517,3.563,2518,4.908,2519,3.563,2520,3.563,2521,3.563,2522,3.563,2523,3.563,2524,3.055,2525,3.055,2526,3.055,2527,3.563,2528,3.563,2529,3.563,2530,3.563,2531,3.563,2532,3.563,2533,3.563,2534,3.563,2535,3.055,2536,3.563,2537,3.563,2538,4.908,2539,3.563,2540,4.908,2541,3.563,2542,3.563,2543,3.563,2544,3.563,2545,3.563,2546,3.563,2547,4.908,2548,3.563,2549,3.563,2550,3.055,2551,3.563,2552,3.563,2553,3.563,2554,3.563,2555,3.563,2556,4.908,2557,3.563,2558,3.563,2559,3.563,2560,3.563,2561,3.563,2562,3.563,2563,2.72,2564,4.908,2565,3.563,2566,3.563,2567,3.563,2568,3.563,2569,3.563,2570,3.563,2571,3.563,2572,3.563,2573,3.055,2574,3.563,2575,3.563,2576,3.563,2577,3.563,2578,3.563,2579,3.563,2580,3.563,2581,3.563,2582,3.563,2583,3.563,2584,3.563,2585,3.563,2586,3.563,2587,3.563,2588,3.563,2589,3.563,2590,3.563,2591,3.563,2592,3.563,2593,3.563,2594,3.563,2595,3.563,2596,3.563,2597,4.908,2598,3.563,2599,3.563,2600,3.563,2601,3.563,2602,3.563,2603,3.563]],["title/modules.html",[2604,4.279]],["body/modules.html",[71,0.018,317,0.018,318,0.018,2604,5.143]],["title/overview.html",[2484,3.811]],["body/overview.html",[2,1.18,71,0.018,317,0.018,318,0.018,583,1.966,605,3.273,2484,4.537,2563,4.537,2605,5.942,2606,5.095]],["title/properties.html",[41,0.622,2456,2.611]],["body/properties.html",[41,0.846,71,0.018,317,0.018,318,0.018,588,4.558,2607,5.97]],["title/miscellaneous/typealiases.html",[2608,2.111,2609,4.393]],["body/miscellaneous/typealiases.html",[40,0.357,71,0.018,73,0.408,317,0.018,318,0.018,637,4.516,693,5.161,1042,4.516,2608,4.101,2610,5.914,2611,5.914]],["title/miscellaneous/variables.html",[2608,2.111,2612,3.767]],["body/miscellaneous/variables.html",[9,0.115,15,0.823,27,0.894,31,2.196,40,0.193,71,0.02,72,0.585,73,0.393,114,1.966,132,2.041,134,1.12,135,0.936,148,1.007,181,3.536,197,1.971,221,2.22,245,2.509,247,2.445,317,0.012,318,0.012,320,1.892,342,1.892,369,3.411,406,1.764,415,2.445,416,4.047,419,2.22,421,2.691,428,2.745,454,2.041,468,2.041,580,1.307,588,3.477,591,2.788,592,2.22,679,4.047,696,2.691,704,3.158,747,3.147,751,3.477,752,2.445,754,3.477,869,2.745,924,4.017,925,4.017,926,4.308,937,1.762,943,2.35,1084,3.477,1121,2.22,1152,2.22,1156,4.545,1157,2.745,1162,4.545,1164,2.745,1165,2.22,1303,2.745,1308,2.745,1421,2.445,1441,2.041,1509,2.745,1539,2.745,1766,2.745,1770,2.22,1893,2.745,1918,4.047,1961,2.445,1962,3.477,2075,2.22,2222,2.745,2332,2.445,2342,2.745,2355,2.445,2409,2.745,2411,4.545,2413,4.545,2414,2.745,2415,3.905,2416,2.745,2417,3.905,2440,2.745,2446,2.745,2448,2.745,2449,3.905,2450,2.745,2451,3.905,2452,3.905,2453,3.905,2454,3.905,2466,2.745,2524,2.745,2525,2.745,2526,2.745,2535,2.745,2550,2.745,2563,2.445,2573,2.745,2606,2.745,2608,3.158,2612,2.745,2613,6.1,2614,3.202,2615,3.202,2616,3.202,2617,3.202,2618,4.554,2619,3.202,2620,3.202,2621,3.202,2622,3.202,2623,3.202,2624,3.202,2625,3.202,2626,3.202,2627,3.202,2628,3.202,2629,3.202,2630,3.202,2631,3.202,2632,4.554,2633,4.554,2634,3.202,2635,3.202,2636,3.202,2637,3.202,2638,3.202,2639,3.202,2640,3.202,2641,3.202,2642,3.202,2643,3.202,2644,3.202,2645,3.202,2646,3.202,2647,3.202,2648,3.202,2649,3.202,2650,3.202,2651,4.554,2652,3.202,2653,3.202,2654,3.202,2655,3.202,2656,3.202,2657,3.202,2658,3.202,2659,3.202,2660,3.202,2661,3.202,2662,3.202,2663,4.554,2664,3.202,2665,3.202,2666,4.554,2667,3.202,2668,3.202,2669,3.202,2670,3.202,2671,3.202,2672,4.554,2673,3.202,2674,3.202,2675,4.554,2676,3.202,2677,3.202,2678,3.202,2679,3.202,2680,3.202,2681,3.202,2682,3.202,2683,3.202,2684,3.202,2685,3.202,2686,3.202,2687,3.202,2688,3.202,2689,3.202,2690,3.202,2691,3.202,2692,3.202,2693,3.202,2694,3.202,2695,3.202,2696,3.202,2697,3.202,2698,3.202,2699,3.202,2700,3.202,2701,6.1,2702,3.202,2703,3.202,2704,3.202,2705,3.202,2706,3.202,2707,3.202,2708,3.202,2709,3.202,2710,3.202,2711,3.202,2712,3.202,2713,3.202,2714,3.202,2715,3.202]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":876,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":2607,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2030,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.3s",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2421,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2419,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2427,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["009688",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":884,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1310,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1309,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":874,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":880,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2222,"title":{},"body":{"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["1000",{"_index":771,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["100px",{"_index":1810,"title":{},"body":{"components/HomeComponent.html":{}}}],["10rem",{"_index":991,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":869,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["111",{"_index":2041,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14/14",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2606,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2418,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1303,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1441,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["20/20",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["2025",{"_index":1337,"title":{},"body":{"components/FooterComponent.html":{}}}],["2196f3",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":2420,"title":{},"body":{"coverage.html":{}}}],["23px",{"_index":1812,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":773,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["25.8.25",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":2605,"title":{},"body":{"overview.html":{}}}],["29",{"_index":1366,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["29/29",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2535,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":753,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["3000",{"_index":1468,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["320kbps')?.url",{"_index":1868,"title":{},"body":{"components/MusicComponent.html":{}}}],["350",{"_index":1536,"title":{},"body":{"components/GraphsComponent.html":{}}}],["37/37",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":2355,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.18.2",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["4.4.9",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2437,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":785,"title":{},"body":{"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["4caf50",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":2550,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["500",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["5000",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["59",{"_index":1224,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":2563,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["60",{"_index":772,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["607d8b",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1308,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":749,"title":{},"body":{"components/BudgetComponent.html":{}}}],["800",{"_index":783,"title":{},"body":{"components/BudgetComponent.html":{}}}],["8bc34a",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1225,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":1662,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.expense_count",{"_index":949,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.name.localecompare(b.name",{"_index":950,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.time.split(\":\").map(number",{"_index":1635,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ability",{"_index":2561,"title":{},"body":{"index.html":{}}}],["acc",{"_index":905,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accessed",{"_index":2319,"title":{},"body":{"components/ToastComponent.html":{}}}],["accesses",{"_index":2066,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":1509,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1755,"title":{},"body":{"components/HomeComponent.html":{}}}],["accurate",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":2203,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["activation",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["activepath",{"_index":2281,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual_component",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":955,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["add(data",{"_index":620,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["added",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":929,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["advice",{"_index":1422,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["afterviewinit",{"_index":1963,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ahours",{"_index":1632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":320,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":325,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":323,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":260,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasyazt2myolb9grwra6nran8ndfsvmmwzz04",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["alias",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["all.filter(c",{"_index":960,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":636,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":631,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":624,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":957,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allowed",{"_index":803,"title":{},"body":{"components/BudgetComponent.html":{}}}],["allowed/day",{"_index":2558,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":2495,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2527,"title":{},"body":{"index.html":{}}}],["amber",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":1633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":1601,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amt",{"_index":1304,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":363,"title":{},"body":{"components/AnalysisComponent.html":{},"injectables/GeminiApiService.html":{}}}],["analysis'},{'name",{"_index":263,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["analysis.component.css",{"_index":365,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysis.component.html",{"_index":364,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysiscomponent",{"_index":262,"title":{"components/AnalysisComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["analyze",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":1360,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["angular",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":340,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["angular/compiler",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":2451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":2363,"title":{},"body":{"components/ToastComponent.html":{}}}],["animatedbudgetprogress",{"_index":640,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatepercentage",{"_index":656,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animation",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":1543,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":1400,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":1383,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":2000,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2031,"title":{},"body":{"components/PieChartComponent.html":{}}}],["apexaxischartseries",{"_index":1546,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":697,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":1548,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":1557,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":1559,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexnonaxischartseries",{"_index":695,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexplotoptions",{"_index":700,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexstroke",{"_index":1562,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":1567,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":1569,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":1571,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":1549,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":1554,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":346,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1343,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:12",{"_index":1348,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2063,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:16",{"_index":1356,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:37",{"_index":2073,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:40",{"_index":1354,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:58",{"_index":1352,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:6",{"_index":1449,"title":{},"body":{"injectables/GetApiService.html":{}}}],["api.service.ts:76",{"_index":2068,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":345,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/get/get",{"_index":1448,"title":{},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2080,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":1861,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:16",{"_index":2123,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:17",{"_index":2122,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:18",{"_index":2118,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:22",{"_index":2120,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:32",{"_index":2121,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:94",{"_index":2119,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api_response_app_version",{"_index":2102,"title":{},"body":{"injectables/PostApiService.html":{}}}],["apiurl",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["app_current_version",{"_index":2104,"title":{},"body":{"injectables/PostApiService.html":{}}}],["app_version",{"_index":2147,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":264,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":1416,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["application",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"injectables/ToastService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1136,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["applicationconfig",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["appropriate",{"_index":1161,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{}}}],["appversion",{"_index":1330,"title":{},"body":{"components/FooterComponent.html":{}}}],["appversionservice",{"_index":582,"title":{"injectables/AppVersionService.html":{}},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["apr",{"_index":1610,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":1667,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":1482,"title":{},"body":{"components/GraphsComponent.html":{}}}],["arguments",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":1600,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":1659,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":1648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name",{"_index":1942,"title":{},"body":{"components/MusicComponent.html":{}}}],["artist.name).join",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(\",\")[0].trim",{"_index":1905,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":1634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":1425,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":1438,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":1397,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assist",{"_index":1433,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":360,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["async",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["audio",{"_index":1823,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":1613,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":1670,"title":{},"body":{"components/GraphsComponent.html":{}}}],["auto",{"_index":2311,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["automatically",{"_index":2230,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["available",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["average",{"_index":766,"title":{},"body":{"components/BudgetComponent.html":{}}}],["averages",{"_index":1389,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":802,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["avgallowedperday",{"_index":641,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgallowedperday.tofixed(2",{"_index":805,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday",{"_index":642,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday.tofixed(2",{"_index":806,"title":{},"body":{"components/BudgetComponent.html":{}}}],["await",{"_index":354,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["axis",{"_index":1552,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":947,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":948,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":1639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["backend",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1541,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{}}}],["backgroundcolor",{"_index":2026,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2015,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":1794,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":1725,"title":{},"body":{"components/HomeComponent.html":{}}}],["backticks",{"_index":1130,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["backup",{"_index":2078,"title":{},"body":{"injectables/PostApiService.html":{}}}],["backup_frequency",{"_index":2142,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bar",{"_index":2037,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1154,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["baseinstructions",{"_index":1373,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["before",{"_index":2332,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2051,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":1417,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["behaviorsubject",{"_index":2270,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2268,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1124,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1434,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["between",{"_index":763,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":678,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":1636,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":2344,"title":{},"body":{"components/ToastComponent.html":{}}}],["block",{"_index":2256,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockkey",{"_index":1712,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":1721,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":1407,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":754,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":1637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1137,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["boolean",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":2449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1804,"title":{},"body":{"components/HomeComponent.html":{}}}],["bordercolor",{"_index":2020,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2027,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":2039,"title":{},"body":{"components/PieChartComponent.html":{}}}],["boxes",{"_index":2557,"title":{},"body":{"index.html":{}}}],["browser",{"_index":342,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":2452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browser’s",{"_index":2584,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":1638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["budget",{"_index":604,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":267,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget.component.css",{"_index":639,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget.component.html",{"_index":638,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget_id",{"_index":607,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcolorclass",{"_index":643,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetcomponent",{"_index":266,"title":{"components/BudgetComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetform",{"_index":644,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetkey",{"_index":2131,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetmessage",{"_index":645,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetprogress",{"_index":646,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgets",{"_index":647,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetschema",{"_index":2150,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":612,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["build",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["bullet",{"_index":1410,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1696,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["button'},{'name",{"_index":304,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":2206,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":2207,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":2201,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":2233,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2238,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2241,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2213,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2228,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":2223,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":2216,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":2200,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":958,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculatebudgetprogress",{"_index":657,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculatetotalexpenses",{"_index":831,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":835,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":820,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":269,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":822,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":821,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":268,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":823,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":824,"title":{},"body":{"components/CalendarComponent.html":{}}}],["callbacks",{"_index":2042,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"injectables/ToastService.html":{}}}],["cancel",{"_index":810,"title":{},"body":{"components/BudgetComponent.html":{}}}],["canvasref",{"_index":1966,"title":{},"body":{"components/PieChartComponent.html":{}}}],["care",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1198,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":1999,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1029,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1028,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1203,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1202,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1201,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["categories",{"_index":937,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1199,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1188,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":1020,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1184,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1185,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1186,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{}}}],["categorycolors",{"_index":1967,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":956,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2129,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":1968,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":969,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2135,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":979,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":933,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["categorytotals",{"_index":2006,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":2010,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":976,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":2008,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2018,"title":{},"body":{"components/PieChartComponent.html":{}}}],["center",{"_index":1622,"title":{},"body":{"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["certain",{"_index":1727,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1165,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":1530,"title":{},"body":{"components/GraphsComponent.html":{}}}],["changemonth",{"_index":832,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":837,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["changes['currentdate",{"_index":1581,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":1580,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":696,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":1771,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":1964,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":1965,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":1962,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:114",{"_index":1976,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:137",{"_index":1981,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:15",{"_index":1991,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:16",{"_index":1987,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1985,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:18",{"_index":1990,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:19",{"_index":1988,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:20",{"_index":1986,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:21",{"_index":1989,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1984,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1972,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1971,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1979,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:48",{"_index":1977,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:52",{"_index":1978,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:58",{"_index":1973,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:72",{"_index":1975,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:95",{"_index":1974,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["chart/pie",{"_index":1770,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":1491,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartoptions",{"_index":693,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["charts",{"_index":1483,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":1492,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":1493,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":1494,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":1444,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1037,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["checks",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["chosen",{"_index":2530,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["classes",{"_index":889,"title":{},"body":{"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["cleanedsong",{"_index":1890,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace",{"_index":1896,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace(/^```json",{"_index":1892,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith",{"_index":1895,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith(\"```json",{"_index":1891,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanup",{"_index":1921,"title":{},"body":{"components/MusicComponent.html":{}}}],["clear",{"_index":2337,"title":{},"body":{"components/ToastComponent.html":{}}}],["clearinterval(interval",{"_index":792,"title":{},"body":{"components/BudgetComponent.html":{}}}],["clearinterval(this.interval",{"_index":1877,"title":{},"body":{"components/MusicComponent.html":{}}}],["cli",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["clicked",{"_index":1697,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clickedinside",{"_index":1699,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":998,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["close",{"_index":1000,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["closed",{"_index":2236,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["closemodal",{"_index":658,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1406,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["color",{"_index":747,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":1801,"title":{},"body":{"components/HomeComponent.html":{}}}],["combining",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["complete",{"_index":2549,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["component's",{"_index":2323,"title":{},"body":{"components/ToastComponent.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/graphs/graphs.component",{"_index":1768,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/pie",{"_index":1769,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["concatenating",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["config",{"_index":2411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1148,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["configurable",{"_index":2313,"title":{},"body":{"components/ToastComponent.html":{}}}],["configuration",{"_index":592,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm(\"are",{"_index":793,"title":{},"body":{"components/BudgetComponent.html":{}}}],["console.error(\"chart.js",{"_index":2004,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2052,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":896,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('error",{"_index":909,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["console.error('failed",{"_index":1900,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.error('gemini",{"_index":1364,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2156,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('submit",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["console.log('backup",{"_index":2110,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":2244,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('posting",{"_index":2094,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('user",{"_index":2100,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn('incomplete",{"_index":1906,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('no",{"_index":1887,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2113,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":959,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["constructor(appversionservice",{"_index":1331,"title":{},"body":{"components/FooterComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(categoryservice",{"_index":981,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(expenseservice",{"_index":663,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":330,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":2212,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":1456,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1347,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":934,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":1833,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":1686,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":812,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":2317,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructs",{"_index":1508,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":1701,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1529,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/PostApiService.html":{}}}],["content",{"_index":1135,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{}}}],["contents",{"_index":1138,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["context",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2045,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2044,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2043,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":1437,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":2601,"title":{},"body":{"index.html":{}}}],["control",{"_index":2215,"title":{},"body":{"components/SearchButtonComponent.html":{},"index.html":{}}}],["controlled",{"_index":2327,"title":{},"body":{"components/ToastComponent.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["copyright",{"_index":1850,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":2404,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":2345,"title":{},"body":{"components/ToastComponent.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["createnoderequesthandler(app",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["crypto.randomuuid",{"_index":623,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":2502,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":2021,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":648,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":1505,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["currentmonth",{"_index":825,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":1589,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":1594,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":2389,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":2391,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1824,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":1948,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":1947,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentstep",{"_index":787,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentstep).tofixed(1",{"_index":790,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentyear",{"_index":826,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":1653,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":1654,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1802,"title":{},"body":{"components/HomeComponent.html":{}}}],["curve",{"_index":1563,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":272,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["customization",{"_index":2564,"title":{},"body":{"index.html":{}}}],["custommodalcomponent",{"_index":271,"title":{"components/CustomModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["cyan",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.quality",{"_index":1867,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":1515,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["dark",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["dark:text",{"_index":2360,"title":{},"body":{"components/ToastComponent.html":{}}}],["darkencolor",{"_index":1285,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1292,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":1705,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["data.album?.name",{"_index":1939,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":1940,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":1938,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":1934,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":1935,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":1937,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.name",{"_index":1931,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":1936,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":1932,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":1933,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2127,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":1439,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":1495,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2025,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2028,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2029,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2032,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["date().getfullyear",{"_index":853,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":851,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(`${a.date}t${a.time",{"_index":1205,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1207,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":735,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1217,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1220,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2090,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":1778,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(this.latestbudget.fromdate",{"_index":731,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(this.latestbudget.todate",{"_index":732,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(todate",{"_index":1218,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(value",{"_index":1785,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":873,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getfullyear",{"_index":1792,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":1791,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.tolocaledatestring",{"_index":1300,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["datea",{"_index":1204,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1209,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1206,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1208,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":2537,"title":{},"body":{"index.html":{}}}],["datestr",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":804,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":913,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":1624,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":1586,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":1599,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":1597,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":1598,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days",{"_index":886,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":1602,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[value",{"_index":1605,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":875,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":1734,"title":{},"body":{"components/HomeComponent.html":{}}}],["ddd",{"_index":2050,"title":{},"body":{"components/PieChartComponent.html":{}}}],["dec",{"_index":1617,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":1674,"title":{},"body":{"components/GraphsComponent.html":{}}}],["declare",{"_index":1992,"title":{},"body":{"components/PieChartComponent.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["deep",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":2237,"title":{},"body":{"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["defaultschema",{"_index":2154,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":2174,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":1708,"title":{},"body":{"components/HomeComponent.html":{}}}],["define",{"_index":2341,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["delay",{"_index":2232,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["delegate",{"_index":2372,"title":{},"body":{"injectables/ToastService.html":{}}}],["delete",{"_index":796,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":1795,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":635,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":954,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1215,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deletebudget",{"_index":659,"title":{},"body":{"components/BudgetComponent.html":{}}}],["deleted",{"_index":799,"title":{},"body":{"components/BudgetComponent.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":1743,"title":{},"body":{"components/HomeComponent.html":{}}}],["deploying",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["design",{"_index":2574,"title":{},"body":{"index.html":{}}}],["designed",{"_index":2487,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":2582,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":2597,"title":{},"body":{"index.html":{}}}],["details",{"_index":275,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["details(name",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["detect",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["detection",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["determines",{"_index":1514,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dev",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":2600,"title":{},"body":{"index.html":{}}}],["development",{"_index":1162,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1157,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":2531,"title":{},"body":{"index.html":{}}}],["devices",{"_index":2575,"title":{},"body":{"index.html":{}}}],["different",{"_index":2523,"title":{},"body":{"index.html":{}}}],["differentiation",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":315,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disables",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["disappears",{"_index":2333,"title":{},"body":{"components/ToastComponent.html":{}}}],["dismiss",{"_index":2312,"title":{},"body":{"components/ToastComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displayedpercentage",{"_index":649,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displayedpercentage.tofixed(1",{"_index":801,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displaying",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["displays",{"_index":1481,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["distinct",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":2522,"title":{},"body":{"index.html":{}}}],["document.createelement('div",{"_index":2346,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":2336,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":980,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":995,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2405,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":333,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2012,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":2567,"title":{},"body":{"index.html":{}}}],["drinks",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":967,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":968,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":963,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":1007,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":996,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":994,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":992,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":987,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":984,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":1010,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":1012,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":982,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":1003,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":1001,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":1008,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":977,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":782,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["during",{"_index":1918,"title":{},"body":{"components/MusicComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2310,"title":{},"body":{"components/ToastComponent.html":{}}}],["e",{"_index":895,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1200,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["each",{"_index":2342,"title":{},"body":{"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["ease",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["easily",{"_index":2489,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1236,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["editform",{"_index":1229,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["education",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":1859,"title":{},"body":{"components/MusicComponent.html":{}}}],["elapseddays",{"_index":775,"title":{},"body":{"components/BudgetComponent.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["email",{"_index":2143,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":965,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitting",{"_index":2245,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":1405,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":2490,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1539,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2552,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":2081,"title":{},"body":{"injectables/PostApiService.html":{}}}],["endpoints",{"_index":1167,"title":{},"body":{"injectables/ConfigService.html":{}}}],["enhances",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["ensuring",{"_index":2585,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2225,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":2239,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entries",{"_index":2528,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2548,"title":{},"body":{"index.html":{}}}],["environment",{"_index":591,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":598,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["environment.developmentenvironment",{"_index":1163,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":600,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":908,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["etc",{"_index":1116,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["event",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":1702,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":1024,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":1700,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":1780,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":993,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["example",{"_index":2380,"title":{},"body":{"injectables/ToastService.html":{}}}],["exceeded",{"_index":757,"title":{},"body":{"components/BudgetComponent.html":{}}}],["existing",{"_index":2338,"title":{},"body":{"components/ToastComponent.html":{}}}],["exists",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["exp",{"_index":904,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":915,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.category_icon",{"_index":1314,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":916,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.date",{"_index":1370,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["exp.isextraspending",{"_index":1372,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["exp.location",{"_index":920,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.note",{"_index":919,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.payment_mode",{"_index":921,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.time",{"_index":918,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["expands",{"_index":2204,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.component",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.service",{"_index":927,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":923,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1187,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expensecountmap",{"_index":939,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":945,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedetailsmodalcomponent",{"_index":274,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2130,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":276,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":294,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["expenses.filter((exp",{"_index":734,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expenses.filter(exp",{"_index":1630,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":1590,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1196,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":940,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1227,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2138,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1288,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["expensesinrange",{"_index":733,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expensessearch",{"_index":2260,"title":{},"body":{"components/SearchComponent.html":{}}}],["experience",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1126,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":2536,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["express",{"_index":2466,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["externally",{"_index":2328,"title":{},"body":{"components/ToastComponent.html":{}}}],["extra",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["extract",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["exwise",{"_index":1338,"title":{},"body":{"components/FooterComponent.html":{}}}],["f44336",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fade",{"_index":2364,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["fails",{"_index":1903,"title":{},"body":{"components/MusicComponent.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fast",{"_index":2587,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["features",{"_index":2511,"title":{},"body":{"index.html":{}}}],["features/add",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["features/analysis/analysis.component",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["features/search/search.component",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":1608,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":1665,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":897,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fetching",{"_index":1146,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff4081",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2040,"title":{},"body":{"components/PieChartComponent.html":{}}}],["field",{"_index":930,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchButtonComponent.html":{}}}],["fieldname",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["filter(loc",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2163,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":1512,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["finalize",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":1919,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":2497,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1376,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2485,"title":{},"body":{"index.html":{}}}],["firstday",{"_index":872,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":1913,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1141,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fits",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["flag",{"_index":1766,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1754,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":2348,"title":{},"body":{"components/ToastComponent.html":{}}}],["flexibility",{"_index":2562,"title":{},"body":{"index.html":{}}}],["floating",{"_index":2202,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2592,"title":{},"body":{"index.html":{}}}],["focus",{"_index":2227,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":1432,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":2231,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["food",{"_index":2524,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1327,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1329,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1328,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":278,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":1761,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":1709,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":1540,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["format",{"_index":1401,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{}}}],["formatdateforinput",{"_index":1713,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":1729,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":1714,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":1737,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1731,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatted",{"_index":1736,"title":{},"body":{"components/HomeComponent.html":{}}}],["formattedexpense",{"_index":1195,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":1604,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":1825,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":1950,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":1949,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":1835,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":1946,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1127,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formsmodule",{"_index":321,"title":{},"body":{"components/AiComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{}}}],["forwards",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":914,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{}}}],["framework",{"_index":2501,"title":{},"body":{"index.html":{}}}],["fri",{"_index":865,"title":{},"body":{"components/CalendarComponent.html":{}}}],["friendly",{"_index":1396,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1222,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":608,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["fromdate.gettime",{"_index":770,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":1365,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":2500,"title":{},"body":{"index.html":{}}}],["full",{"_index":2353,"title":{},"body":{"components/ToastComponent.html":{}}}],["fullnames",{"_index":1663,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":1675,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fully",{"_index":2324,"title":{},"body":{"components/ToastComponent.html":{}}}],["function",{"_index":1180,"title":{},"body":{"components/CustomModalComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["functionality",{"_index":2512,"title":{},"body":{"index.html":{}}}],["functions",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":2542,"title":{},"body":{"index.html":{}}}],["g",{"_index":1307,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gathers",{"_index":2069,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":335,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":331,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generated",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["generateexpenseanalysisprompt",{"_index":1344,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1349,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generates",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["generateuserid",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["getall",{"_index":617,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":2186,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2185,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2190,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiservice",{"_index":1446,"title":{"injectables/GetApiService.html":{}},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["getapiurl",{"_index":1158,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2195,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1315,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1213,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":2192,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":1715,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2193,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1286,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1295,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1147,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlast30daysexpenses",{"_index":1345,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1189,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getresponse",{"_index":1346,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":1355,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":1826,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":1838,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":935,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getting",{"_index":2477,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":2188,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2061,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2197,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":2395,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":2394,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":594,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["gifts",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{}}}],["global",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":2214,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":280,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":400,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["globally",{"_index":2320,"title":{},"body":{"components/ToastComponent.html":{}}}],["go",{"_index":2498,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":1716,"title":{},"body":{"components/HomeComponent.html":{}}}],["goprevious",{"_index":1717,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":2518,"title":{},"body":{"index.html":{}}}],["graphs",{"_index":1487,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":284,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":1489,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":1490,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":283,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":891,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":679,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":2515,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":1392,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1496,"title":{},"body":{"components/GraphsComponent.html":{}}}],["groceries",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grouped",{"_index":1521,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":912,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":986,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["hamburger",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":285,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":2054,"title":{},"body":{"injectables/PostApiService.html":{}}}],["handler",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["headers",{"_index":1134,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["health",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":988,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["hello",{"_index":1394,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":1379,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":2152,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpful",{"_index":1375,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":1424,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hi",{"_index":1393,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hiddeninput",{"_index":1807,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":1811,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1455,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["history",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["home",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":289,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":1706,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1707,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":288,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["host",{"_index":2255,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":1005,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":1642,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2060,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":1646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["html",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["htmlelement",{"_index":1025,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["htmlinputelement",{"_index":1747,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["http://localhost:8000",{"_index":1169,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpclient",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["httpclientmodule",{"_index":322,"title":{},"body":{"components/AiComponent.html":{}}}],["httpheaders",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1170,"title":{},"body":{"injectables/ConfigService.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1403,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":1423,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":924,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["icon.component.css",{"_index":1817,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.html",{"_index":1816,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.ts",{"_index":1815,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:10",{"_index":1818,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon/info",{"_index":1814,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["id",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1386,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["immediately",{"_index":2533,"title":{},"body":{"index.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["include",{"_index":1125,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["including",{"_index":1553,"title":{},"body":{"components/GraphsComponent.html":{}}}],["incorrect",{"_index":2571,"title":{},"body":{"index.html":{}}}],["increment",{"_index":786,"title":{},"body":{"components/BudgetComponent.html":{}}}],["independent",{"_index":2506,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2125,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicating",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["indicator",{"_index":1799,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["indigo",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1123,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["infoiconcomponent",{"_index":290,"title":{"components/InfoIconComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["informative",{"_index":2555,"title":{},"body":{"index.html":{}}}],["init",{"_index":1759,"title":{},"body":{"components/HomeComponent.html":{}}}],["initform",{"_index":1230,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initialization",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"injectables/ToastService.html":{}}}],["initialized",{"_index":2325,"title":{},"body":{"components/ToastComponent.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject(platform_id",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":581,"title":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":583,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["injected",{"_index":590,"title":{},"body":{"injectables/AppVersionService.html":{},"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"index.html":{}}}],["input[type=\"date",{"_index":1797,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":1800,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":1735,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":1739,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":1746,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":1782,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":975,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":767,"title":{},"body":{"components/BudgetComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["instanceof",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["integrates",{"_index":2309,"title":{},"body":{"components/ToastComponent.html":{}}}],["intended",{"_index":2056,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interactive",{"_index":2517,"title":{},"body":{"index.html":{}}}],["interface",{"_index":603,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":605,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intersect",{"_index":1573,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":788,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["intuitive",{"_index":2576,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":925,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_app_updated",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["is_backup",{"_index":2144,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isappupdated",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["isbrowser",{"_index":613,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":970,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":893,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":650,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":651,"title":{},"body":{"components/BudgetComponent.html":{}}}],["iseditopen",{"_index":1234,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ismenuopen",{"_index":1681,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":1790,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":1786,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":1789,"title":{},"body":{"components/HomeComponent.html":{}}}],["isopen",{"_index":2208,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":1454,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["item",{"_index":633,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"injectables/StorageService.html":{}}}],["item'},{'name",{"_index":309,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":1596,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":632,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":953,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":2275,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2274,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:10",{"_index":2276,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":1591,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1212,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.note?.trim",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":1645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2165,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":2273,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2173,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1219,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1221,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":2349,"title":{},"body":{"components/ToastComponent.html":{}}}],["jan",{"_index":1607,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":1664,"title":{},"body":{"components/GraphsComponent.html":{}}}],["job",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["json",{"_index":1129,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["json.parse(cleanedsong",{"_index":1898,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2158,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2187,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2162,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2191,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2189,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":627,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(currentsettings",{"_index":2393,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(last15daysexpenses",{"_index":1440,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2184,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":961,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2176,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsonerror",{"_index":1899,"title":{},"body":{"components/MusicComponent.html":{}}}],["jul",{"_index":1612,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":1669,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1611,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":1668,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":2350,"title":{},"body":{"components/ToastComponent.html":{}}}],["keep",{"_index":1431,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["key",{"_index":943,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":1728,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":1722,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":1726,"title":{},"body":{"components/HomeComponent.html":{}}}],["keywords",{"_index":2546,"title":{},"body":{"index.html":{}}}],["label",{"_index":888,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["labels",{"_index":698,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["language",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["laptop",{"_index":2581,"title":{},"body":{"index.html":{}}}],["last",{"_index":1381,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["last15daysexpenses",{"_index":1350,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2067,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2089,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2093,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2087,"title":{},"body":{"injectables/PostApiService.html":{}}}],["latest",{"_index":2572,"title":{},"body":{"index.html":{}}}],["latestbudget",{"_index":652,"title":{},"body":{"components/BudgetComponent.html":{}}}],["launch",{"_index":2514,"title":{},"body":{"index.html":{}}}],["legend",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["length",{"_index":2220,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["let’s",{"_index":1430,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":2602,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":2499,"title":{},"body":{"index.html":{}}}],["lg",{"_index":2358,"title":{},"body":{"components/ToastComponent.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["light",{"_index":704,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":2505,"title":{},"body":{"index.html":{}}}],["limit",{"_index":762,"title":{},"body":{"components/BudgetComponent.html":{}}}],["line",{"_index":1565,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["list",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1284,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1283,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1282,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1291,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:14",{"_index":1290,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:15",{"_index":1289,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:23",{"_index":1298,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:27",{"_index":1296,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:32",{"_index":1294,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1281,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listener",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["listening",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":997,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["listexpensescomponent",{"_index":292,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":2534,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":1156,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadbudgets",{"_index":660,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadcategories",{"_index":971,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":1499,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":1500,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":1518,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":1758,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":282,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":1453,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":1452,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":1451,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:12",{"_index":1461,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:13",{"_index":1457,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":1460,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1458,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":1470,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":1474,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:15",{"_index":1475,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:19",{"_index":1472,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1476,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loaderservice",{"_index":1465,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loading",{"_index":910,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{}}}],["loadmonthdata",{"_index":1501,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":1522,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["loadsomething",{"_index":1466,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":1502,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":1524,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2175,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":626,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":951,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1210,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":2392,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2183,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":1358,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2084,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2085,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":2598,"title":{},"body":{"index.html":{}}}],["logic",{"_index":748,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["long",{"_index":883,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":911,"title":{},"body":{"components/CalendarComponent.html":{}}}],["main",{"_index":1545,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["mainartist",{"_index":1904,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":1910,"title":{},"body":{"components/MusicComponent.html":{}}}],["making",{"_index":2504,"title":{},"body":{"index.html":{}}}],["manage",{"_index":983,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["management",{"_index":2486,"title":{},"body":{"index.html":{}}}],["manager",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["managing",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":942,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{}}}],["map((artist",{"_index":1941,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":944,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1197,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":1592,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":941,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":359,"title":{},"body":{"components/AiComponent.html":{}}}],["mar",{"_index":1609,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":1666,"title":{},"body":{"components/GraphsComponent.html":{}}}],["mark",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":1131,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["marked",{"_index":343,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":355,"title":{},"body":{"components/AiComponent.html":{}}}],["match",{"_index":1117,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matching",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil((todate.gettime",{"_index":769,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.floor(seconds",{"_index":1924,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":1313,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1312,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(math.ceil((today.gettime",{"_index":776,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totalbudget",{"_index":741,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totaldays",{"_index":778,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.min((spent",{"_index":739,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.round(2.55",{"_index":1305,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.round(data.amount",{"_index":625,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":634,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":985,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":2221,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2047,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":287,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":1958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":1679,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":1680,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":1678,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:13",{"_index":1687,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":1693,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1692,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1688,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":1690,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":1677,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":755,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":1436,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["milliseconds",{"_index":2331,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["min",{"_index":1923,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimumfractiondigits",{"_index":2046,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minute",{"_index":1643,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":1926,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":2608,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1907,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["mm",{"_index":1733,"title":{},"body":{"components/HomeComponent.html":{}}}],["mobile",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["modal",{"_index":1174,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["modal'},{'name",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1175,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1173,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:10",{"_index":1179,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:11",{"_index":1182,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:12",{"_index":1181,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:14",{"_index":1240,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:15",{"_index":1238,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:16",{"_index":1239,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:17",{"_index":1241,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1242,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1243,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:20",{"_index":1251,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1237,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1246,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1245,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1247,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:48",{"_index":1250,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:56",{"_index":1249,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:67",{"_index":1244,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:71",{"_index":1248,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/custom",{"_index":1172,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["modal/expense",{"_index":1228,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":827,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modalid",{"_index":1176,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modaltitle",{"_index":828,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":351,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modelreply",{"_index":1143,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":2503,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2604,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mon",{"_index":861,"title":{},"body":{"components/CalendarComponent.html":{}}}],["money",{"_index":2480,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":2599,"title":{},"body":{"index.html":{}}}],["month",{"_index":845,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":882,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":2593,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":1485,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":1652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":1661,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":1657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":1656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":898,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["monthname",{"_index":1618,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":1606,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":1655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":1619,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":1658,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":1660,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthstr",{"_index":878,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{}}}],["mouse",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["mouseevent",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["msg",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":353,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":350,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":2554,"title":{},"body":{"index.html":{}}}],["music",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["music'},{'name",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":1822,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":1821,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":295,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1191,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1192,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["navbar",{"_index":1952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":1953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":297,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2540,"title":{},"body":{"index.html":{}}}],["navigateandclose",{"_index":1683,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":1689,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":1742,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigationend",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":2586,"title":{},"body":{"index.html":{}}}],["negative",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":629,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["next",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["nextsong",{"_index":1884,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":1886,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":1576,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1969,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":1488,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngonchanges",{"_index":1503,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":1526,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1827,"title":{},"body":{"components/MusicComponent.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["none",{"_index":1805,"title":{},"body":{"components/HomeComponent.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ToastComponent.html":{}}}],["notifications",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nov",{"_index":1616,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":1673,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2092,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2108,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1301,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":610,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number(item.amount",{"_index":894,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":1928,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2013,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2016,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2167,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.values(categorytotals",{"_index":2014,"title":{},"body":{"components/PieChartComponent.html":{}}}],["oct",{"_index":1615,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":1672,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offset",{"_index":839,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":621,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2059,"title":{},"body":{"injectables/PostApiService.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["onchanges",{"_index":1486,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":1684,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclick(event",{"_index":1691,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclose",{"_index":1177,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["ondelete",{"_index":1231,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1820,"title":{},"body":{"components/MusicComponent.html":{}}}],["ondocumentclick",{"_index":972,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":1004,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["oninputchange",{"_index":1718,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":1745,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":1719,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":1750,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":2210,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onseek",{"_index":1828,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":1841,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":1287,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1297,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":1829,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["opacity",{"_index":578,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{}}}],["open",{"_index":2235,"title":{},"body":{"components/SearchButtonComponent.html":{},"index.html":{}}}],["opened",{"_index":2229,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["openeditmodal",{"_index":661,"title":{},"body":{"components/BudgetComponent.html":{}}}],["openmodal",{"_index":662,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":842,"title":{},"body":{"components/CalendarComponent.html":{}}}],["operations",{"_index":2589,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":2578,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":2033,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["orange",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":2569,"title":{},"body":{"index.html":{}}}],["others",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["otherwise",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["out",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["outline",{"_index":1806,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":1013,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":978,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":999,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":761,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["overlay",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":2484,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":2354,"title":{},"body":{"components/ToastComponent.html":{}}}],["p.text).join('\\n\\n",{"_index":1145,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":2456,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":1190,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1194,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1193,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["page",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["paragraph",{"_index":1413,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":966,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["parse",{"_index":1901,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":1784,"title":{},"body":{"components/HomeComponent.html":{}}}],["parsefloat(exp.amount",{"_index":737,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parsefloat(this.latestbudget.amount.tostring",{"_index":730,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parseint(color.replace",{"_index":1302,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["parseint(exp.amount",{"_index":906,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":1595,"title":{},"body":{"components/GraphsComponent.html":{}}}],["parsing",{"_index":1902,"title":{},"body":{"components/MusicComponent.html":{}}}],["part",{"_index":931,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":630,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["parts",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1144,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2076,"title":{},"body":{"injectables/PostApiService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2161,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":2164,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patterns",{"_index":1388,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["payment",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["payment_mode",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["per",{"_index":2596,"title":{},"body":{"index.html":{}}}],["percent",{"_index":1293,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":738,"title":{},"body":{"components/BudgetComponent.html":{}}}],["perform",{"_index":2064,"title":{},"body":{"injectables/PostApiService.html":{}}}],["persistent",{"_index":2510,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1421,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":2566,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1351,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":1749,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":300,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["piechartcomponent",{"_index":299,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["platform_id",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["platformid",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":1908,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":1849,"title":{},"body":{"components/MusicComponent.html":{}}}],["playing",{"_index":2482,"title":{},"body":{"index.html":{}}}],["playsong",{"_index":1830,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":1844,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":563,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["plotoptions",{"_index":699,"title":{},"body":{"components/BudgetComponent.html":{}}}],["plugins",{"_index":2035,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1803,"title":{},"body":{"components/HomeComponent.html":{}}}],["points",{"_index":1411,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":1374,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":1390,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":1420,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["popup",{"_index":2539,"title":{},"body":{"index.html":{}}}],["position",{"_index":2036,"title":{},"body":{"components/PieChartComponent.html":{}}}],["positive",{"_index":1120,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1164,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":404,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2101,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2109,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2074,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2062,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predict",{"_index":1380,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":1384,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["presses",{"_index":2224,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevents",{"_index":1724,"title":{},"body":{"components/HomeComponent.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["prevmonthdays",{"_index":877,"title":{},"body":{"components/CalendarComponent.html":{}}}],["privacy",{"_index":2591,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["process",{"_index":1428,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["processes",{"_index":1520,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":2205,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["production",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":800,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1357,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompt",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":1443,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":2005,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":587,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1382,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["providedin",{"_index":601,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["providehttpclient",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":2065,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["public",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":1378,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["pwa",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["q",{"_index":1862,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1442,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":1398,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":1429,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":2544,"title":{},"body":{"index.html":{}}}],["r",{"_index":1306,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["random",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":1484,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["raw",{"_index":352,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["read/write",{"_index":2588,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":593,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["received",{"_index":1888,"title":{},"body":{"components/MusicComponent.html":{}}}],["recent",{"_index":1427,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommendation",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":2387,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["red",{"_index":751,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"injectables/ToastService.html":{}}}],["reflected",{"_index":2532,"title":{},"body":{"index.html":{}}}],["register",{"_index":1471,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":1473,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":2375,"title":{},"body":{"injectables/ToastService.html":{}}}],["registered",{"_index":2383,"title":{},"body":{"injectables/ToastService.html":{}}}],["registering",{"_index":2371,"title":{},"body":{"injectables/ToastService.html":{}}}],["registers",{"_index":2326,"title":{},"body":{"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1426,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["release",{"_index":2573,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2070,"title":{},"body":{"injectables/PostApiService.html":{}}}],["reloads",{"_index":1535,"title":{},"body":{"components/GraphsComponent.html":{}}}],["remaining",{"_index":740,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["remainingdays",{"_index":777,"title":{},"body":{"components/BudgetComponent.html":{}}}],["remove",{"_index":2367,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{}}}],["removes",{"_index":2226,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["render",{"_index":2377,"title":{},"body":{"injectables/ToastService.html":{}}}],["rendercalendar",{"_index":833,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":844,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":1970,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":1980,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendering",{"_index":2053,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["rendermode",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rent",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace",{"_index":1893,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":1402,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["representing",{"_index":597,"title":{},"body":{"injectables/AppVersionService.html":{},"index.html":{}}}],["represents",{"_index":2553,"title":{},"body":{"index.html":{}}}],["reqhandler",{"_index":2453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":2055,"title":{},"body":{"injectables/PostApiService.html":{}}}],["required",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/MusicComponent.html":{}}}],["requires",{"_index":2370,"title":{},"body":{"injectables/ToastService.html":{}}}],["res",{"_index":1140,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["res.app_version",{"_index":2103,"title":{},"body":{"injectables/PostApiService.html":{}}}],["res.data?.results",{"_index":1911,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1142,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1340,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1920,"title":{},"body":{"components/MusicComponent.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HomeComponent.html":{}}}],["resetting",{"_index":1762,"title":{},"body":{"components/HomeComponent.html":{}}}],["resize",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":1391,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":1128,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["responsehtml",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["responsibilities",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{},"components/ToastComponent.html":{}}}],["responsive",{"_index":2034,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restricts",{"_index":2219,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["results",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":1912,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":1369,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":1914,"title":{},"body":{"components/MusicComponent.html":{}}}],["retrieving",{"_index":1510,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["reusable",{"_index":2308,"title":{},"body":{"components/ToastComponent.html":{}}}],["rgb(${math.max(r",{"_index":1311,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["rights",{"_index":1339,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":265,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":2356,"title":{},"body":{"components/ToastComponent.html":{}}}],["route",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2057,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["runs",{"_index":2322,"title":{},"body":{"components/ToastComponent.html":{}}}],["rxjs",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1048,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safehtml",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sanitizer",{"_index":332,"title":{},"body":{"components/AiComponent.html":{}}}],["sat",{"_index":866,"title":{},"body":{"components/CalendarComponent.html":{}}}],["save",{"_index":811,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["saved",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["saveddata",{"_index":2157,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":2169,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":2178,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":2181,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["saving",{"_index":721,"title":{},"body":{"components/BudgetComponent.html":{}}}],["scales",{"_index":2048,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schema",{"_index":378,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":2166,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":2171,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screens",{"_index":2580,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":2603,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":990,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["seamless",{"_index":2496,"title":{},"body":{"index.html":{}}}],["search",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["search'},{'name",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["search.component.css",{"_index":2259,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":2258,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchbuttoncomponent",{"_index":302,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":1316,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1216,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchcomponent",{"_index":305,"title":{"components/SearchComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searcherror",{"_index":1917,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchinput",{"_index":2209,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchsong",{"_index":1831,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2116,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":1925,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":1644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["seconds",{"_index":1837,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":401,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionsource",{"_index":2262,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2483,"title":{},"body":{"index.html":{}}}],["seektime",{"_index":1927,"title":{},"body":{"components/MusicComponent.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectcategory",{"_index":973,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":1006,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1235,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1273,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1274,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1275,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1279,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1277,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1278,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1276,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selecting",{"_index":964,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":329,"title":{},"body":{"components/AiComponent.html":{}}}],["sendmessage(message",{"_index":1445,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2071,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":1412,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1614,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":1671,"title":{},"body":{"components/GraphsComponent.html":{}}}],["series",{"_index":694,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["server",{"_index":2075,"title":{},"body":{"injectables/PostApiService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":2413,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":2454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":2417,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["service/backend",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["service/gemini",{"_index":344,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":692,"title":{},"body":{"components/BudgetComponent.html":{}}}],["service/localstorage/category.service",{"_index":1014,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/storage.service",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/saavan",{"_index":1860,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["service/util/app",{"_index":1333,"title":{},"body":{"components/FooterComponent.html":{}}}],["services",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["set",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setinterval",{"_index":789,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["sets",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["setsection",{"_index":2263,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2264,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":307,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"injectables/PostApiService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":311,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":310,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":1720,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":1752,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":2357,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":1572,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":2526,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":1395,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shouldbackup",{"_index":2091,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{}}}],["show(message",{"_index":2378,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":1459,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["showaibutton",{"_index":1682,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":1955,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showbudgetsection",{"_index":653,"title":{},"body":{"components/BudgetComponent.html":{}}}],["showing",{"_index":2373,"title":{},"body":{"injectables/ToastService.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":654,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["showtoast",{"_index":2316,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":2329,"title":{},"body":{"components/ToastComponent.html":{}}}],["sidebar",{"_index":2278,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2279,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2280,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":312,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":1857,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":1853,"title":{},"body":{"components/MusicComponent.html":{}}}],["silently",{"_index":2058,"title":{},"body":{"injectables/PostApiService.html":{}}}],["simplechanges",{"_index":1527,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["skipped",{"_index":2111,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2114,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":2579,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":2494,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1119,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":2253,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":1566,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":1377,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["something",{"_index":1418,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["song",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song.artists.primary[0]?.name",{"_index":1944,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":1866,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":1943,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":1897,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1132,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1122,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":2547,"title":{},"body":{"index.html":{}}}],["sort((a",{"_index":946,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":2543,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":1002,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["specific",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["specifically",{"_index":2493,"title":{},"body":{"index.html":{}}}],["spending",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["spent",{"_index":742,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["spent/day",{"_index":2559,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../budget.component.ts",{"_index":2611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../categories.ts",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:113",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:159",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:170",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:178",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:188",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:67",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:84",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2409,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2414,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":2416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":962,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/custom",{"_index":1171,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":1480,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":1570,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":1568,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":1574,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":1507,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":1575,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":1531,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":1528,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":1533,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":1517,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":1523,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":1519,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":1513,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":1511,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":1525,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":1547,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":1555,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":1560,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":1544,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":1550,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":1558,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":1564,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/info",{"_index":1813,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1226,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":1961,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":2199,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/setting",{"_index":2272,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":319,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:17",{"_index":339,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:18",{"_index":334,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:25",{"_index":336,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/analysis/analysis.component.ts",{"_index":362,"title":{},"body":{"components/AnalysisComponent.html":{},"coverage.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":637,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/budget/budget.component.ts:117",{"_index":670,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:127",{"_index":666,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:175",{"_index":665,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:192",{"_index":669,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:24",{"_index":681,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:25",{"_index":684,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:26",{"_index":690,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:27",{"_index":689,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:28",{"_index":688,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:29",{"_index":683,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:30",{"_index":680,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:31",{"_index":682,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:32",{"_index":676,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:33",{"_index":677,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:34",{"_index":691,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:35",{"_index":687,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:36",{"_index":685,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:37",{"_index":686,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:38",{"_index":675,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:39",{"_index":664,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:60",{"_index":671,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:64",{"_index":668,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:72",{"_index":674,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:78",{"_index":673,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:88",{"_index":667,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:92",{"_index":672,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":819,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:100",{"_index":843,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:112",{"_index":840,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:15",{"_index":854,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:16",{"_index":852,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:17",{"_index":849,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:18",{"_index":858,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:19",{"_index":848,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:20",{"_index":857,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:21",{"_index":856,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:22",{"_index":855,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:23",{"_index":850,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":834,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:28",{"_index":859,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":841,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:37",{"_index":838,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:49",{"_index":846,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:90",{"_index":836,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1704,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":1740,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":1748,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":1751,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":1730,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":1738,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":1723,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":1757,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":1764,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":1765,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":1767,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1756,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":1760,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":1753,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":1744,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":1741,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":1819,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:129",{"_index":1836,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:135",{"_index":1840,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:139",{"_index":1842,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:14",{"_index":1856,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:148",{"_index":1848,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:15",{"_index":1858,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:16",{"_index":1851,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:17",{"_index":1852,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:18",{"_index":1855,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:19",{"_index":1854,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:20",{"_index":1834,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:24",{"_index":1846,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:33",{"_index":1839,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:37",{"_index":1845,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:67",{"_index":1843,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/search/search.component.ts",{"_index":2257,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["src/app/service/backend",{"_index":1447,"title":{},"body":{"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/gemini",{"_index":1342,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":1469,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":606,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:12",{"_index":813,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:18",{"_index":817,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:22",{"_index":816,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":814,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:35",{"_index":818,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:48",{"_index":815,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":922,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:21",{"_index":1035,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:23",{"_index":1030,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:27",{"_index":1034,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:44",{"_index":1033,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:49",{"_index":1031,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:59",{"_index":1036,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:66",{"_index":1032,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":2440,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1183,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:24",{"_index":1317,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:28",{"_index":1323,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:32",{"_index":1322,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:39",{"_index":1320,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:64",{"_index":1318,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:72",{"_index":1325,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:80",{"_index":1321,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:85",{"_index":1319,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:92",{"_index":1324,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2124,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:118",{"_index":2300,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:12",{"_index":2287,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:137",{"_index":2289,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:141",{"_index":2288,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:145",{"_index":2294,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:149",{"_index":2290,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:153",{"_index":2292,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:157",{"_index":2293,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:16",{"_index":2304,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:161",{"_index":2291,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:165",{"_index":2295,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:17",{"_index":2305,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:18",{"_index":2303,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:19",{"_index":2306,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:22",{"_index":2296,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:27",{"_index":2298,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:41",{"_index":2299,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:5",{"_index":2126,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:58",{"_index":2301,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:79",{"_index":2297,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:91",{"_index":2302,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":2386,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:21",{"_index":2396,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:25",{"_index":2399,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:29",{"_index":2397,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:34",{"_index":2400,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:41",{"_index":2398,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2261,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:10",{"_index":2267,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:12",{"_index":2265,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:9",{"_index":2269,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":2369,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:19",{"_index":2382,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:27",{"_index":2376,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:39",{"_index":2379,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/util/app",{"_index":584,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts:18",{"_index":1159,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/config/config.service.ts:29",{"_index":1160,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/utils.service.ts",{"_index":2402,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/service/util/utils.service.ts:6",{"_index":2403,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1326,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1332,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":1450,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":1676,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":1951,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:14",{"_index":1956,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:22",{"_index":1957,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2277,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:13",{"_index":2282,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:21",{"_index":2283,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":2307,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:17",{"_index":2318,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:30",{"_index":2321,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:41",{"_index":2330,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":2446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":2448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":2450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2508,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":2551,"title":{},"body":{"index.html":{}}}],["started",{"_index":2478,"title":{"index.html":{}},"body":{}}],["state",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["statements",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1983,"title":{},"body":{"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stays",{"_index":2590,"title":{},"body":{"index.html":{}}}],["steps",{"_index":784,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stop",{"_index":1889,"title":{},"body":{"components/MusicComponent.html":{}}}],["stops",{"_index":2481,"title":{},"body":{"index.html":{}}}],["storage",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["storage.service",{"_index":611,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2159,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":402,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":2155,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":599,"title":{},"body":{"injectables/AppVersionService.html":{},"components/SearchButtonComponent.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["string(date.getmonth",{"_index":1793,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":879,"title":{},"body":{"components/CalendarComponent.html":{}}}],["stroke",{"_index":1497,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1408,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["style",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":324,"title":{},"body":{"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/SearchComponent.html":{},"components/ToastComponent.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1561,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["submitedit",{"_index":1232,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscribe((event",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscriptions",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successful",{"_index":2077,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["such",{"_index":1153,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{}}}],["suggest",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":807,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["suggested/day",{"_index":2560,"title":{},"body":{"index.html":{}}}],["suggestedperday",{"_index":655,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestedperday.tofixed(2",{"_index":808,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["suggestnextsong",{"_index":2117,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":736,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["summary",{"_index":2556,"title":{},"body":{"index.html":{}}}],["sun",{"_index":860,"title":{},"body":{"components/CalendarComponent.html":{}}}],["sure",{"_index":794,"title":{},"body":{"components/BudgetComponent.html":{}}}],["surface",{"_index":892,"title":{},"body":{"components/CalendarComponent.html":{}}}],["switch",{"_index":1166,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["switches",{"_index":1534,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":1504,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":1532,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["sync",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":2149,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":2134,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":2170,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":2172,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":2179,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":2182,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":2180,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":2137,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["syncuser",{"_index":2285,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":2177,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":2140,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":2286,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":2153,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["t",{"_index":1371,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["tab",{"_index":2595,"title":{},"body":{"index.html":{}}}],["table",{"_index":932,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":2492,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":989,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2082,"title":{},"body":{"injectables/PostApiService.html":{}}}],["tap",{"_index":2538,"title":{},"body":{"index.html":{}}}],["target",{"_index":1023,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":2507,"title":{},"body":{"index.html":{}}}],["technology",{"_index":2509,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["text",{"_index":890,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["that's",{"_index":1414,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["theme_mode",{"_index":2146,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["thinking",{"_index":361,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2284,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.animatedbudgetprogress",{"_index":744,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.animatepercentage",{"_index":746,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.appversion",{"_index":1335,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.appversionservice.getversion",{"_index":1336,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.audio",{"_index":1869,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":1929,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":1880,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":1873,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":1871,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":1872,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":1874,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.avgallowedperday",{"_index":779,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.avgspentperday",{"_index":780,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetcolorclass",{"_index":750,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform",{"_index":703,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.invalid",{"_index":714,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.markallastouched",{"_index":715,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.patchvalue",{"_index":710,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.reset",{"_index":707,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.value",{"_index":716,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetkey",{"_index":2196,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetmessage",{"_index":756,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress",{"_index":743,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress.tofixed(1",{"_index":791,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets",{"_index":722,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets.length",{"_index":725,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets[this.budgets.length",{"_index":727,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.add(data",{"_index":719,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.delete(this.latestbudget.budget_id",{"_index":797,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.getall",{"_index":723,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.update(this.latestbudget.budget_id",{"_index":717,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatebudgetprogress",{"_index":728,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":885,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":871,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":887,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":881,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2022,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":1016,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":1019,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":1995,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories.foreach(cat",{"_index":1997,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2017,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":1998,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2160,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":1996,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":2009,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":1026,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":1027,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":1022,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":1993,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":1017,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":1018,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2023,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2024,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":1625,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":1623,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.closemodal",{"_index":720,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.closemodal.emit",{"_index":1271,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.configservice.getapiurl",{"_index":2095,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.currency",{"_index":701,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currency}${(spent",{"_index":759,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${remaining.tofixed(2",{"_index":765,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${spent.tofixed(2",{"_index":758,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${totalbudget.tofixed(2",{"_index":764,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currentdate",{"_index":1772,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":1628,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":1587,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":1588,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":1775,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":1777,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":1776,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":1779,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":868,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":1875,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":1870,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":870,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":1763,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1272,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1168,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayedpercentage",{"_index":745,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.duration.set(song.duration",{"_index":1876,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1269,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1253,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1262,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1265,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1268,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2194,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":1994,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2019,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":2007,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":1299,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":900,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":1367,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.filteredlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":1783,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":1787,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":1363,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generateuserid",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":2390,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":622,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1214,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlast30daysexpenses",{"_index":1361,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":1915,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2097,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":2250,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":2249,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":1477,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":1479,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":1478,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":1462,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":1359,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.history",{"_index":1139,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1133,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.post(url",{"_index":2098,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1252,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.interval",{"_index":1878,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isappupdated",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isbrowser",{"_index":618,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":1021,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":705,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["this.iseditmode",{"_index":708,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.iseditopen",{"_index":1263,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":1698,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":2242,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":1464,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.latestbudget",{"_index":726,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.amount",{"_index":711,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.fromdate",{"_index":712,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.todate",{"_index":713,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadbudgets",{"_index":706,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadcategories",{"_index":1015,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":1579,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":2003,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":1584,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{}}}],["this.loader.show",{"_index":1467,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.loadmonthdata",{"_index":2001,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":1583,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":2002,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":1585,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.locationsuggestions",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":1463,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":901,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":903,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":907,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":1881,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(url",{"_index":1916,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["this.progress.set(0",{"_index":1922,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":1930,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":1879,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query",{"_index":2246,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":2252,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim",{"_index":1863,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim().length",{"_index":2251,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":867,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2011,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":1909,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":1864,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":1885,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":357,"title":{},"body":{"components/AiComponent.html":{}}}],["this.search.emit(this.query",{"_index":2247,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":2248,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":2243,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":1703,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2266,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2271,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1267,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1264,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1254,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1255,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1256,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1261,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1260,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1258,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1259,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1257,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.showaibutton",{"_index":1694,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":1959,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showbudgetsection",{"_index":724,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.showlocationsuggestions",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":709,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":1865,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":619,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":938,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":936,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2115,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["this.suggestedperday",{"_index":781,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.syncuser(this.userkey",{"_index":2148,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":2151,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":2136,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":2139,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.theme.mode",{"_index":1578,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":1620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":2384,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":2385,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":2334,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["this.toastservice.show(\"budget",{"_index":798,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('budget",{"_index":718,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('error",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.toastservice.show('expense",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toggleedit",{"_index":1270,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":1603,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":899,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":1883,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.userinput.trim",{"_index":348,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2198,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('app_version",{"_index":2105,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('currency",{"_index":702,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2088,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('is_app_updated",{"_index":2106,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.update('last_backup",{"_index":2107,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":602,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["this.viewtype",{"_index":1582,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":1773,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":1774,"title":{},"body":{"components/HomeComponent.html":{}}}],["through",{"_index":2529,"title":{},"body":{"index.html":{}}}],["thu",{"_index":864,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ticks",{"_index":2049,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["timeamountmap",{"_index":1626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":1650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":1640,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":1647,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times",{"_index":809,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":1649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":1651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["timestr",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["title",{"_index":1178,"title":{},"body":{"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["titlecase",{"_index":1796,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1223,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast.classname",{"_index":2347,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":2315,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":2314,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":2365,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":2368,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast/toast.service",{"_index":2086,"title":{},"body":{"injectables/PostApiService.html":{}}}],["toastcomponent",{"_index":314,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":2335,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":2366,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":2340,"title":{},"body":{"components/ToastComponent.html":{}}}],["toasts",{"_index":2339,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["todate",{"_index":609,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["todate.toisostring",{"_index":1368,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":774,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["todaysexpenses",{"_index":1629,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":1641,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":1631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":1627,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["toggle",{"_index":1695,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":974,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleedit",{"_index":1233,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglemenu",{"_index":1685,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":1009,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":2211,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["tomato",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":1404,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":1537,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":1498,"title":{},"body":{"components/GraphsComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":2038,"title":{},"body":{"components/PieChartComponent.html":{}}}],["total",{"_index":902,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["totalamount",{"_index":1593,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalbudget",{"_index":729,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalbudget).tofixed(2",{"_index":760,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totaldays",{"_index":768,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalexpenses",{"_index":829,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":2577,"title":{},"body":{"index.html":{}}}],["track",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tracker",{"_index":1960,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["tracks",{"_index":2234,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["transform",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["transformeddata",{"_index":1882,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":1832,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":1847,"title":{},"body":{"components/MusicComponent.html":{}}}],["transition",{"_index":2254,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["translatey(0",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":1542,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["travel",{"_index":2525,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":1387,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["triggers",{"_index":2217,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["trim",{"_index":1894,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["tslib",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":862,"title":{},"body":{"components/CalendarComponent.html":{}}}],["two",{"_index":2516,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2609,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeclasses",{"_index":2343,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":2362,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":2361,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":614,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typically",{"_index":589,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ToastService.html":{}}}],["typing",{"_index":2545,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2374,"title":{},"body":{"injectables/ToastService.html":{},"index.html":{}}}],["ui/ux",{"_index":2491,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":917,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":615,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":1945,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["unrelated",{"_index":1399,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":2570,"title":{},"body":{"index.html":{}}}],["up",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":628,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":952,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1211,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":2388,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2168,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1266,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":1362,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["upi",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":2568,"title":{},"body":{"index.html":{}}}],["upon",{"_index":2513,"title":{},"body":{"index.html":{}}}],["url",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["url.startswith('/music",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["urls",{"_index":1155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["usage",{"_index":2583,"title":{},"body":{"index.html":{}}}],["use",{"_index":1121,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["user.service",{"_index":928,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2072,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":926,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":2145,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":2096,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2099,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":327,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2132,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":1353,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":2488,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2141,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":390,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":1577,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1385,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["uses",{"_index":2079,"title":{},"body":{"injectables/PostApiService.html":{}}}],["using",{"_index":1409,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["util/app",{"_index":2128,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["util/config/config.service",{"_index":2083,"title":{},"body":{"injectables/PostApiService.html":{}}}],["utilities",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":2565,"title":{},"body":{"index.html":{}}}],["utilsservice",{"_index":2401,"title":{"injectables/UtilsService.html":{}},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["val?.tolowercase().trim",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["validators.maxlength(100",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":1788,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":1781,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":1152,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{},"miscellaneous/variables.html":{}}}],["value}\\n",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2612,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":588,"title":{},"body":{"injectables/AppVersionService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version.service",{"_index":1334,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["version.service.ts",{"_index":586,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["version.service.ts:17",{"_index":595,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version.service.ts:29",{"_index":596,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version/app",{"_index":585,"title":{},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["versions",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2594,"title":{},"body":{"index.html":{}}}],["vibe",{"_index":1118,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":1982,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":1011,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('searchinput",{"_index":2240,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2519,"title":{},"body":{"index.html":{}}}],["viewtype",{"_index":1506,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":1710,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":1711,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["visualizes",{"_index":2521,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1415,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["v{{appversion",{"_index":1341,"title":{},"body":{"components/FooterComponent.html":{}}}],["w",{"_index":2351,"title":{},"body":{"components/ToastComponent.html":{}}}],["want",{"_index":795,"title":{},"body":{"components/BudgetComponent.html":{}}}],["warning",{"_index":1435,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["warning)defaults",{"_index":2381,"title":{},"body":{"injectables/ToastService.html":{}}}],["we're",{"_index":2133,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":1419,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":1798,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":863,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":830,"title":{},"body":{"components/CalendarComponent.html":{}}}],["whenever",{"_index":2218,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/SearchButtonComponent.html":{}}}],["white",{"_index":2359,"title":{},"body":{"components/ToastComponent.html":{}}}],["whole",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1809,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["window",{"_index":443,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.innerwidth",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":616,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window:resize",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":2520,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":2479,"title":{},"body":{"index.html":{}}}],["within",{"_index":2112,"title":{},"body":{"injectables/PostApiService.html":{}}}],["worker",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":366,"title":{},"body":{"components/AnalysisComponent.html":{},"components/SearchComponent.html":{}}}],["x",{"_index":1551,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xs",{"_index":2352,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1556,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["year",{"_index":847,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":1516,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["years",{"_index":2541,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":752,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1280,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["yyyy",{"_index":1732,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":1808,"title":{},"body":{"components/HomeComponent.html":{}}}],["zone.js",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1538,"title":{},"body":{"components/GraphsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n  userInput = '';\n  responseHtml: SafeHtml | null = null;\n\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnalysisComponent.html":{"url":"components/AnalysisComponent.html","title":"component - AnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/analysis/analysis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-analysis\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./analysis.component.html\n            \n\n\n\n            \n                styleUrl\n                ./analysis.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-analysis',\n  imports: [],\n  templateUrl: './analysis.component.html',\n  styleUrl: './analysis.component.css'\n})\nexport class AnalysisComponent {\n\n}\n\n    \n\n    \n        analysis works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'analysis works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SearchComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                AnalysisComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                isAppUpdated\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, toastService: ToastService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for displaying toast notifications\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAppUpdated\n                        \n                    \n                \n            \n            \n                \nisAppUpdated()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Checks if the application is updated.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the app is updated, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:159\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:52\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:62\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:57\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:67\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:84\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SearchComponent } from './features/search/search.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AnalysisComponent } from './features/analysis/analysis.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\nimport { ToastService } from './service/toast/toast.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent, SearchComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent,\n    AnalysisComponent, CalendarComponent, AiComponent, MusicComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   * @param toastService Service for displaying toast notifications\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    private toastService: ToastService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n\n      // Show update toast if app is not updated\n      if (!this.isAppUpdated()) {\n        setTimeout(() => {\n          this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n        }, 500);\n      }\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth ('is_app_updated') ?? false;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppVersionService.html":{"url":"injectables/AppVersionService.html","title":"injectable - AppVersionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppVersionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/app-version/app-version.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to provide the current application version.\nThis version is typically injected from the environment configuration.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for AppVersionService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/app-version/app-version.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service to provide the current application version.\n * \n * This version is typically injected from the environment configuration.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppVersionService {\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * Constructor for AppVersionService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BudgetComponent.html":{"url":"components/BudgetComponent.html","title":"component - BudgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/budget/budget.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-budget\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./budget.component.html\n            \n\n\n\n            \n                styleUrl\n                ./budget.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedBudgetProgress\n                            \n                            \n                                avgAllowedPerDay\n                            \n                            \n                                avgSpentPerDay\n                            \n                            \n                                budgetColorClass\n                            \n                            \n                                budgetForm\n                            \n                            \n                                budgetMessage\n                            \n                            \n                                budgetProgress\n                            \n                            \n                                budgets\n                            \n                            \n                                currency\n                            \n                            \n                                displayedPercentage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isEditMode\n                            \n                            \n                                latestBudget\n                            \n                            \n                                showBudgetSection\n                            \n                            \n                                showModal\n                            \n                            \n                                suggestedPerDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animatePercentage\n                            \n                            \n                                calculateBudgetProgress\n                            \n                            \n                                closeModal\n                            \n                            \n                                createForm\n                            \n                            \n                                deleteBudget\n                            \n                            \n                                loadBudgets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, budgetService: BudgetService, toastService: ToastService, fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/budget/budget.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animatePercentage\n                        \n                    \n                \n            \n            \n                \nanimatePercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBudgetProgress\n                        \n                    \n                \n            \n            \n                \ncalculateBudgetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBudget\n                        \n                    \n                \n            \n            \n                \ndeleteBudget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBudgets\n                        \n                    \n                \n            \n            \n                \nloadBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedBudgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgAllowedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgSpentPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetColorClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bg-green-500'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latestBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBudgetSection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { Budget, BudgetService } from '../../service/localStorage/budget.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  labels: string[];\n  plotOptions: ApexPlotOptions;\n};\n@Component({\n  selector: 'app-budget',\n  standalone: true,\n  imports: [ReactiveFormsModule,\n    CommonModule],\n  templateUrl: './budget.component.html',\n  styleUrl: './budget.component.css'\n})\nexport class BudgetComponent implements OnInit {\n  budgetForm: FormGroup;\n  budgets: Budget[] = [];\n  showModal = false;\n  showBudgetSection = false;\n  latestBudget!: Budget;\n  budgetProgress = 0;\n  budgetColorClass = 'bg-green-500';\n  budgetMessage = '';\n  avgAllowedPerDay = 0;\n  avgSpentPerDay = 0;\n  suggestedPerDay = 0;\n  isEditMode = false;\n  currency: string | null;\n  isDarkMode: boolean = false;\n  animatedBudgetProgress = 0;\n  displayedPercentage = 0;\n\n\n  constructor(\n    private expenseService: ExpenseService,\n    private budgetService: BudgetService,\n    private toastService: ToastService,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n    this.budgetForm = this.createForm();\n    const savedTheme = this.userService.getValue('theme_mode') ?? 'light';\n    if (savedTheme === 'dark') {\n      this.isDarkMode = true;\n    }\n    else {\n      this.isDarkMode = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.loadBudgets();\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n    });\n  }\n\n  openModal(): void {\n    this.budgetForm.reset();\n    this.isEditMode = false;\n    this.showModal = true;\n  }\n\n  openEditModal(): void {\n    this.isEditMode = true;\n    this.showModal = true;\n    this.budgetForm.patchValue({\n      amount: this.latestBudget.amount,\n      fromDate: this.latestBudget.fromDate,\n      toDate: this.latestBudget.toDate,\n    });\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n  }\n\n  onSubmit() {\n    if (this.budgetForm.invalid) {\n      this.budgetForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.budgetForm.value;\n\n    try {\n      if (this.isEditMode) {\n        this.budgetService.update(this.latestBudget.budget_id, data);\n        this.toastService.show('Budget updated successfully!', 'success');\n      } else {\n        this.budgetService.add(data);\n        this.toastService.show('Budget added successfully!', 'success');\n      }\n\n      this.loadBudgets();\n      this.closeModal();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error saving budget.', 'error');\n    }\n  }\n\n  loadBudgets() {\n    this.budgets = this.budgetService.getAll();\n    this.showBudgetSection = this.budgets.length > 0;\n\n    if (this.showBudgetSection) {\n      this.latestBudget = this.budgets[this.budgets.length - 1];\n      this.calculateBudgetProgress();\n    }\n  }\n\n  calculateBudgetProgress() {\n    const totalBudget = parseFloat(this.latestBudget.amount.toString());\n    const fromDate = new Date(this.latestBudget.fromDate);\n    const toDate = new Date(this.latestBudget.toDate);\n\n    const expenses: Expense[] = this.expenseService.getAll();\n    const expensesInRange = expenses.filter((exp: any) => {\n      const date = new Date(exp.date);\n      return date >= fromDate && date  sum + parseFloat(exp.amount), 0);\n    const percentage = Math.min((spent / totalBudget) * 100, 100);\n    const remaining = Math.max(totalBudget - spent, 0);\n    this.budgetProgress = percentage;\n    this.animatedBudgetProgress = 0;\n    this.displayedPercentage = 0;\n\n    setTimeout(() => {\n      this.animatedBudgetProgress = this.budgetProgress;\n    }, 100);\n\n    this.animatePercentage();\n\n    // Color class logic\n    if (percentage > 80) this.budgetColorClass = 'bg-red-500';\n    else if (percentage > 50) this.budgetColorClass = 'bg-yellow-500';\n    else if (percentage > 30) this.budgetColorClass = 'bg-blue-500';\n    else this.budgetColorClass = 'bg-green-500';\n\n    // Budget message\n    if (spent > totalBudget) {\n      this.budgetMessage = `⚠️ You have exceeded your budget! You spent ${this.currency}${spent.toFixed(2)} which is ${this.currency}${(spent - totalBudget).toFixed(2)} over the limit set between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 😰`;\n    } else {\n      this.budgetMessage = `✅ You have spent ${this.currency}${spent.toFixed(2)} out of ${this.currency}${totalBudget.toFixed(2)} between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 💸 Remaining: ${this.currency}${remaining.toFixed(2)}`;\n    }\n\n    // Average insights\n    const totalDays = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    const today = new Date();\n    const elapsedDays = Math.max(Math.ceil((today.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)), 1);\n    const remainingDays = Math.max(totalDays - elapsedDays, 1);\n\n    this.avgAllowedPerDay = totalBudget / totalDays;\n    this.avgSpentPerDay = spent / elapsedDays;\n    this.suggestedPerDay = remaining / remainingDays;\n  }\n\n  animatePercentage() {\n    const duration = 800;\n    const steps = 40;\n    const increment = this.budgetProgress / steps;\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      currentStep++;\n      this.displayedPercentage = +(increment * currentStep).toFixed(1);\n\n      if (currentStep >= steps) {\n        this.displayedPercentage = +this.budgetProgress.toFixed(1);\n        clearInterval(interval);\n      }\n    }, duration / steps);\n  }\n\n  deleteBudget() {\n    if (confirm(\"Are you sure you want to delete this budget?\")) {\n      this.budgetService.delete(this.latestBudget.budget_id);\n      this.toastService.show(\"Budget deleted successfully\", 'success');\n      this.closeModal();\n    }\n    this.loadBudgets();\n  }\n}\n    \n\n    \n        \n\n    \n    \n        \n            💰 Budget Progress\n            \n                \n\n                    \n                        {{ displayedPercentage.toFixed(1) }}%\n                    \n\n                \n            \n\n            \n                {{ budgetMessage }}\n            \n\n            \n                \n                    Avg Allowed / Day\n                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}\n                \n                \n                    Spent / Day\n                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}\n                \n                \n                    Suggested / Day\n                    {{currency}}{{ suggestedPerDay.toFixed(2) }}\n                \n            \n        \n        \n            \n                \n                    Update\n                \n                \n                    Delete\n                \n            \n        \n\n    \n\n    \n    \n        \n            \n            \n                \n            \n\n            \n            \n                \n            \n            \n                ➕ Add Budget\n            \n        \n    \n\n    \n    \n        \n            \n                \n                    {{ isEditMode ? 'Update Budget' : 'Add Budget' }}\n                \n\n                &times;\n            \n            \n                Amount\n                \n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n                From Date\n                \n                \n                    From Date is required\n                \n                To Date\n                \n                \n                    To Date is required\n                \n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            💰 Budget Progress                                                                        {{ displayedPercentage.toFixed(1) }}%                                                                            {{ budgetMessage }}                                                            Avg Allowed / Day                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}                                                    Spent / Day                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}                                                    Suggested / Day                    {{currency}}{{ suggestedPerDay.toFixed(2) }}                                                                                            Update                                                    Delete                                                                                                                                                                                            ➕ Add Budget                                                                                        {{ isEditMode ? \\'Update Budget\\' : \\'Add Budget\\' }}                                ×                                        Amount                                                    Amount cannot be negative                                                    Amount is required                                From Date                                                    From Date is required                                To Date                                                    To Date is required                                                    Cancel                    Save                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BudgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Budget[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\n\nexport class CalendarComponent implements OnInit {\n  currentYear = new Date().getFullYear();\n  currentMonth = new Date().getMonth();\n  calendarTitle = '';\n  totalExpenses = 0;\n  calendarDays: any[] = [];\n  showModal = false;\n  modalTitle = '';\n  modalExpenses: any[] = [];\n  currency: string | null;\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\nsuch as API base URLs based on the current environment (local or live).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/config/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/config/config.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL based on the development environment.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/config/config.service.ts:18\n                        \n                    \n\n            \n                \n                    The current environment setting.\nPossible values: 'local' | 'live'.\nChange this value to switch API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n * such as API base URLs based on the current environment (local or live).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting.\n   * Possible values: 'local' | 'live'.\n   * Change this value to switch API endpoints.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL based on the development environment.\n   *\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return \"http://localhost:8000\";\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return \"https://exwiseapi.onrender.com\";\n    }\n    else {\n      return \"http://localhost:8000\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomModalComponent.html":{"url":"components/CustomModalComponent.html","title":"component - CustomModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/custom-modal/custom-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-modal\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./custom-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalId\n                            \n                            \n                                onClose\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onClose\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => { }\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Modal Title'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-modal',\n  templateUrl: './custom-modal.component.html',\n  standalone: true,\n  imports: []\n})\nexport class CustomModalComponent {\n  @Input() modalId!: string;\n  @Input() title: string = 'Modal Title';\n  @Input() onClose: () => void = () => { };\n}\n\n    \n\n    \n        \n    \n        {{ title }}\n        &times;\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}        ×        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n  @Input() selectedExpense: any;\n  @Input() currency: string | null = '';\n  @Input() isEditOpen: boolean = false;\n  @Output() closeModal = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() edit = new EventEmitter();\n  selectedCategoryName: string = 'Select Category';\n  editForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  initForm() {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  onCategorySelected(category: any) {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  toggleEdit() {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  submitEdit() {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  close() {\n    this.closeModal.emit();\n  }\n\n  onDelete() {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\n\nexport class ExpenseListComponent {\n  @Input() expenses: any[] = [];\n  @Input() currency: string | null;\n  @Output() expenseSelected = new EventEmitter();\n\n  constructor(\n  ) {\n    this.currency = '';\n\n  }\n\n  onSelect(expense: any) {\n    this.expenseSelected.emit(expense);\n  }\n\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n    return date.toLocaleDateString();\n  }\n\n  darkenColor(color: string, percent: number): string {\n    try {\n      const num = parseInt(color.replace('#', ''), 16);\n      const amt = Math.round(2.55 * percent * 100);\n      const R = (num >> 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Expense[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppVersionService } from '../../service/util/app-version/app-version.service';\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n  appVersion: string = \"\";\n  constructor(private appVersionService: AppVersionService) {\n    this.appVersion = this.appVersionService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Pick[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService, private expenseService: ExpenseService) { }\n\n  async getResponse(prompt: string): Promise {\n\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics, personal advice), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetApiService.html":{"url":"injectables/GetApiService.html","title":"injectable - GetApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/get/get-api.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/get/get-api.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetApiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service'\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n  isVisible = false;\n  message = \"\";\n\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  show(text: string = \"Loading...\") {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  hide() {\n    this.isVisible = false;\n  }\n}\n\n// constructor(private loader: LoaderService) {}\n\n// loadSomething() {\n//   this.loader.show();\n//   setTimeout(() => {\n//     this.loader.hide();\n//   }, 3000);\n// }\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  register(component: GlobalLoaderComponent) {\n    this.globalLoaderComponent = component;\n  }\n  \n  show(text: string = \"Loading...\") {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  hide() {\n    this.globalLoaderComponent?.hide();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  showAIButton = false;\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n  isMenuOpen = false;\n\n  // Toggle the menu when the button is clicked\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  // Close the menu if clicked outside\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    const clickedInside = event.target instanceof HTMLElement && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoIconComponent.html":{"url":"components/InfoIconComponent.html","title":"component - InfoIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/info-icon/info-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-icon\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./info-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info-icon.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Info tooltip'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/info-icon/info-icon.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-icon',\n  imports: [],\n  templateUrl: './info-icon.component.html',\n  styleUrl: './info-icon.component.css'\n})\nexport class InfoIconComponent {\n  @Input() message: string = 'Info tooltip';\n}\n\n    \n\n    \n        \n    \n    \n        {{ message }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ message }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                playSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: any; type: any; year: any; duration: any; label: any; playCount: any; language: any; copyright: any; album: { name: any; }; artists: { all: any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\n\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './music.component.html',\n  styleUrl: './music.component.css'\n})\nexport class MusicComponent implements OnDestroy {\n  query = '';\n  songs = signal([]);\n  audio = new Audio();\n  currentSong: any = null;\n  progress = signal(0);\n  duration = signal(0);\n  interval: any = null;\n\n  constructor(private saavnService: SaavnService) { }\n\n  searchSong() {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  playSong(url: string, song: any) {\n    if (!this.audio) {\n      this.audio = new Audio();\n    }\n\n    if (this.currentSong?.url === url) {\n      if (this.audio.paused) {\n        this.audio.play();\n      } else {\n        this.audio.pause();\n      }\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) {\n        this.progress.set(this.audio.currentTime);\n      }\n    }, 500);\n\n    this.audio.onended = () => {\n      this.onSongFinished();\n    };\n  }\n\n  async onSongFinished() {\n    try {\n      const transformedData = this.transformSongData(this.currentSong);\n\n      // Get AI suggestion\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') {\n        console.warn('No song suggestion received from AI.');\n        return; // Stop if no suggestion\n      }\n\n      let cleanedSong = nextSong.trim();\n\n      if (cleanedSong.startsWith(\"```json\")) {\n        cleanedSong = cleanedSong.replace(/^```json/, \"\").replace(/```$/, \"\").trim();\n      } else if (cleanedSong.startsWith(\"```\")) {\n        cleanedSong = cleanedSong.replace(/^```/, \"\").replace(/```$/, \"\").trim();\n      }\n\n      let songDetails: { songName: string; artistsName: string };\n\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch (jsonError) {\n        console.error('Failed to parse AI response as JSON:', jsonError);\n        return; // Stop if JSON parsing fails\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(\",\")[0].trim() : \"\";\n      if (!songName || !mainArtist) {\n        console.warn('Incomplete song details received from AI:', songDetails);\n        return; // Stop if required fields are missing\n      }\n\n      // Search and play the song\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const url = this.getSongUrl(firstSong);\n            this.playSong(url, firstSong);\n          } else {\n            console.warn('No search results found for suggested song.');\n          }\n        },\n        error: (searchError) => {\n          console.error('Error during song search:', searchError);\n        }\n      });\n    } catch (error) {\n      console.error('Error in onSongFinished:', error);\n    } finally {\n      // Reset progress and cleanup\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n    }\n  }\n\n  formatTime(seconds: number) {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  onSeek(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    if (this.audio) {\n      this.audio.currentTime = seekTime;\n      this.progress.set(seekTime);\n    }\n  }\n\n  transformSongData(data: any) {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: {\n        name: data.album?.name || ''\n      },\n      artists: {\n        all: (data.artists?.primary || []).map((artist: any) => ({\n          name: artist.name\n        }))\n      }\n    };\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n        \n          \n        \n      \n    \n\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                                {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                      '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent {\n  showBackButton = false;\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\ndeclare const Chart: any;\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n  isDarkMode: boolean = false;\n  categoryMap: any = {};\n  categories: Category[] = []\n  expenses: Expense[] = [];\n  charts: { [key: string]: any } = {};\n  categoryColors: { [key: string]: string } = {};\n  currency: string | null;\n\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n  @Input() currentDate!: Date;\n\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n    });\n    this.categories.forEach(cat => {\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Displays notifications to the user\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../util/config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\nimport { ToastService } from '../../toast/toast.service';\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   * @param toastService Displays notifications to the user\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService,\n    private toastService: ToastService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      // console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: (res: any) => {\n          console.log('User data posted successfully. Response:', res);\n          const api_response_app_version = res.app_version;\n          const app_current_version = this.userService.getValue('app_version');\n          if (api_response_app_version != app_current_version) {\n            this.userService.update('is_app_updated', false);\n            setTimeout(() => {\n              this.toastService.show('🚀 Update available! Please update from ⚙️ Settings.', 'info', 5000);\n            }, 500);\n          }\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\",\n            is_app_updated: false\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/search/search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  imports: [],\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.css'\n})\nexport class SearchComponent {\n\n}\n\n    \n\n    \n        🔍 Search Expenses\nsearch works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '🔍 Search Expensessearch works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n  private sectionSource = new BehaviorSubject('home');\n  currentSection$ = this.sectionSource.asObservable();\n\n  setSection(section: string) {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/setting-item/setting-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/setting-item/setting-item.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n  @Input() label!: string;\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  activePath: string = '';\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                syncWithSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUser\n                        \n                    \n                \n            \n            \n                \nsyncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\",\n            is_app_updated: false\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        ToastComponent\nA reusable component responsible for rendering toast notifications.\nIt integrates with ToastService to display messages dynamically\nand handles auto-dismiss after a configurable duration.\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of ToastComponent.\nso that it can be accessed globally.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to register this component instance\nso that it can be accessed globally.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that runs after component's view has been fully initialized.\nRegisters this component with the ToastService so it can be controlled externally.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Displays a toast notification with a message, style, and duration.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The text content of the toast\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning), defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before the toast disappears, defaults to 3000\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n * ToastComponent\n *\n * A reusable component responsible for rendering toast notifications.\n * It integrates with `ToastService` to display messages dynamically\n * and handles auto-dismiss after a configurable duration.\n */\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\nexport class ToastComponent implements AfterViewInit {\n\n  /**\n   * Creates an instance of ToastComponent.\n   * @param toastService Service used to register this component instance\n   * so that it can be accessed globally.\n   */\n  constructor(private toastService: ToastService) { }\n\n  /**\n   * Lifecycle hook that runs after component's view has been fully initialized.\n   * Registers this component with the `ToastService` so it can be controlled externally.\n   */\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n\n  /**\n   * Displays a toast notification with a message, style, and duration.\n   *\n   * @param message The text content of the toast\n   * @param type The type of toast (`success` | `error` | `info` | `warning`), defaults to `'success'`\n   * @param duration Duration in milliseconds before the toast disappears, defaults to `3000`\n   */\n  showToast(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      // Clear any existing toasts\n      toastContainer.innerHTML = '';\n\n      // Define style classes for each toast type\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      // Create toast element\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      // Add message and dismiss button\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      // Auto-remove toast after the given duration\n      setTimeout(() => {\n        toast.remove();\n      }, duration);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ToastService\nA service for displaying toast notifications in the application.\nIt requires registering a ToastComponent instance so it can delegate\nshowing messages to the UI component.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Registers the toast component instance.\nMust be called once, typically from the root component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Instance of ToastComponent used to render notifications\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\", duration: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Displays a toast message.\nExample :        Defaults to `'success'`\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The message text to display\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                            \n                                                    The type of toast (success | error | info | warning)Defaults to 'success'\n\n                                            \n                                        \n                                        \n                                                duration\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    3000\n                                            \n\n                                            \n                                                    Duration in milliseconds before auto-hide (default: 3000)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:19\n                        \n                    \n\n            \n                \n                    Reference to the toast component instance.\nThis is registered once during app initialization.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n/**\n * ToastService\n *\n * A service for displaying toast notifications in the application.\n * It requires registering a `ToastComponent` instance so it can delegate\n * showing messages to the UI component.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  /**\n   * Reference to the toast component instance.\n   * This is registered once during app initialization.\n   */\n  private toastComponent!: ToastComponent;\n\n  /**\n   * Registers the toast component instance.\n   * Must be called once, typically from the root component.\n   *\n   * @param toast Instance of `ToastComponent` used to render notifications\n   */\n  register(toast: ToastComponent): void {\n    this.toastComponent = toast;\n  }\n\n  /**\n   * Displays a toast message.\n   *\n   * @param message The message text to display\n   * @param type The type of toast (`success` | `error` | `info` | `warning`)  \n   *             Defaults to `'success'`\n   * @param duration Duration in milliseconds before auto-hide (default: `3000`)\n   */\n  show(\n    message: string,\n    type: 'success' | 'error' | 'info' | 'warning' = 'success',\n    duration: number = 3000\n  ): void {\n    this.toastComponent?.showToast(message, type, duration);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_app_updated\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_app_updated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_app_updated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string,\n  is_app_updated: boolean\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string,\n  is_app_updated: boolean\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/utils.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/utils.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/component/custom-modal/custom-modal.component.ts\n            \n            component\n            CustomModalComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/component/info-icon/info-icon.component.ts\n            \n            component\n            InfoIconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/component/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/analysis/analysis.component.ts\n            \n            component\n            AnalysisComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            type alias\n            ChartOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/features/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/get/get-api.service.ts\n            \n            injectable\n            GetApiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/app-version/app-version.service.ts\n            \n            injectable\n            AppVersionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            chart.js : ^4.4.9\n        \n            express : ^4.18.2\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).  \n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage.\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartOptions   (src/.../budget.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/features/budget/budget.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChartOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyAZT2MYoLB9gRwRa6NRan8NdFSVmmwzz04',\n\n  /**\n   * Current environment type.\n   * Possible values: 'local', 'live'\n   */\n  developmentEnvironment: 'live', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.8.25', // Current application version\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
