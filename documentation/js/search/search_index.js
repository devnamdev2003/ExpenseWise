var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.09,1,0.746]],["body/components/AddExpenseComponent.html",[0,0.144,1,0.946,2,0.669,3,0.16,4,0.101,5,0.47,6,0.993,7,0.47,8,0.47,9,0.076,10,5.854,11,5.209,12,1.764,13,2.743,14,4.051,15,1.338,16,1.749,17,3.262,18,5.342,19,5.246,20,6.784,21,3.336,22,3.262,23,1.675,24,2.384,25,0.423,26,1.621,27,1.307,28,1.106,29,0.964,30,1.186,31,1.014,32,0.784,33,3.088,34,1.473,35,0.946,36,1.573,37,4.051,38,0.744,39,3.262,40,0.128,41,0.476,42,4.051,43,4.051,44,4.051,45,4.051,46,4.051,47,3.088,48,4.051,49,4.051,50,0.506,51,3.947,52,4.607,53,2.366,54,2.794,55,4.607,56,3.947,57,4.607,58,3.262,59,3.262,60,0.714,61,1.764,62,4.072,63,2.636,64,3.417,65,0.658,66,3.262,67,2.487,68,2.257,69,0.757,70,0.021,71,0.479,72,0.379,73,0.714,74,3.088,75,2.487,76,3.512,77,3.144,78,2.527,79,0.877,80,3.262,81,2.059,82,2.487,83,3.262,84,0.949,85,4.267,86,3.262,87,2.059,88,2.487,89,2.794,90,3.354,91,1.024,92,2.059,93,2.487,94,2.487,95,2.487,96,2.794,97,2.059,98,2.487,99,0.974,100,2.794,101,4.072,102,4.016,103,2.059,104,3.262,105,2.86,106,2.257,107,3.262,108,2.059,109,3.262,110,3.262,111,2.059,112,2.794,113,1.481,114,2.061,115,2.636,116,3.262,117,0.57,118,2.059,119,4.607,120,5.246,121,4.607,122,3.262,123,2.059,124,2.059,125,2.487,126,1.196,127,0.92,128,0.768,129,2.059,130,4.607,131,1.508,132,2.059,133,2.059,134,3.188,135,3.512,136,2.059,137,3.088,138,2.059,139,2.487,140,2.073,141,2.112,142,2.059,143,3.947,144,3.512,145,0.229,146,1.57,147,1.425,148,1.57,149,0.088,150,1.57,151,1.13,152,1.309,153,2.059,154,1.425,155,1.764,156,0.71,157,1.57,158,0.088,159,0.101,160,3.145,161,0.705,162,2.059,163,1.764,164,3.262,165,3.262,166,2.059,167,0.997,168,1.57,169,2.227,170,4.072,171,1.764,172,1.953,173,1.789,174,3.947,175,2.059,176,2.059,177,1.789,178,4.051,179,1.764,180,2.487,181,1.764,182,0.974,183,1.425,184,2.794,185,1.57,186,2.059,187,1.57,188,1.338,189,2.059,190,3.262,191,2.059,192,2.059,193,2.059,194,2.059,195,2.059,196,2.059,197,2.059,198,0.993,199,2.059,200,2.059,201,1.764,202,1.57,203,1.425,204,0.993,205,1.839,206,1.764,207,1.764,208,1.764,209,4.051,210,1.425,211,2.059,212,2.257,213,3.262,214,2.059,215,2.059,216,4.051,217,2.059,218,2.059,219,2.059,220,2.059,221,3.262,222,4.051,223,3.262,224,2.059,225,2.059,226,2.059,227,2.059,228,4.051,229,3.262,230,2.059,231,2.059,232,2.059,233,2.487,234,4.016,235,2.257,236,1.789,237,2.794,238,2.487,239,3.512,240,2.073,241,3.947,242,1.573,243,2.794,244,1.92,245,2.257,246,0.47,247,0.744,248,0.744,249,0.47,250,1.051,251,0.47,252,0.47,253,0.423,254,0.47,255,0.423,256,0.47,257,0.423,258,0.47,259,0.423,260,0.47,261,0.423,262,0.47,263,0.47,264,0.423,265,0.446,266,0.744,267,0.423,268,0.379,269,0.423,270,0.47,271,0.423,272,0.47,273,0.4,274,0.446,275,0.47,276,0.423,277,0.47,278,0.423,279,0.47,280,0.47,281,0.423,282,0.47,283,0.423,284,0.47,285,0.446,286,0.446,287,0.47,288,0.423,289,0.47,290,0.423,291,0.47,292,0.423,293,0.446,294,0.47,295,0.423,296,0.47,297,0.423,298,0.446,299,0.47,300,0.446,301,0.47,302,0.423,303,0.47,304,0.4,305,0.47,306,0.47,307,0.009,308,0.009]],["title/components/AiComponent.html",[0,0.09,253,0.746]],["body/components/AiComponent.html",[0,0.144,1,0.775,2,1.046,3,0.25,4,0.185,5,0.861,7,0.861,8,0.861,9,0.139,25,0.775,26,1.721,27,1.388,28,0.657,29,0.744,30,1.853,31,1.584,32,1.225,34,2.098,35,0.775,38,1.163,40,0.234,41,0.744,50,0.79,60,0.79,65,0.6,69,0.62,70,0.021,71,0.476,72,0.357,73,0.585,79,0.817,84,0.585,99,0.551,117,0.338,127,0.838,128,0.699,145,0.291,149,0.162,151,2.071,156,1.302,158,0.162,159,0.185,161,0.887,167,1.103,182,1.004,246,0.861,247,1.316,248,1.163,249,0.861,250,1.41,251,0.861,252,0.861,253,1.268,254,0.861,255,0.775,256,0.861,257,0.775,258,0.861,259,0.775,260,0.861,261,0.775,262,0.861,263,0.861,264,0.775,265,0.817,266,1.163,267,0.775,268,0.695,269,0.775,270,0.861,271,0.775,272,0.861,273,0.734,274,0.817,275,0.861,276,0.775,277,0.861,278,0.775,279,0.861,280,0.861,281,0.775,282,0.861,283,0.775,284,0.861,285,0.817,286,0.817,287,0.861,288,0.775,289,0.861,290,0.775,291,0.861,292,0.775,293,0.817,294,0.861,295,0.775,296,0.861,297,0.775,298,0.817,299,0.861,300,0.817,301,0.861,302,0.775,303,0.861,304,0.734,305,0.861,306,0.861,307,0.014,308,0.014,309,3.234,310,3.637,311,4.399,312,5.77,313,5.097,314,2.184,315,5.097,316,5.77,317,5.77,318,3.667,319,6.649,320,3.775,321,4.274,322,5.77,323,6.178,324,5.097,325,5.097,326,3.775,327,6.178,328,2.131,329,3.775,330,2.399,331,3.234,332,2.222,333,4.366,334,3.775,335,2.878,336,3.234,337,3.775,338,3.775,339,3.775,340,3.775,341,2.611,342,3.234,343,5.77,344,2.399,345,3.775,346,5.097,347,3.775,348,3.775,349,3.775,350,3.239,351,5.097]],["title/components/AnalysisComponent.html",[0,0.09,255,0.746]],["body/components/AnalysisComponent.html",[0,0.159,1,0.951,2,1.196,3,0.286,4,0.227,5,1.057,7,1.057,8,1.057,9,0.17,25,0.951,26,1.745,27,1.407,28,0.807,29,0.85,32,1.114,35,0.951,38,1.329,70,0.02,71,0.481,79,1.003,99,0.677,145,0.198,149,0.198,158,0.198,159,0.227,246,1.057,247,1.329,248,1.329,249,1.057,250,1.525,251,1.057,252,1.057,253,0.951,254,1.057,255,1.372,256,1.057,257,0.951,258,1.057,259,0.951,260,1.057,261,0.951,262,1.057,263,1.057,264,0.951,265,1.003,266,1.329,267,0.951,268,0.853,269,0.951,270,1.057,271,0.951,272,1.057,273,0.901,274,1.003,275,1.057,276,0.951,277,1.057,278,0.951,279,1.057,280,1.057,281,0.951,282,1.057,283,0.951,284,1.057,285,1.003,286,1.003,287,1.057,288,0.951,289,1.057,290,0.951,291,1.057,292,0.951,293,1.003,294,1.057,295,0.951,296,1.057,297,0.951,298,1.003,299,1.057,300,1.003,301,1.057,302,0.951,303,1.057,304,0.901,305,1.057,306,1.057,307,0.015,308,0.015,314,2.497,352,3.971,353,5.728,354,5.827,355,5.827,356,4.992]],["title/components/AppComponent.html",[0,0.09,257,0.746]],["body/components/AppComponent.html",[0,0.143,1,0.982,2,0.707,3,0.169,4,0.108,5,0.503,6,1.064,7,0.503,8,0.503,9,0.081,11,1.681,13,2.824,25,0.453,26,1.635,27,1.34,28,0.384,29,0.503,30,1.252,31,1.07,32,0.827,34,1.54,35,0.453,36,1.66,38,0.785,40,0.137,41,0.503,50,0.534,53,2.457,60,0.742,65,0.627,67,1.681,69,0.853,70,0.021,71,0.49,72,0.341,73,0.804,78,3.547,79,0.477,84,0.742,91,0.656,93,2.625,94,2.625,95,2.625,99,0.322,106,3.59,113,2.609,117,0.465,126,0.651,127,0.786,128,0.656,131,1.946,134,1.526,139,2.625,141,1.897,145,0.305,147,1.526,149,0.147,156,0.761,158,0.094,159,0.108,160,3.596,161,1.034,182,0.599,188,0.588,236,1.21,246,0.503,247,0.785,248,0.785,249,0.503,250,1.092,251,0.503,252,0.503,253,0.982,254,0.503,255,0.982,256,0.503,257,1.129,258,0.503,259,0.982,260,0.503,261,0.982,262,0.503,263,0.503,264,0.453,265,0.477,266,0.785,267,0.453,268,0.406,269,0.453,270,0.503,271,0.982,272,0.503,273,0.93,274,1.123,275,0.503,276,0.453,277,0.503,278,0.453,279,0.503,280,0.503,281,0.982,282,0.503,283,0.453,284,0.503,285,1.036,286,0.477,287,0.503,288,0.982,289,0.503,290,0.982,291,0.503,292,0.453,293,0.477,294,0.503,295,0.982,296,0.503,297,0.453,298,0.477,299,0.503,300,1.036,301,0.503,302,0.982,303,0.503,304,0.93,305,0.503,306,0.503,307,0.009,308,0.009,332,2.027,336,1.89,357,1.89,358,1.15,359,3.041,360,2.95,361,2.625,362,5.092,363,3.59,364,5.19,365,3.677,366,4.785,367,3.956,368,3.651,369,2.625,370,4.785,371,3.26,372,3.443,373,4.235,374,3.443,375,3.628,376,4.235,377,4.235,378,4.235,379,3.228,380,2.396,381,4.235,382,3.443,383,3.443,384,2.625,385,3.443,386,3.443,387,1.89,388,5.092,389,2.457,390,3.26,391,2.161,392,6.246,393,4.112,394,4.785,395,3.26,396,3.443,397,6.108,398,3.443,399,5.19,400,2.625,401,4.235,402,4.235,403,3.443,404,4.193,405,2.625,406,2.95,407,2.93,408,3.805,409,2.625,410,2.027,411,2.95,412,3.443,413,2.77,414,2.188,415,2.95,416,2.625,417,3.792,418,2.206,419,3.228,420,3.443,421,3.443,422,2.95,423,2.95,424,2.95,425,2.95,426,3.443,427,3.443,428,2.206,429,3.443,430,1.716,431,5.5,432,2.206,433,2.206,434,2.206,435,2.206,436,2.206,437,2.206,438,2.206,439,2.206,440,2.95,441,2.95,442,3.443,443,3.443,444,2.95,445,3.443,446,3.443,447,2.382,448,3.443,449,2.206,450,2.206,451,3.041,452,2.206,453,2.95,454,2.625,455,2.188,456,2.206,457,1.946,458,5.5,459,4.712,460,3.443,461,5.19,462,2.206,463,3.443,464,3.443,465,2.95,466,2.382,467,2.206,468,2.206,469,2.206,470,3.443,471,1.89,472,1.526,473,1.526,474,2.206,475,2.206,476,2.206,477,1.89,478,1.89,479,1.889,480,1.89,481,2.206,482,2.206,483,2.206,484,2.206,485,2.206,486,1.89,487,2.206,488,2.206,489,2.206,490,2.206,491,2.206,492,2.206,493,2.206,494,2.206,495,1.298,496,1.526,497,1.402,498,1.526,499,2.206,500,1.681,501,2.206,502,1.89,503,2.206,504,2.206,505,1.526,506,2.206,507,2.206,508,1.526,509,2.206,510,2.206,511,2.206,512,1.89,513,2.206,514,2.382,515,2.206,516,2.206,517,2.206,518,2.206,519,2.206,520,3.443,521,3.443,522,2.206,523,1.89,524,1.402,525,2.206,526,2.206,527,2.206,528,2.206,529,2.206,530,2.206,531,2.95,532,1.526,533,1.21,534,2.206,535,2.206,536,2.206,537,1.681,538,3.648,539,1.402,540,2.206,541,2.206,542,2.206,543,2.206,544,2.206,545,2.206,546,2.206,547,3.443,548,2.206,549,2.206,550,1.89,551,2.206,552,2.206,553,3.443,554,2.206,555,2.95,556,2.206,557,0.894]],["title/injectables/AppVersionService.html",[558,0.353,559,2.139]],["body/injectables/AppVersionService.html",[3,0.236,4,0.236,9,0.238,13,2.47,27,1.098,40,0.298,41,0.871,50,0.924,60,1.08,65,0.629,70,0.02,72,0.298,78,3.271,84,1.05,113,3.077,117,0.636,127,0.791,128,0.66,145,0.255,149,0.206,158,0.206,159,0.236,161,1.128,167,1.042,307,0.016,308,0.016,358,1.156,359,4.511,558,0.579,559,3.989,560,1.575,561,5.805,562,4.306,563,4.122,564,4.547,565,5.702,566,5.964,567,5.11,568,3.163,569,4.126,570,4.484,571,6.776,572,5.964,573,4.812,574,5.11,575,5.964,576,5.964,577,3.058,578,1.218,579,4.812]],["title/interfaces/Budget.html",[580,0.968,581,1.65]],["body/interfaces/Budget.html",[3,0.224,4,0.224,9,0.168,40,0.283,41,0.843,60,0.709,70,0.021,72,0.412,91,0.982,117,0.66,126,1.35,145,0.247,149,0.196,158,0.247,159,0.224,161,1.005,167,1.517,169,2.688,182,1.005,242,3.208,307,0.015,308,0.015,358,1.099,391,2.302,430,1.852,457,1.496,558,0.561,578,1.157,580,1.218,581,3.182,582,2.507,583,3.485,584,4.98,585,3.415,586,3.208,587,2.566,588,2.347,589,2.905,590,2.076,591,2.341,592,2.1,593,2.076,594,2.691,595,3.415,596,3.485,597,2.691,598,2.691,599,3.728,600,2.691,601,2.691,602,3.163,603,5.425,604,3.728,605,3.916,606,3.4,607,2.691,608,3.4,609,4.948,610,3.053,611,3.163,612,3.916,613,3.163]],["title/components/BudgetComponent.html",[0,0.09,259,0.746]],["body/components/BudgetComponent.html",[0,0.103,1,0.437,2,0.688,3,0.164,4,0.104,5,0.486,7,0.486,8,0.486,9,0.078,15,1.251,16,0.698,23,1.721,24,2.438,25,0.437,26,1.628,27,1.313,28,0.889,29,0.685,30,1.219,31,1.685,32,0.806,33,3.158,34,1.506,35,0.437,38,0.765,40,0.132,41,0.489,50,0.519,51,4.023,53,2.411,56,4.023,60,0.519,62,3.58,63,2.462,64,3.338,65,0.692,69,0.35,70,0.021,71,0.342,72,0.412,73,0.33,74,3.158,79,0.461,84,0.959,85,3.892,91,1.008,99,0.311,114,2.211,117,0.458,126,0.99,127,1.069,128,0.892,141,2.175,145,0.243,149,0.091,150,1.625,151,1.169,152,1.354,156,0.735,157,1.625,158,0.143,159,0.164,161,0.889,163,1.826,167,0.897,168,1.625,169,2.254,170,3.158,171,1.826,182,1.188,188,1.819,198,1.028,201,1.826,202,3.158,203,2.866,204,1.028,205,1.881,206,1.826,207,1.826,208,1.826,210,1.474,212,1.474,233,2.555,234,3.75,240,1.354,242,1.997,246,0.486,247,0.765,248,0.765,249,0.486,250,1.071,251,0.486,252,0.486,253,0.437,254,0.486,255,0.437,256,0.486,257,0.437,258,0.486,259,0.964,260,0.486,261,0.437,262,0.486,263,0.486,264,0.437,265,0.461,266,0.765,267,0.437,268,0.392,269,0.437,270,0.486,271,0.437,272,0.486,273,0.414,274,0.461,275,0.486,276,0.437,277,0.486,278,0.437,279,0.486,280,0.486,281,0.437,282,0.486,283,0.437,284,0.486,285,0.461,286,0.461,287,0.486,288,0.437,289,0.486,290,0.437,291,0.486,292,0.437,293,0.461,294,0.486,295,0.437,296,0.486,297,0.437,298,0.461,299,0.486,300,0.461,301,0.486,302,0.437,303,0.486,304,0.414,305,0.486,306,0.486,307,0.009,308,0.009,314,1.437,328,1.156,371,2.576,380,2.176,457,1.097,495,1.255,524,3.445,531,2.871,532,1.474,533,1.169,550,1.826,557,1.903,581,3.121,585,2.411,586,1.997,587,2.197,589,3.604,614,1.625,615,3.352,616,3.352,617,4.142,618,4.142,619,4.142,620,4.142,621,4.142,622,5.106,623,4.142,624,4.142,625,2.744,626,4.142,627,3.549,628,5.106,629,4.142,630,4.142,631,3.549,632,4.142,633,4.696,634,4.696,635,3.58,636,4.696,637,4.696,638,4.696,639,4.023,640,1.826,641,3.352,642,2.131,643,2.131,644,2.131,645,2.131,646,2.131,647,2.131,648,2.131,649,2.131,650,2.131,651,2.131,652,2.131,653,2.131,654,2.131,655,4.133,656,3.158,657,2.131,658,2.131,659,2.131,660,2.131,661,2.131,662,2.131,663,2.131,664,2.131,665,2.131,666,2.131,667,2.131,668,2.131,669,2.131,670,1.625,671,1.826,672,2.131,673,1.255,674,1.826,675,1.826,676,2.131,677,2.131,678,1.474,679,1.474,680,2.131,681,1.474,682,2.871,683,4.142,684,2.131,685,4.142,686,3.549,687,2.131,688,2.131,689,4.142,690,4.142,691,2.131,692,2.131,693,2.131,694,2.131,695,3.352,696,1.474,697,2.131,698,3.352,699,2.131,700,2.131,701,2.131,702,3.352,703,2.131,704,2.131,705,2.131,706,2.131,707,4.696,708,2.131,709,2.131,710,2.131,711,2.131,712,2.131,713,1.826,714,1.826,715,2.131,716,5.106,717,2.131,718,3.549,719,2.131,720,4.859,721,4.142,722,3.352,723,4.142,724,1.625,725,2.131,726,0.913,727,1.826,728,2.131,729,4.696,730,1.625,731,1.625,732,1.826,733,1.625,734,1.255,735,3.352,736,2.131,737,3.352,738,2.131,739,2.131,740,1.826,741,2.131,742,2.319,743,2.131,744,2.131,745,2.131,746,2.131,747,3.352,748,2.131,749,3.352,750,2.871,751,3.58,752,2.871,753,1.826,754,4.142,755,2.131,756,3.352,757,2.131,758,2.131,759,2.131,760,2.131,761,2.319,762,2.131,763,4.696,764,1.826,765,3.352,766,4.142,767,1.826,768,1.826,769,2.131,770,2.131,771,2.131,772,2.131,773,2.131,774,2.131,775,2.272,776,2.131,777,2.131,778,2.131,779,2.555,780,3.352,781,2.871,782,3.352,783,3.191,784,3.352,785,3.352,786,2.871,787,3.352,788,1.354,789,3.352,790,2.871]],["title/injectables/BudgetService.html",[558,0.353,589,2.309]],["body/injectables/BudgetService.html",[3,0.21,4,0.21,9,0.157,28,0.964,40,0.265,50,0.859,60,0.859,65,0.668,69,1.067,70,0.021,71,0.535,72,0.402,73,1.006,84,1.042,91,1.068,117,0.644,126,1.636,145,0.237,149,0.183,158,0.237,159,0.21,161,1.13,167,1.491,169,2.356,182,0.964,242,3.131,307,0.015,308,0.015,358,1.029,371,3.039,391,2.505,430,1.735,457,1.813,558,0.538,560,1.402,578,1.084,580,1.141,581,3.128,583,3.265,584,4.85,585,2.199,586,2.065,587,1.735,588,2.199,589,3.521,590,2.949,591,2.245,592,2.014,593,1.945,594,3.822,595,3.334,596,3.265,597,3.261,598,3.615,599,3.615,600,2.521,601,2.521,602,2.963,603,5.261,604,3.615,605,4.746,606,3.822,607,3.615,608,3.261,609,4.746,610,2.961,611,2.963,612,4.746,613,2.963,775,3.039,791,2.963,792,4.283,793,4.283,794,4.283,795,4.283,796,4.283,797,4.283]],["title/components/CalendarComponent.html",[0,0.09,261,0.746]],["body/components/CalendarComponent.html",[0,0.118,1,0.539,2,0.808,3,0.193,4,0.129,5,0.6,7,0.6,8,0.6,9,0.096,15,1.712,16,2.057,21,1.899,23,2.021,24,2.779,25,0.539,26,1.667,27,1.345,28,0.457,29,0.765,31,0.817,32,0.946,34,1.716,35,0.539,38,0.898,40,0.163,41,0.575,50,0.61,53,2.692,60,0.61,63,2.677,65,0.686,69,0.923,70,0.021,71,0.504,72,0.421,73,0.87,79,0.569,84,0.914,90,1.899,91,1.03,99,0.384,113,1.194,114,1.808,115,1.788,117,0.596,126,0.776,127,1.056,128,0.882,135,2.004,141,1.808,145,0.224,149,0.112,152,1.67,156,0.906,158,0.112,159,0.129,161,0.457,182,1.118,184,4.044,188,1.744,198,1.267,204,1.899,235,2.724,236,2.16,240,1.67,246,0.6,247,0.898,248,0.898,249,0.6,250,1.345,251,0.6,252,0.6,253,0.539,254,0.6,255,0.539,256,0.6,257,0.539,258,0.6,259,0.539,260,0.6,261,1.076,262,0.6,263,0.6,264,0.539,265,0.569,266,0.898,267,0.539,268,0.484,269,0.539,270,0.6,271,0.539,272,0.6,273,0.511,274,0.569,275,0.6,276,0.539,277,0.6,278,0.539,279,0.6,280,0.6,281,0.539,282,0.6,283,0.539,284,0.6,285,0.569,286,0.569,287,0.6,288,0.539,289,0.6,290,0.539,291,0.6,292,0.539,293,0.569,294,0.6,295,0.539,296,0.6,297,0.539,298,0.569,299,0.6,300,0.569,301,0.6,302,0.539,303,0.6,304,0.511,305,0.6,306,0.6,307,0.01,308,0.01,314,1.688,328,1.358,379,3.599,380,2.511,495,1.547,524,1.67,555,2.252,557,1.913,585,2.021,586,2.528,587,2.652,625,2.775,631,4.044,635,3.996,639,3.373,640,2.252,655,2.004,678,1.818,679,1.818,686,3.373,714,2.252,726,1.688,753,2.252,783,3.086,788,1.67,798,2.252,799,2.724,800,3.937,801,3.937,802,4.721,803,5.615,804,3.599,805,3.599,806,4.721,807,5.615,808,5.615,809,4.721,810,3.937,811,3.937,812,3.937,813,3.937,814,2.628,815,2.628,816,3.937,817,2.628,818,3.937,819,2.628,820,2.628,821,3.937,822,2.628,823,3.937,824,4.446,825,2.628,826,2.876,827,2.628,828,2.628,829,2.628,830,3.937,831,2.628,832,3.937,833,2.628,834,2.628,835,2.628,836,2.628,837,2.628,838,2.628,839,3.937,840,3.937,841,3.937,842,3.937,843,3.937,844,3.937,845,3.937,846,3.937,847,5.615,848,2.252,849,2.628,850,2.628,851,3.937,852,4.491,853,2.628,854,3.937,855,3.937,856,3.937,857,4.721,858,2.628,859,2.252,860,2.628,861,2.628,862,2.628,863,2.628,864,2.628,865,2.724,866,2.628,867,1.67,868,2.628,869,1.349,870,2.628,871,2.628,872,2.628,873,2.628,874,3.001,875,2.628,876,2.628,877,2.004,878,2.628,879,2.628,880,3.937,881,4.491,882,2.628,883,2.252,884,2.628,885,2.628,886,2.628,887,2.502,888,1.547,889,2.004,890,2.628,891,2.628,892,3.937,893,2.724,894,3.001,895,3.001,896,3.001,897,3.373,898,3.373,899,3.373,900,3.373]],["title/interfaces/Category.html",[99,0.53,580,0.968]],["body/interfaces/Category.html",[3,0.198,4,0.198,9,0.148,16,1.32,29,0.871,40,0.25,41,0.777,70,0.021,71,0.523,72,0.428,91,0.924,99,1.046,117,0.673,126,1.191,145,0.272,149,0.173,158,0.228,159,0.198,161,0.927,167,1.536,172,3.455,182,1.235,188,1.589,307,0.014,308,0.014,358,0.969,380,2.288,391,2.169,413,1.945,414,2.563,430,1.634,457,1.32,537,3.074,539,2.563,557,1.634,558,0.517,578,1.021,580,1.074,582,2.212,587,2.571,588,2.07,590,1.831,591,2.158,592,1.937,593,1.831,594,2.374,595,3.257,597,2.374,598,2.374,599,3.511,600,2.374,601,2.374,604,3.135,606,3.135,607,2.374,608,2.374,610,2.568,696,2.79,726,2.719,893,2.79,901,3.074,902,5.651,903,3.48,904,3.48,905,3.989,906,3.455,907,3.455,908,2.374,909,2.79,910,2.79,911,2.563,912,2.374,913,1.131,914,3.455,915,2.563,916,2.043,917,3.385,918,3.455,919,3.455,920,4.563,921,3.074,922,2.07,923,3.455,924,3.455,925,2.79,926,2.374,927,3.455,928,3.455,929,3.455,930,5.11,931,3.455,932,3.455,933,3.455,934,3.455,935,4.563,936,3.455,937,3.685,938,3.455,939,3.455,940,3.455]],["title/components/CategoryDropdownComponent.html",[0,0.09,35,0.746]],["body/components/CategoryDropdownComponent.html",[0,0.151,1,0.523,2,0.789,3,0.189,4,0.125,5,0.581,6,1.229,7,1.057,8,0.581,9,0.094,13,2.844,15,0.679,25,0.523,26,1.661,27,1.34,28,0.443,29,0.753,30,1.398,31,1.196,32,0.924,34,1.685,35,1.059,36,1.855,38,0.877,40,0.158,41,0.561,47,4.223,50,0.596,53,2.65,60,0.718,65,0.663,67,2.932,69,0.848,70,0.021,71,0.513,72,0.423,73,0.965,78,3.195,79,0.551,84,0.859,88,3.935,91,1.006,95,2.932,98,2.932,99,1.075,100,3.295,101,5.251,102,4.307,105,2.212,117,0.522,126,1.136,127,1.141,128,0.76,131,1.259,137,2.932,139,2.932,140,3.28,141,1.78,144,3.935,145,0.221,146,3.532,147,1.763,148,1.942,149,0.109,154,4.765,156,0.879,158,0.109,159,0.227,160,3.038,161,0.443,180,1.942,181,2.183,182,0.443,188,1.025,246,0.581,247,0.877,248,1.178,249,0.581,250,1.178,251,0.581,252,0.581,253,0.523,254,0.581,255,0.523,256,0.581,257,0.523,258,0.581,259,0.523,260,0.581,261,0.523,262,0.581,263,0.581,264,0.523,265,1.379,266,0.877,267,0.523,268,0.469,269,0.523,270,0.581,271,0.523,272,0.581,273,0.495,274,0.551,275,0.581,276,0.523,277,0.581,278,0.523,279,0.581,280,0.581,281,0.523,282,0.581,283,0.523,284,0.581,285,0.551,286,1.199,287,0.581,288,0.523,289,0.581,290,0.523,291,0.581,292,0.523,293,0.551,294,0.581,295,0.523,296,0.581,297,0.523,298,0.551,299,0.581,300,0.551,301,0.581,302,0.523,303,0.581,304,0.495,305,0.581,306,0.581,307,0.01,308,0.01,361,2.932,380,2.388,384,2.932,400,2.932,416,1.942,417,3.495,419,3.935,425,3.969,447,2.661,457,1.259,472,2.661,495,1.5,538,2.932,539,1.619,764,4.422,912,3.56,913,0.715,916,2.712,941,5.901,942,2.183,943,3.295,944,5.161,945,5.161,946,4.633,947,3.846,948,4.633,949,4.633,950,5.161,951,3.846,952,3.846,953,5.161,954,1.855,955,5.54,956,4.633,957,2.932,958,4.633,959,3.295,960,2.183,961,3.846,962,5.161,963,2.548,964,4.99,965,5.161,966,2.548,967,3.295,968,3.295,969,3.295,970,3.846,971,2.548,972,3.935,973,2.548,974,2.183,975,3.846,976,4.633,977,4.633,978,3.532,979,3.532,980,2.548,981,3.846,982,2.548,983,3.846,984,3.295,985,3.846,986,2.548,987,2.548,988,3.846,989,2.548,990,3.846,991,3.295,992,2.548,993,2.932,994,2.183,995,2.548,996,3.969,997,2.548,998,3.846,999,3.846,1000,3.846,1001,5.54,1002,2.548,1003,2.183,1004,1.942,1005,2.183,1006,2.548,1007,2.548,1008,3.295,1009,3.846]],["title/injectables/CategoryService.html",[558,0.353,912,2.139]],["body/injectables/CategoryService.html",[3,0.188,4,0.188,9,0.141,16,1.258,28,0.898,29,0.85,40,0.238,50,0.799,60,0.596,65,0.663,69,1.023,70,0.021,71,0.535,72,0.385,73,0.965,84,1.036,91,1.036,99,1.046,117,0.651,126,1.523,145,0.266,149,0.164,158,0.221,159,0.188,161,1.083,167,1.522,172,3.39,182,1.223,188,1.551,307,0.014,308,0.014,358,0.923,371,2.829,380,2.619,391,2.43,413,1.853,414,2.442,430,1.557,457,1.688,537,2.929,539,2.442,557,1.557,558,0.501,560,1.258,578,0.972,580,1.024,587,2.09,588,1.973,590,2.826,591,2.09,592,1.875,593,1.745,594,3.663,595,3.195,597,3.036,598,3.427,599,3.427,600,2.262,601,2.262,604,3.036,606,3.663,607,3.427,608,2.262,610,2.487,696,2.658,726,1.647,775,2.829,791,2.658,893,2.658,901,2.929,902,4.418,903,2.107,904,2.107,905,3.427,906,3.292,907,3.292,908,2.262,909,2.658,910,2.658,911,2.442,912,3.036,913,1.078,914,5.331,915,2.442,916,1.979,917,3.278,918,3.292,919,3.292,920,4.418,921,2.929,922,1.973,923,3.292,924,3.292,925,2.658,926,2.262,927,3.292,928,3.292,929,3.292,930,4.988,931,4.418,932,3.292,933,4.418,934,3.292,935,4.418,936,3.292,937,3.568,938,3.292,939,3.292,940,3.292,1010,3.842,1011,3.842,1012,3.842,1013,3.842,1014,3.842,1015,3.842,1016,3.842]],["title/interfaces/ChatMessage.html",[580,0.968,1017,2.309]],["body/interfaces/ChatMessage.html",[3,0.18,4,0.18,9,0.135,15,0.98,25,0.754,40,0.228,41,0.731,70,0.021,71,0.504,72,0.396,77,1.887,113,2.775,117,0.605,128,0.877,131,2.159,145,0.282,149,0.157,158,0.214,159,0.18,161,1.064,167,1.461,182,1.212,188,0.98,198,1.773,204,1.773,205,1.67,244,2.164,268,0.677,307,0.013,308,0.013,318,2.336,328,1.268,330,2.336,341,4.228,344,2.336,350,2.336,358,0.884,389,2.922,395,2.016,466,2.543,473,2.543,479,2.016,496,2.543,497,2.336,558,0.486,564,3.816,568,1.67,577,2.336,578,0.93,580,0.98,582,2.016,592,1.337,761,2.543,826,2.016,869,3.282,887,3.181,888,2.164,908,2.164,913,1.031,1017,3.884,1018,2.802,1019,2.802,1020,5.145,1021,5.029,1022,3.816,1023,3.463,1024,3.816,1025,4.289,1026,2.802,1027,2.336,1028,2.336,1029,2.802,1030,3.149,1031,3.149,1032,2.802,1033,2.802,1034,2.802,1035,2.802,1036,2.543,1037,3.149,1038,3.149,1039,2.802,1040,3.149,1041,2.802,1042,3.149,1043,3.149,1044,3.884,1045,5.145,1046,3.149,1047,5.235,1048,3.149,1049,3.149,1050,4.289,1051,4.289,1052,3.816,1053,3.149,1054,3.149,1055,2.802,1056,3.149,1057,3.149,1058,3.149,1059,4.339,1060,3.149,1061,3.149,1062,3.149,1063,3.149,1064,2.802,1065,4.339,1066,3.149,1067,3.149,1068,2.336,1069,3.149,1070,3.149,1071,3.149,1072,3.816,1073,5.235,1074,3.938,1075,4.289,1076,4.289,1077,4.289,1078,3.149,1079,3.149,1080,2.336,1081,4.289,1082,4.289,1083,3.149,1084,3.149,1085,3.149,1086,3.149,1087,3.149,1088,3.149,1089,3.149,1090,3.149,1091,3.149,1092,2.802,1093,3.149,1094,2.802,1095,2.802,1096,2.802,1097,3.149,1098,3.149,1099,2.802,1100,3.149,1101,2.543,1102,3.149,1103,3.149,1104,3.149,1105,2.543,1106,3.149,1107,4.289,1108,3.938,1109,2.543,1110,3.149,1111,3.149,1112,2.802,1113,3.816,1114,3.816,1115,2.802,1116,2.802,1117,3.816,1118,2.802,1119,3.816,1120,2.543,1121,2.802,1122,2.802,1123,4.339,1124,2.802,1125,2.802,1126,2.802,1127,2.802]],["title/injectables/ConfigService.html",[558,0.353,1128,2.513]],["body/injectables/ConfigService.html",[3,0.222,4,0.222,9,0.166,13,2.324,40,0.28,41,0.838,50,0.89,60,0.977,65,0.612,70,0.021,72,0.28,75,4.376,77,3.403,78,3.148,82,4.376,84,1.027,113,3.174,117,0.613,127,0.744,128,0.865,145,0.246,149,0.194,158,0.194,159,0.222,161,1.097,167,1.364,298,1.242,307,0.015,308,0.015,358,1.088,359,3.648,405,5.214,410,4.229,514,4.586,558,0.557,560,1.482,568,3.293,569,3.971,570,4.361,577,2.876,578,1.146,1128,4.586,1129,3.878,1130,5.74,1131,5.74,1132,4.586,1133,4.917,1134,5.988,1135,5.74,1136,5.86,1137,5.4,1138,6.628,1139,5.74,1140,4.526,1141,4.917,1142,4.917,1143,5.74,1144,4.917,1145,3.971,1146,3.971,1147,5.74,1148,5.74,1149,5.74,1150,4.526]],["title/components/CustomModalComponent.html",[0,0.09,264,0.746]],["body/components/CustomModalComponent.html",[0,0.152,1,0.87,2,1.129,3,0.27,4,0.208,5,0.967,7,0.967,8,0.967,9,0.156,25,0.87,26,1.735,27,1.399,28,0.738,29,0.803,30,2.001,31,1.71,32,1.019,35,0.87,38,1.255,40,0.262,65,0.593,70,0.02,71,0.454,72,0.378,79,0.917,91,0.657,99,0.619,105,2.772,117,0.58,127,0.904,128,0.755,145,0.181,149,0.181,158,0.181,159,0.208,246,0.967,247,1.255,248,1.255,249,0.967,250,1.475,251,0.967,252,0.967,253,0.87,254,0.967,255,0.87,256,0.967,257,0.87,258,0.967,259,0.87,260,0.967,261,0.87,262,0.967,263,0.967,264,1.327,265,1.451,266,1.255,267,0.87,268,0.78,269,0.87,270,0.967,271,0.87,272,0.967,273,0.824,274,0.917,275,0.967,276,0.87,277,0.967,278,0.87,279,0.967,280,0.967,281,0.87,282,0.967,283,0.87,284,0.967,285,0.917,286,0.917,287,0.967,288,0.87,289,0.967,290,0.87,291,0.967,292,0.87,293,0.917,294,0.967,295,0.87,296,0.967,297,0.87,298,0.917,299,0.967,300,0.917,301,0.967,302,0.87,303,0.967,304,0.824,305,0.967,306,0.967,307,0.015,308,0.015,788,2.693,954,2.653,1151,5.541,1152,5.541,1153,3.231,1154,4.93,1155,4.714,1156,6.11,1157,6.11,1158,5.331,1159,4.238,1160,2.932,1161,4.238,1162,4.238]],["title/interfaces/Expense.html",[29,0.53,580,0.968]],["body/interfaces/Expense.html",[3,0.173,4,0.173,9,0.129,15,1.735,16,1.152,21,2.894,29,1.02,40,0.218,41,0.709,63,1.599,70,0.021,72,0.441,73,1.009,90,2.894,91,0.863,99,0.709,114,2.172,115,2.725,117,0.68,126,1.039,145,0.238,149,0.151,158,0.208,159,0.173,161,0.613,167,1.561,169,2.56,172,2.894,173,3.292,177,3.292,182,1.255,183,2.436,185,2.684,188,1.778,242,3.139,307,0.013,308,0.013,328,1.919,358,0.846,391,2.023,430,1.427,457,1.964,557,1.427,558,0.472,578,0.891,580,0.938,582,1.931,586,1.698,587,2.432,588,1.808,590,1.599,591,1.969,592,1.767,593,1.599,594,2.072,595,3.343,597,2.072,598,2.072,599,3.533,600,2.072,601,2.072,602,2.436,604,3.276,606,2.861,607,2.072,608,2.861,610,2.894,611,3.362,613,3.362,874,2.684,908,2.072,909,2.436,910,2.436,911,2.237,913,0.987,915,2.237,916,1.351,917,2.237,925,2.436,926,2.072,937,2.436,1163,2.684,1164,5.394,1165,5.394,1166,4.8,1167,4.774,1168,3.016,1169,3.016,1170,3.016,1171,3.016,1172,3.016,1173,3.016,1174,3.016,1175,4.163,1176,3.016,1177,3.016,1178,3.016,1179,3.016,1180,3.016,1181,3.016,1182,3.016,1183,3.016,1184,3.016,1185,3.016,1186,3.016,1187,3.016,1188,3.016,1189,3.016,1190,4.768,1191,3.016,1192,4.768,1193,3.016,1194,3.016,1195,3.016,1196,3.016,1197,3.016,1198,3.016,1199,4.768,1200,3.016,1201,3.016,1202,3.016,1203,3.016,1204,4.163,1205,3.016]],["title/components/ExpenseDetailsModalComponent.html",[0,0.09,267,0.746]],["body/components/ExpenseDetailsModalComponent.html",[0,0.119,1,0.549,2,0.819,3,0.196,4,0.131,5,0.611,7,0.611,8,0.611,9,0.098,15,1.272,21,2.964,23,2.049,24,2.809,25,0.549,26,1.67,27,1.347,28,0.466,29,0.959,30,1.451,31,1.241,32,0.959,33,3.638,34,1.735,35,1.086,38,0.91,40,0.166,41,0.582,47,3.638,50,0.619,53,2.716,54,3.419,60,0.619,61,2.293,62,4.033,65,0.679,69,0.656,70,0.021,71,0.436,72,0.407,73,0.619,74,3.042,79,0.579,84,0.953,85,3.638,90,2.964,91,0.953,96,3.419,99,0.974,105,2.267,114,2.12,115,2.792,117,0.474,127,0.784,128,0.655,137,3.042,141,1.646,145,0.242,149,0.171,150,2.04,151,1.468,154,1.852,155,2.293,156,0.923,158,0.115,159,0.131,161,0.466,168,2.04,169,2.477,170,4.313,172,1.924,173,1.468,174,3.419,177,1.468,179,2.293,180,2.04,182,0.466,233,3.042,234,4.371,235,3.66,236,2.902,237,3.419,238,3.042,239,4.033,240,2.536,241,4.532,242,1.924,243,3.419,244,3.114,245,3.66,246,0.611,247,0.91,248,0.91,249,0.611,250,1.207,251,0.611,252,0.611,253,0.549,254,0.611,255,0.549,256,0.611,257,0.549,258,0.611,259,0.549,260,0.611,261,0.549,262,0.611,263,0.611,264,0.549,265,0.579,266,0.91,267,1.086,268,1.379,269,0.549,270,0.611,271,0.549,272,0.611,273,0.52,274,0.579,275,0.611,276,0.549,277,0.611,278,0.549,279,0.611,280,0.611,281,0.549,282,0.611,283,0.549,284,0.611,285,0.579,286,0.579,287,0.611,288,0.549,289,0.611,290,0.549,291,0.611,292,0.549,293,0.579,294,0.611,295,0.549,296,0.611,297,0.549,298,0.579,299,0.611,300,0.579,301,0.611,302,0.549,303,0.611,304,0.52,305,0.611,306,0.611,307,0.011,308,0.011,328,1.376,457,1.306,625,2.57,635,3.638,775,3.104,790,3.419,896,3.042,954,1.924,957,3.042,972,4.686,979,4.523,993,4.033,1153,2.04,1154,3.042,1155,3.419,1206,5.369,1207,5.369,1208,6.034,1209,4.772,1210,5.29,1211,5.29,1212,5.29,1213,5.29,1214,5.658,1215,4.772,1216,4.847,1217,3.991,1218,2.676,1219,2.676,1220,2.676,1221,2.676,1222,2.676,1223,2.676,1224,2.676,1225,2.676,1226,2.676,1227,2.676,1228,2.676,1229,2.676,1230,2.676,1231,2.676,1232,3.991,1233,2.676,1234,2.676,1235,2.676,1236,2.676,1237,2.676,1238,2.676,1239,2.676,1240,2.676,1241,2.676,1242,2.676,1243,4.772,1244,2.676,1245,2.676,1246,2.676,1247,2.676,1248,2.676,1249,2.676,1250,2.676,1251,2.676,1252,2.676,1253,3.991,1254,3.991,1255,3.991,1256,3.991,1257,3.991,1258,3.991,1259,3.991,1260,3.991]],["title/components/ExpenseListComponent.html",[0,0.09,269,0.746]],["body/components/ExpenseListComponent.html",[0,0.138,1,0.718,2,0.993,3,0.237,4,0.172,5,0.799,7,0.799,8,0.799,9,0.128,15,1.29,16,1.816,25,0.718,26,1.711,27,1.38,28,0.609,29,1.006,30,1.76,31,1.505,32,1.163,34,2.017,35,0.718,38,1.104,40,0.217,50,0.75,60,0.86,65,0.647,69,0.912,70,0.021,71,0.518,72,0.403,73,0.86,79,0.758,84,0.86,91,0.543,99,0.511,105,2.378,114,1.207,117,0.618,127,0.575,128,0.48,145,0.207,149,0.15,156,1.207,158,0.15,159,0.172,167,1.201,182,1.131,188,1.478,198,1.688,204,1.688,242,1.688,246,0.799,247,1.104,248,1.104,249,0.799,250,1.366,251,0.799,252,0.799,253,0.718,254,0.799,255,0.718,256,0.799,257,0.718,258,0.799,259,0.718,260,0.799,261,0.718,262,0.799,263,0.799,264,0.718,265,0.758,266,1.104,267,0.718,268,0.644,269,1.229,270,0.799,271,0.718,272,0.799,273,0.681,274,0.758,275,0.799,276,0.718,277,0.799,278,0.718,279,0.799,280,0.799,281,0.718,282,0.799,283,0.718,284,0.799,285,0.758,286,1.201,287,0.799,288,0.718,289,0.799,290,0.718,291,0.799,292,0.718,293,0.758,294,0.799,295,0.718,296,0.799,297,0.718,298,0.758,299,0.799,300,0.758,301,0.799,302,0.718,303,0.799,304,0.681,305,0.799,306,0.799,307,0.013,308,0.013,314,2.075,328,1.669,587,2.248,625,2.854,678,2.422,713,2.999,726,2.075,883,2.999,894,3.69,895,3.69,896,3.69,926,2.061,954,2.334,957,3.69,972,4.23,993,3.69,1206,5.176,1207,5.176,1261,5.817,1262,2.999,1263,4.84,1264,4.84,1265,4.84,1266,4.84,1267,4.84,1268,5.548,1269,4.84,1270,3.5,1271,3.5,1272,4.84,1273,5.986,1274,3.5,1275,5.986,1276,3.5,1277,4.84,1278,3.5,1279,3.5,1280,3.5,1281,5.986,1282,3.5,1283,4.147,1284,5.986,1285,3.5,1286,3.5,1287,3.5,1288,2.999,1289,3.5,1290,3.5,1291,3.5,1292,3.5,1293,3.5,1294,4.84]],["title/injectables/ExpenseService.html",[63,1.65,558,0.353]],["body/injectables/ExpenseService.html",[3,0.167,4,0.167,9,0.125,15,1.715,16,1.112,21,1.638,28,0.825,29,1.032,40,0.21,50,0.735,60,0.526,63,2.153,65,0.664,69,1.058,70,0.021,71,0.531,72,0.399,73,0.998,84,1.045,90,1.638,91,0.998,99,0.692,114,1.635,115,1.542,117,0.671,126,1.4,145,0.234,149,0.145,158,0.203,159,0.167,161,0.95,167,1.552,169,2.267,172,1.638,173,1.863,177,1.863,182,1.248,183,2.35,185,2.589,188,1.76,242,3.104,307,0.013,308,0.013,328,2.038,358,0.816,371,2.6,391,2.341,430,1.376,457,1.787,557,1.376,558,0.46,560,1.112,578,0.86,580,0.905,585,1.744,586,2.633,587,1.921,588,1.744,590,2.683,591,1.921,592,1.723,593,1.542,594,3.478,595,3.305,597,2.79,598,3.214,599,3.478,600,1.999,601,1.999,602,2.35,604,3.214,606,3.478,607,3.214,608,2.79,610,2.849,611,3.279,613,3.279,775,2.6,791,2.35,874,2.589,908,1.999,909,2.35,910,2.35,911,2.159,913,0.953,915,2.159,916,1.303,917,2.159,925,2.35,926,1.999,937,2.35,1163,2.589,1164,4.061,1165,4.061,1166,3.614,1167,4.737,1168,2.91,1169,5.062,1170,2.91,1171,2.91,1172,2.91,1173,2.91,1174,2.91,1175,4.061,1176,2.91,1177,2.91,1178,2.91,1179,2.91,1180,2.91,1181,2.91,1182,2.91,1183,2.91,1184,2.91,1185,2.91,1186,2.91,1187,2.91,1188,2.91,1189,2.91,1190,4.678,1191,4.061,1192,4.678,1193,4.061,1194,2.91,1195,4.061,1196,4.061,1197,2.91,1198,2.91,1199,4.678,1200,2.91,1201,2.91,1202,2.91,1203,2.91,1204,4.061,1205,2.91,1295,4.74,1296,4.74,1297,3.397,1298,3.397,1299,3.397,1300,3.397,1301,3.397,1302,3.397,1303,3.397,1304,3.397,1305,3.397]],["title/components/FooterComponent.html",[0,0.09,271,0.746]],["body/components/FooterComponent.html",[0,0.154,1,0.89,2,1.147,3,0.274,4,0.213,5,0.99,7,0.99,8,0.99,9,0.159,25,0.89,26,1.737,27,1.402,28,0.755,29,0.815,32,1.043,35,0.89,38,1.275,40,0.269,41,0.815,60,0.672,65,0.542,69,0.713,70,0.02,71,0.51,72,0.346,73,0.672,79,0.939,99,0.633,117,0.501,127,0.713,128,0.595,145,0.239,149,0.186,158,0.186,159,0.213,246,0.99,247,1.275,248,1.275,249,0.99,250,1.489,251,0.99,252,0.99,253,0.89,254,0.99,255,0.89,256,0.99,257,0.89,258,0.99,259,0.89,260,0.99,261,0.89,262,0.99,263,0.99,264,0.89,265,0.939,266,1.275,267,0.89,268,0.798,269,0.89,270,0.99,271,1.339,272,0.99,273,0.844,274,0.939,275,0.99,276,0.89,277,0.99,278,0.89,279,0.99,280,0.99,281,0.89,282,0.99,283,0.89,284,0.99,285,0.939,286,0.939,287,0.99,288,0.89,289,0.99,290,0.89,291,0.99,292,0.89,293,0.939,294,0.99,295,0.89,296,0.99,297,0.89,298,0.939,299,0.99,300,0.939,301,0.99,302,0.89,303,0.99,304,0.844,305,0.99,306,0.99,307,0.015,308,0.015,314,2.394,559,4.069,562,2.757,913,1.217,1306,3.717,1307,5.586,1308,5.586,1309,5.586,1310,6.179,1311,3.717,1312,5.586,1313,4.338,1314,3.307,1315,4.338,1316,3.307,1317,5.586,1318,5.586,1319,5.586,1320,5.586,1321,5.586]],["title/injectables/GeminiApiService.html",[321,2.513,558,0.353]],["body/injectables/GeminiApiService.html",[3,0.145,4,0.145,9,0.108,15,1.477,16,2.011,21,1.423,28,0.513,29,0.925,40,0.183,41,0.626,50,0.665,60,0.457,63,2.88,65,0.572,69,0.83,70,0.021,71,0.417,72,0.365,73,0.783,84,0.783,90,1.423,114,1.742,117,0.603,126,1.814,127,0.485,128,0.405,131,2.076,145,0.288,149,0.184,158,0.216,159,0.21,161,1.103,167,1.406,169,1.132,173,1.618,177,1.618,182,1.244,198,2.068,204,2.068,205,2.294,244,1.737,245,2.041,274,0.639,307,0.013,308,0.011,310,1.737,318,3.524,321,3.494,328,1.018,330,2.725,335,4.684,341,2.966,342,2.528,344,2.725,350,1.875,353,2.528,358,1.031,389,3.255,410,1.737,454,2.249,479,1.618,497,1.875,558,0.538,560,0.966,568,1.947,577,2.725,578,1.085,580,0.786,585,1.515,586,1.423,732,4.327,734,2.973,865,3.494,869,2.846,887,3.743,888,1.737,894,2.249,895,2.249,897,2.528,898,2.528,899,2.528,900,2.528,913,1.203,978,2.249,1017,3.21,1020,4.684,1021,3.85,1023,4.251,1024,4.226,1026,3.269,1027,2.725,1029,2.249,1032,4.226,1033,3.85,1034,3.85,1035,3.85,1036,3.494,1041,3.269,1065,3.269,1072,2.249,1074,2.041,1080,1.875,1092,2.249,1101,2.966,1105,2.041,1108,4.251,1109,2.041,1113,3.269,1114,4.226,1115,3.269,1116,3.269,1117,4.226,1118,3.269,1119,3.269,1120,2.966,1121,3.269,1122,3.269,1123,3.85,1124,3.269,1125,3.269,1126,3.269,1127,2.249,1141,2.528,1166,2.249,1322,5.264,1323,2.041,1324,5.051,1325,5.544,1326,4.288,1327,2.249,1328,4.288,1329,2.95,1330,5.051,1331,5.889,1332,2.95,1333,5.051,1334,2.95,1335,4.288,1336,2.95,1337,5.051,1338,2.95,1339,2.95,1340,2.95,1341,2.95,1342,4.288,1343,2.95,1344,2.95,1345,2.95,1346,2.95,1347,2.95,1348,2.95,1349,2.95,1350,2.249,1351,2.249,1352,2.95,1353,4.288,1354,2.95,1355,4.288,1356,2.528,1357,2.95,1358,2.528,1359,3.673,1360,4.288,1361,4.327,1362,2.95,1363,2.95,1364,2.95,1365,2.95,1366,2.95,1367,2.95,1368,2.95,1369,2.95,1370,2.95,1371,4.288,1372,2.95,1373,2.95,1374,2.95,1375,4.288,1376,3.673,1377,4.288,1378,2.95,1379,5.051,1380,2.95,1381,2.528,1382,2.95,1383,2.95,1384,2.95,1385,2.95,1386,2.528,1387,2.95,1388,2.95,1389,2.249,1390,2.95,1391,2.95,1392,2.95,1393,2.95,1394,2.95,1395,2.528,1396,2.528,1397,2.95,1398,4.288,1399,2.95,1400,2.95,1401,2.249,1402,2.95,1403,2.95,1404,3.673,1405,2.95,1406,2.95,1407,2.95,1408,2.95,1409,2.95,1410,4.288,1411,2.95,1412,2.95,1413,2.95,1414,2.95,1415,2.528,1416,2.249,1417,2.95,1418,2.95,1419,2.95,1420,4.288,1421,2.95,1422,1.875,1423,2.249,1424,2.95,1425,2.95,1426,2.95]],["title/injectables/GetApiService.html",[558,0.353,1427,2.77]],["body/injectables/GetApiService.html",[3,0.279,4,0.279,9,0.209,60,1.079,65,0.552,70,0.02,145,0.243,149,0.243,158,0.243,159,0.279,307,0.018,308,0.018,358,1.367,558,0.64,560,1.861,578,1.439,1323,3.934,1427,5.026,1428,5.026,1429,5.648,1430,5.686]],["title/components/GlobalLoaderComponent.html",[0,0.09,273,0.706]],["body/components/GlobalLoaderComponent.html",[0,0.146,1,0.804,2,1.072,3,0.256,4,0.192,5,0.893,7,0.893,8,0.893,9,0.144,25,0.804,26,1.725,27,1.392,28,0.682,29,0.762,31,1.217,32,1.255,34,2.137,35,0.804,38,1.192,40,0.243,41,0.762,50,0.81,60,0.607,65,0.634,69,0.859,70,0.02,71,0.517,72,0.364,73,0.81,79,0.848,84,0.81,91,0.81,99,0.572,117,0.562,127,0.966,128,0.806,141,2.027,145,0.252,149,0.168,156,1.351,158,0.168,159,0.192,246,0.893,247,1.192,248,1.192,249,0.893,250,1.431,251,0.893,252,0.893,253,0.804,254,0.893,255,0.804,256,0.893,257,0.804,258,0.893,259,0.804,260,0.893,261,0.804,262,0.893,263,0.893,264,0.804,265,0.848,266,1.192,267,0.804,268,0.721,269,0.804,270,0.893,271,0.804,272,0.893,273,1.219,274,1.485,275,0.893,276,0.804,277,0.893,278,0.804,279,0.893,280,0.893,281,0.804,282,0.893,283,0.804,284,0.893,285,0.848,286,0.848,287,0.893,288,0.804,289,0.893,290,0.804,291,0.893,292,0.804,293,0.848,294,0.893,295,0.804,296,0.893,297,0.804,298,0.848,299,0.893,300,0.848,301,0.893,302,0.804,303,0.893,304,0.761,305,0.893,306,0.893,307,0.014,308,0.014,314,2.239,388,5.036,389,3.45,479,3.763,496,2.709,497,2.489,523,3.355,724,2.985,734,3.846,869,2.682,889,3.982,913,1.465,1431,5.757,1432,3.355,1433,5.224,1434,5.224,1435,5.878,1436,4.78,1437,3.32,1438,3.916,1439,5.224,1440,3.916,1441,4.475,1442,3.916,1443,3.916,1444,3.916,1445,3.916,1446,5.224,1447,3.916,1448,3.916,1449,3.916,1450,3.355]],["title/injectables/GlobalLoaderService.html",[389,1.865,558,0.353]],["body/injectables/GlobalLoaderService.html",[0,0.153,3,0.247,4,0.247,9,0.185,40,0.312,41,0.895,50,0.95,65,0.668,69,1.007,70,0.02,71,0.505,72,0.409,73,0.95,84,1.025,91,1.025,117,0.593,127,0.827,128,0.69,145,0.262,149,0.215,158,0.215,159,0.247,161,1.15,273,1.436,307,0.016,308,0.016,358,1.209,389,3.147,478,4.309,479,3.935,480,4.309,558,0.595,560,1.647,578,1.273,869,2.582,889,4.672,1436,5.245,1437,3.895,1441,5.251,1451,6.043,1452,4.309,1453,5.251,1454,5.03,1455,6.129,1456,5.03,1457,5.03,1458,5.03,1459,5.03,1460,5.03,1461,5.03]],["title/components/GraphsComponent.html",[0,0.09,276,0.746]],["body/components/GraphsComponent.html",[0,0.11,1,0.328,2,0.545,3,0.13,4,0.078,5,0.365,6,0.771,7,0.365,8,0.365,9,0.059,13,2.585,15,0.908,16,2.195,23,1.364,24,2.006,25,0.328,26,1.563,27,1.261,28,0.278,29,0.979,30,0.966,31,1.799,32,0.638,35,0.328,36,1.281,38,0.606,40,0.099,41,0.579,50,0.412,53,2.037,60,0.412,63,2.393,65,0.642,69,0.781,70,0.021,71,0.497,72,0.436,73,0.736,77,2.037,78,2.415,79,0.346,84,0.78,88,4.017,91,0.95,93,3.025,94,3.025,99,0.693,102,2.745,105,2.158,106,1.838,113,2.561,114,1.519,115,2.393,125,3.025,126,1.952,127,0.951,128,0.892,131,1.115,134,1.838,141,2.223,145,0.188,149,0.068,152,1.016,158,0.068,159,0.078,160,2.963,161,0.278,167,1.221,169,1.522,182,1.228,187,1.219,188,1.341,210,1.106,236,2.177,246,0.365,247,0.606,248,0.606,249,0.365,250,1.248,251,0.365,252,0.365,253,0.328,254,0.365,255,0.328,256,0.365,257,0.328,258,0.365,259,0.328,260,0.365,261,0.328,262,0.365,263,0.365,264,0.328,265,0.346,266,0.606,267,0.328,268,0.294,269,0.328,270,0.365,271,0.328,272,0.365,273,0.311,274,0.346,275,0.365,276,1.082,277,0.365,278,0.328,279,0.365,280,0.365,281,0.328,282,0.365,283,0.328,284,0.365,285,0.346,286,1.09,287,0.365,288,0.328,289,0.365,290,0.328,291,0.365,292,0.328,293,0.346,294,0.365,295,0.328,296,0.365,297,0.328,298,0.346,299,0.365,300,0.346,301,0.365,302,0.328,303,0.365,304,0.311,305,0.365,306,0.365,307,0.007,308,0.007,363,3.646,367,4.017,379,2.597,380,2.164,387,1.37,395,1.457,400,2.025,440,3.4,441,2.275,455,2.165,459,2.275,495,0.941,532,1.106,533,2.177,557,1.925,567,2.275,569,4.242,587,1.381,625,1.547,671,2.275,673,3.794,674,2.919,679,2.357,681,3.046,726,2.259,742,1.838,783,3.711,788,1.688,804,2.025,805,3.025,824,4.501,826,3.458,865,1.106,867,1.688,869,2.706,877,2.025,881,3.772,916,1.931,921,2.597,926,2.006,954,1.281,967,2.275,1074,2.357,1099,2.025,1132,1.838,1133,2.275,1145,1.838,1146,1.838,1158,3.357,1350,1.219,1422,1.016,1437,3.349,1462,1.37,1463,2.025,1464,3.968,1465,1.838,1466,2.275,1467,2.656,1468,2.919,1469,2.025,1470,3.407,1471,3.407,1472,2.656,1473,3.407,1474,3.407,1475,3.407,1476,3.407,1477,3.407,1478,4.403,1479,4.403,1480,4.511,1481,3.4,1482,2.275,1483,2.275,1484,2.275,1485,2.275,1486,2.656,1487,2.597,1488,3.621,1489,1.599,1490,2.656,1491,2.919,1492,2.656,1493,1.599,1494,2.656,1495,1.599,1496,2.656,1497,2.275,1498,2.275,1499,1.599,1500,2.656,1501,1.599,1502,4.75,1503,4.75,1504,2.656,1505,1.599,1506,2.656,1507,1.599,1508,2.275,1509,3.4,1510,1.599,1511,2.275,1512,2.656,1513,1.599,1514,2.656,1515,1.599,1516,2.656,1517,2.656,1518,2.656,1519,3.968,1520,3.968,1521,4.958,1522,2.656,1523,2.025,1524,2.275,1525,2.656,1526,1.599,1527,2.275,1528,3.407,1529,1.599,1530,3.4,1531,3.407,1532,1.599,1533,4.313,1534,3.968,1535,3.968,1536,3.407,1537,1.599,1538,4.313,1539,3.407,1540,1.599,1541,3.407,1542,1.599,1543,2.275,1544,3.407,1545,2.656,1546,1.599,1547,2.025,1548,2.656,1549,3.407,1550,1.599,1551,3.407,1552,1.599,1553,3.407,1554,4.403,1555,4.403,1556,1.599,1557,1.599,1558,2.275,1559,2.275,1560,1.599,1561,2.919,1562,1.37,1563,1.37,1564,2.597,1565,1.599,1566,1.599,1567,1.599,1568,1.599,1569,3.025,1570,2.275,1571,1.37,1572,2.656,1573,2.275,1574,2.025,1575,5.469,1576,1.37,1577,2.656,1578,3.772,1579,1.599,1580,2.656,1581,2.656,1582,1.599,1583,4.75,1584,2.656,1585,3.407,1586,4.75,1587,1.599,1588,2.275,1589,2.275,1590,2.275,1591,2.275,1592,2.275,1593,2.275,1594,2.275,1595,2.275,1596,2.275,1597,2.275,1598,2.275,1599,2.275,1600,3.407,1601,1.37,1602,3.407,1603,3.407,1604,2.919,1605,3.407,1606,1.599,1607,3.407,1608,1.599,1609,2.275,1610,1.37,1611,1.37,1612,1.599,1613,1.599,1614,3.407,1615,3.407,1616,2.656,1617,1.599,1618,3.407,1619,3.407,1620,2.656,1621,1.599,1622,1.599,1623,1.37,1624,1.599,1625,1.599,1626,1.599,1627,1.599,1628,1.599,1629,1.599,1630,1.599,1631,1.599,1632,1.599,1633,1.599,1634,1.599,1635,1.37,1636,1.37,1637,1.599,1638,1.599,1639,1.599,1640,2.275,1641,1.599,1642,1.599,1643,1.599,1644,1.599,1645,1.599,1646,1.599,1647,1.599,1648,1.599,1649,1.599,1650,1.599,1651,1.599,1652,1.599,1653,1.599,1654,1.599,1655,1.599,1656,1.599,1657,1.599]],["title/components/HamburgerMenuComponent.html",[0,0.09,278,0.746]],["body/components/HamburgerMenuComponent.html",[0,0.142,1,0.754,2,1.027,3,0.245,4,0.18,5,0.838,6,1.771,7,0.838,8,0.838,9,0.135,25,0.754,26,1.717,27,1.385,28,0.639,29,0.73,32,1.202,34,2.069,35,0.754,36,2.412,38,1.141,40,0.227,41,0.73,50,0.775,60,0.569,65,0.655,69,0.935,70,0.02,71,0.527,72,0.352,73,0.882,79,0.795,84,0.882,91,0.882,99,0.536,117,0.51,127,0.822,128,0.686,141,2.204,145,0.244,147,2.541,149,0.157,156,1.267,158,0.157,159,0.18,182,0.639,246,0.838,247,1.141,248,1.141,249,0.838,250,1.394,251,0.838,252,0.838,253,0.754,254,0.838,255,0.754,256,0.838,257,0.754,258,0.838,259,0.754,260,0.838,261,0.754,262,0.838,263,0.838,264,0.754,265,0.795,266,1.141,267,0.754,268,0.676,269,0.754,270,0.838,271,0.754,272,0.838,273,0.714,274,0.795,275,0.838,276,0.754,277,0.838,278,1.254,279,1.567,280,0.838,281,0.754,282,0.838,283,0.754,284,0.838,285,0.795,286,0.795,287,0.838,288,0.754,289,0.838,290,0.754,291,0.838,292,0.754,293,0.795,294,0.838,295,0.754,296,0.838,297,0.754,298,0.795,299,0.838,300,0.795,301,0.838,302,0.754,303,0.838,304,0.714,305,0.838,306,0.838,307,0.013,308,0.013,310,2.162,365,2.945,384,3.813,390,3.617,416,2.8,417,3.863,419,4.657,423,5.475,447,2.541,455,3.179,498,2.541,505,2.541,512,3.146,913,1.03,959,4.286,974,3.146,978,2.8,979,2.8,984,4.286,1004,2.8,1005,3.146,1658,5.884,1659,5.235,1660,3.146,1661,5.689,1662,5.002,1663,5.689,1664,5.689,1665,3.813,1666,5.002,1667,6.109,1668,2.8,1669,5.002,1670,5.002,1671,3.813,1672,3.673,1673,5.002,1674,3.673,1675,3.673,1676,3.673,1677,2.8,1678,3.673,1679,5.002,1680,6.391,1681,5.002,1682,3.673,1683,3.146,1684,2.541,1685,2.8,1686,3.813]],["title/components/HomeComponent.html",[0,0.09,281,0.746]],["body/components/HomeComponent.html",[0,0.125,1,0.423,2,0.67,3,0.16,4,0.101,5,0.47,6,0.994,7,0.47,8,0.47,9,0.076,13,2.875,15,1.492,25,0.423,26,1.621,27,1.308,28,0.359,29,0.477,30,1.187,31,1.433,32,0.785,34,1.474,35,0.423,36,1.574,38,0.745,40,0.202,41,0.477,50,0.506,65,0.641,69,0.878,70,0.021,71,0.479,72,0.438,73,0.828,77,2.367,79,0.446,84,1.013,91,0.828,98,3.515,99,0.301,102,3.698,105,2.948,112,2.797,113,2.637,114,2.466,115,1.483,117,0.586,126,0.964,127,0.954,128,0.84,131,1.069,135,2.489,140,2.93,141,2.003,144,3.515,145,0.215,149,0.088,151,1.131,156,0.711,158,0.088,159,0.101,160,3.418,167,1.212,182,0.874,188,0.549,240,1.31,246,0.47,247,0.745,248,1.219,249,0.47,250,1.146,251,0.47,252,0.47,253,0.423,254,0.47,255,0.423,256,0.47,257,0.423,258,0.47,259,0.423,260,0.47,261,0.423,262,0.47,263,0.47,264,0.423,265,0.446,266,0.745,267,0.423,268,0.379,269,0.423,270,0.47,271,0.423,272,0.47,273,0.401,274,0.446,275,0.47,276,0.946,277,0.47,278,0.423,279,0.47,280,0.47,281,1.097,282,0.47,283,0.423,284,0.47,285,0.446,286,0.446,287,0.47,288,0.423,289,0.47,290,0.423,291,0.47,292,0.946,293,0.446,294,0.47,295,0.423,296,0.47,297,0.423,298,0.446,299,0.47,300,0.446,301,0.47,302,0.423,303,0.47,304,0.401,305,0.47,306,0.47,307,0.009,308,0.009,311,3.09,361,2.489,363,4.786,365,2.714,395,3.185,417,3.487,424,1.766,444,2.797,451,2.075,453,3.95,457,1.901,472,1.426,508,3.19,557,2.269,726,0.884,783,4.151,799,2.259,824,4.897,826,3.834,852,1.766,859,1.766,903,1.131,954,1.574,991,3.95,1044,2.075,1068,2.075,1080,2.075,1145,3.19,1146,2.259,1381,3.95,1389,2.489,1437,2.075,1463,2.489,1465,2.259,1469,2.489,1487,3.09,1488,3.09,1523,1.572,1524,1.766,1527,2.797,1564,4.846,1569,2.489,1574,1.572,1588,1.766,1589,1.766,1590,1.766,1591,1.766,1592,1.766,1593,1.766,1594,1.766,1595,1.766,1596,1.766,1597,1.766,1598,1.766,1599,1.766,1601,1.766,1677,3.515,1684,1.426,1687,1.766,1688,2.797,1689,4.054,1690,3.265,1691,4.054,1692,4.054,1693,4.054,1694,4.054,1695,3.265,1696,3.265,1697,3.265,1698,5.345,1699,4.61,1700,4.61,1701,3.265,1702,3.265,1703,3.265,1704,3.265,1705,4.054,1706,2.062,1707,3.265,1708,3.265,1709,3.265,1710,3.265,1711,3.265,1712,3.265,1713,2.062,1714,4.61,1715,4.61,1716,4.61,1717,3.265,1718,3.265,1719,5.807,1720,3.265,1721,2.062,1722,3.265,1723,2.062,1724,2.062,1725,4.61,1726,4.61,1727,2.062,1728,3.265,1729,5.807,1730,4.579,1731,2.062,1732,4.61,1733,3.265,1734,2.062,1735,3.265,1736,2.062,1737,3.265,1738,3.265,1739,2.062,1740,2.062,1741,2.797,1742,3.265,1743,2.062,1744,3.265,1745,3.265,1746,4.054,1747,2.062,1748,2.062,1749,3.95,1750,2.062,1751,2.062,1752,2.062,1753,1.426,1754,2.062,1755,5.025,1756,3.265,1757,3.265,1758,3.265,1759,3.265,1760,3.265,1761,3.265,1762,2.062,1763,3.265,1764,3.265,1765,4.61,1766,3.265,1767,3.265,1768,2.062,1769,2.062,1770,3.265,1771,2.062,1772,2.062,1773,2.062,1774,2.062,1775,2.062,1776,2.062,1777,2.062,1778,2.062,1779,5.345,1780,4.054,1781,3.265,1782,3.265,1783,4.054,1784,2.062,1785,3.265,1786,3.265,1787,2.062,1788,4.054,1789,2.062,1790,2.062,1791,2.062,1792,2.062,1793,2.062,1794,2.062,1795,2.062]],["title/components/InfoIconComponent.html",[0,0.09,283,0.746]],["body/components/InfoIconComponent.html",[0,0.155,1,0.91,2,1.162,3,0.357,4,0.217,5,1.011,7,1.011,8,1.011,9,0.163,25,0.91,26,1.74,27,1.403,28,0.771,29,0.827,32,1.065,35,0.91,38,1.292,40,0.275,65,0.43,70,0.02,71,0.467,72,0.275,79,0.96,99,0.647,105,2.428,117,0.508,127,0.729,128,0.608,145,0.19,149,0.19,158,0.19,159,0.217,246,1.011,247,1.292,248,1.292,249,1.011,250,1.501,251,1.011,252,1.011,253,0.91,254,1.011,255,0.91,256,1.011,257,0.91,258,1.011,259,0.91,260,1.011,261,0.91,262,1.011,263,1.011,264,0.91,265,0.96,266,1.292,267,0.91,268,0.816,269,0.91,270,1.011,271,0.91,272,1.011,273,0.862,274,0.96,275,1.011,276,0.91,277,1.011,278,0.91,279,1.011,280,1.011,281,0.91,282,1.011,283,1.35,284,1.011,285,0.96,286,0.96,287,1.011,288,0.91,289,1.011,290,0.91,291,1.011,292,0.91,293,0.96,294,1.011,295,0.91,296,1.011,297,0.91,298,0.96,299,1.011,300,0.96,301,1.011,302,0.91,303,1.011,304,0.862,305,1.011,306,1.011,307,0.015,308,0.015,314,2.428,734,4.001,903,3.107,954,2.731,1480,4.318,1796,4.853,1797,4.853,1798,3.798,1799,5.664,1800,5.664,1801,4.433]],["title/components/MusicComponent.html",[0,0.09,288,0.746]],["body/components/MusicComponent.html",[0,0.114,1,0.513,2,0.778,3,0.186,4,0.123,5,0.571,7,0.571,8,0.571,9,0.092,15,1.221,23,1.947,25,0.513,26,1.658,27,1.338,28,0.435,29,0.554,30,1.379,31,1.179,32,0.911,34,1.666,35,0.513,38,0.865,40,0.155,41,0.554,50,0.588,60,0.388,65,0.671,69,0.951,70,0.021,71,0.556,72,0.407,73,0.897,79,0.541,84,0.959,91,0.792,99,0.365,117,0.579,120,3.925,126,0.738,127,0.988,128,0.824,145,0.219,149,0.107,151,1.372,156,0.863,158,0.107,159,0.123,167,1.252,182,1.159,188,1.011,198,1.829,204,1.829,205,2.08,234,1.73,246,0.571,247,0.865,248,0.865,249,0.571,250,1.166,251,0.571,252,0.571,253,0.513,254,0.571,255,0.513,256,0.571,257,0.513,258,0.571,259,0.513,260,0.571,261,0.513,262,0.571,263,0.571,264,0.513,265,0.541,266,0.865,267,0.513,268,0.698,269,0.513,270,0.571,271,0.513,272,0.571,273,0.486,274,0.541,275,0.571,276,0.513,277,0.571,278,0.513,279,0.571,280,0.571,281,0.513,282,0.571,283,0.513,284,0.571,285,0.541,286,0.541,287,0.571,288,1.049,289,0.571,290,0.513,291,0.571,292,0.513,293,0.541,294,0.571,295,0.513,296,0.571,297,0.513,298,0.541,299,0.571,300,0.541,301,0.571,302,0.513,303,0.571,304,0.486,305,0.571,306,0.571,307,0.014,308,0.01,310,3.01,311,3.492,314,1.626,318,2.911,328,1.895,344,1.589,417,2.804,466,2.624,514,3.802,524,1.589,587,1.856,591,1.013,751,2.891,761,3.802,767,3.925,768,2.143,779,3.897,786,2.143,826,2.08,867,2.41,888,2.232,893,1.73,913,0.701,1003,2.143,1004,1.906,1028,3.676,1039,3.492,1044,1.589,1045,4.926,1052,2.891,1055,2.891,1059,3.492,1068,1.589,1094,2.891,1095,3.897,1108,1.73,1109,2.624,1112,3.492,1120,1.73,1423,3.492,1686,4.189,1730,2.143,1802,2.143,1803,4.581,1804,3.792,1805,3.792,1806,5.784,1807,3.925,1808,3.792,1809,3.792,1810,5.113,1811,3.792,1812,5.495,1813,3.792,1814,5.113,1815,3.792,1816,2.501,1817,3.792,1818,3.792,1819,2.501,1820,2.501,1821,3.792,1822,2.501,1823,2.501,1824,3.792,1825,2.501,1826,2.501,1827,3.792,1828,2.501,1829,2.501,1830,3.792,1831,2.501,1832,3.792,1833,3.792,1834,2.501,1835,2.501,1836,5.113,1837,2.501,1838,2.501,1839,2.501,1840,4.581,1841,2.501,1842,2.501,1843,2.501,1844,2.501,1845,3.792,1846,2.501,1847,2.501,1848,2.501,1849,2.501,1850,2.501,1851,2.501,1852,5.113,1853,2.501,1854,2.501,1855,3.792,1856,2.501,1857,2.501,1858,3.792,1859,2.501,1860,4.581,1861,2.501,1862,2.501,1863,2.501,1864,2.501,1865,2.501,1866,2.501,1867,4.581,1868,2.501,1869,3.792,1870,3.792,1871,3.792,1872,4.581,1873,4.581,1874,2.501,1875,2.501,1876,3.249,1877,3.792,1878,2.501,1879,2.501,1880,5.113,1881,2.501,1882,3.792,1883,2.501,1884,2.501,1885,2.501,1886,2.501,1887,3.792,1888,2.501,1889,2.501,1890,2.143,1891,2.501,1892,2.501,1893,2.501,1894,2.501,1895,2.501,1896,3.792,1897,2.501,1898,2.501,1899,2.501,1900,3.792,1901,2.143,1902,2.501,1903,2.501,1904,2.501,1905,2.501,1906,2.501,1907,3.792,1908,2.501,1909,2.501,1910,3.792,1911,2.501,1912,2.501,1913,2.501,1914,2.501,1915,2.501,1916,2.501,1917,2.501,1918,2.501,1919,2.501,1920,2.501,1921,2.501,1922,2.501,1923,2.501,1924,2.501,1925,2.501,1926,3.792,1927,3.792,1928,4.38,1929,3.792,1930,3.792,1931,3.792,1932,3.792,1933,3.792]],["title/components/NavbarComponent.html",[0,0.09,290,0.746]],["body/components/NavbarComponent.html",[0,0.15,1,0.849,2,1.112,3,0.266,4,0.203,5,0.944,6,1.995,7,0.944,8,0.944,9,0.152,25,0.849,26,1.732,27,1.397,28,0.72,29,0.935,32,1.302,34,2.196,35,0.849,36,2.612,38,1.236,40,0.256,41,0.791,50,0.84,60,0.641,65,0.586,69,0.89,70,0.02,71,0.528,72,0.336,73,0.84,79,0.896,84,0.641,91,0.641,99,0.604,117,0.542,127,0.68,128,0.568,141,1.868,145,0.274,149,0.177,156,1.427,158,0.177,159,0.203,246,0.944,247,1.236,248,1.236,249,0.944,250,1.462,251,0.944,252,0.944,253,0.849,254,0.944,255,0.849,256,0.944,257,0.849,258,0.944,259,0.849,260,0.944,261,0.849,262,0.944,263,0.944,264,0.849,265,0.896,266,1.236,267,0.849,268,0.761,269,0.849,270,0.944,271,0.849,272,0.944,273,0.804,274,0.896,275,0.944,276,0.849,277,0.944,278,1.315,279,1.236,280,0.944,281,0.849,282,0.944,283,0.849,284,0.944,285,0.896,286,0.896,287,0.944,288,0.849,289,0.944,290,1.315,291,0.944,292,0.849,293,0.896,294,0.944,295,0.849,296,0.944,297,0.849,298,0.896,299,0.944,300,0.896,301,0.944,302,0.849,303,0.944,304,0.804,305,0.944,306,0.944,307,0.014,308,0.014,365,3.189,390,3.743,417,3.743,451,2.629,498,2.862,505,2.862,913,1.16,1659,3.154,1665,4.129,1668,3.154,1671,4.129,1684,2.862,1685,3.154,1934,3.545,1935,5.417,1936,6.04,1937,5.417,1938,6.04,1939,5.417,1940,4.137,1941,4.137,1942,4.137,1943,4.641]],["title/components/PieChartComponent.html",[0,0.09,292,0.746]],["body/components/PieChartComponent.html",[0,0.106,1,0.454,2,0.709,3,0.169,4,0.109,5,0.505,6,1.067,7,0.505,8,0.505,9,0.081,15,0.59,16,1.389,23,1.773,24,2.499,25,0.454,26,1.635,27,1.319,28,0.385,29,0.759,30,1.255,31,1.49,35,0.454,36,1.665,38,0.788,40,0.137,41,0.504,50,0.535,53,2.462,60,0.535,63,2.613,65,0.671,69,0.698,70,0.021,71,0.429,72,0.441,73,0.658,79,0.479,84,0.922,91,1.039,99,0.7,105,1.819,106,1.531,114,1.191,117,0.595,126,1.699,127,0.946,128,0.816,140,1.407,141,1.9,145,0.205,146,3.236,148,1.687,149,0.095,152,1.407,158,0.095,159,0.109,161,0.739,167,1.038,169,1.628,182,1.204,187,1.687,188,1.385,198,1.067,204,1.067,205,1.568,210,1.531,246,0.788,247,0.788,248,0.788,249,0.505,250,1.094,251,0.505,252,0.505,253,0.454,254,0.505,255,0.454,256,0.505,257,0.454,258,0.505,259,0.454,260,0.505,261,0.454,262,0.505,263,0.505,264,0.454,265,0.479,266,0.788,267,0.454,268,0.407,269,0.454,270,0.505,271,0.454,272,0.505,273,0.43,274,0.479,275,0.505,276,0.454,277,0.505,278,0.454,279,0.505,280,0.505,281,0.454,282,0.505,283,0.454,284,0.505,285,0.479,286,0.479,287,0.505,288,0.454,289,0.505,290,0.454,291,0.505,292,0.984,293,1.288,294,0.505,295,0.454,296,0.505,297,0.454,298,0.479,299,0.505,300,0.479,301,0.505,302,0.454,303,0.505,304,0.43,305,0.505,306,0.505,307,0.009,308,0.009,328,1.191,380,2.207,413,1.067,422,1.896,430,2.107,447,1.531,457,1.13,495,1.303,532,1.531,533,1.214,557,1.399,587,1.72,591,0.897,592,1.543,625,1.928,627,3.636,673,3.06,675,4.928,678,3.317,679,1.531,682,4.108,726,1.819,775,1.214,783,2.499,804,2.632,805,3.655,824,3.98,826,3.156,867,3.656,912,3.242,916,1.628,922,2.669,954,1.665,960,1.896,994,1.896,996,1.896,1008,1.896,1022,2.632,1158,1.687,1160,1.531,1350,1.687,1422,2.194,1465,2.937,1468,3.636,1480,1.687,1481,4.108,1482,4.108,1483,4.108,1484,4.108,1485,2.958,1487,3.236,1488,3.236,1508,2.958,1509,4.108,1533,1.896,1538,1.896,1547,3.236,1559,2.958,1561,2.958,1562,1.896,1563,1.896,1564,3.236,1569,3.236,1570,2.958,1571,1.896,1573,2.958,1574,2.632,1576,1.896,1578,3.636,1609,2.958,1610,1.896,1611,1.896,1623,1.896,1635,1.896,1636,1.896,1741,1.896,1753,4.814,1944,5.304,1945,1.687,1946,3.636,1947,4.245,1948,3.453,1949,4.245,1950,4.245,1951,4.245,1952,4.108,1953,3.453,1954,3.453,1955,2.214,1956,2.214,1957,2.214,1958,2.214,1959,2.214,1960,2.214,1961,2.214,1962,2.214,1963,3.453,1964,2.214,1965,3.453,1966,2.632,1967,2.214,1968,2.214,1969,2.214,1970,2.214,1971,2.214,1972,2.214,1973,2.214,1974,2.214,1975,2.214,1976,2.214,1977,2.214,1978,2.214,1979,2.214,1980,2.214,1981,2.214,1982,2.214,1983,4.245,1984,2.214,1985,2.214,1986,2.214,1987,2.214,1988,2.214,1989,4.245,1990,3.453,1991,4.245,1992,4.245,1993,5.508,1994,4.245,1995,4.245,1996,4.245,1997,4.245,1998,5.508,1999,4.245,2000,4.245,2001,4.245,2002,2.214,2003,4.245,2004,3.453,2005,2.214,2006,4.245,2007,2.214,2008,3.453,2009,2.214,2010,2.214,2011,2.214,2012,2.214,2013,2.214,2014,2.214,2015,2.214,2016,1.896,2017,1.896,2018,2.214,2019,2.214,2020,2.958,2021,2.214,2022,2.214,2023,2.214,2024,4.245,2025,2.214,2026,3.453,2027,2.214,2028,2.214,2029,2.214,2030,2.214,2031,2.214,2032,3.453,2033,3.453,2034,2.214,2035,2.214,2036,2.214]],["title/injectables/PostApiService.html",[393,2.513,558,0.353]],["body/injectables/PostApiService.html",[3,0.171,4,0.171,9,0.128,13,2.474,15,1.284,16,2.177,40,0.215,50,0.747,60,0.747,65,0.537,69,0.571,70,0.021,71,0.287,72,0.215,73,0.539,75,3.673,76,4.55,77,2.474,78,2.643,82,3.673,84,0.857,91,0.747,99,0.807,114,1.199,126,2.078,131,2.324,145,0.278,149,0.149,158,0.149,159,0.171,160,3.514,161,1.039,167,1.043,182,1.225,183,2.406,202,2.651,205,1.579,239,3.673,307,0.013,308,0.013,328,1.199,330,2.21,358,0.836,360,4.128,380,2.601,391,2.465,393,4.13,395,2.643,407,3.333,408,3.333,409,4.55,410,3.514,411,4.128,413,2.666,473,2.406,500,4.55,508,3.333,514,3.825,538,4.215,539,2.21,558,0.468,560,1.138,568,2.188,578,0.88,581,3.02,592,2.01,596,2.651,750,2.979,751,3.673,752,5.556,887,3.062,888,2.047,905,3.818,915,2.21,916,2.29,917,2.21,1023,4.487,1036,4.337,1044,2.21,1096,3.673,1128,4.69,1132,3.333,1134,4.128,1323,2.406,1327,2.651,1361,4.737,1428,4.55,1511,4.128,1523,4.779,1890,2.979,2037,4.818,2038,5.969,2039,4.128,2040,4.818,2041,4.818,2042,4.128,2043,6.269,2044,5.969,2045,5.969,2046,3.477,2047,4.818,2048,4.128,2049,4.818,2050,3.514,2051,3.477,2052,4.818,2053,4.818,2054,4.818,2055,3.825,2056,5.529,2057,3.477,2058,4.818,2059,3.333,2060,4.818,2061,4.818,2062,5.969,2063,4.818,2064,5.529,2065,4.818,2066,3.477,2067,3.477,2068,3.477,2069,3.477,2070,4.818,2071,3.477,2072,4.818,2073,3.477,2074,4.818,2075,3.477,2076,3.477,2077,3.477,2078,3.477,2079,5.529,2080,3.477,2081,3.477,2082,3.477,2083,3.477,2084,3.477,2085,3.477,2086,3.477,2087,3.477,2088,3.477,2089,3.477,2090,3.477,2091,3.477,2092,3.477,2093,3.477,2094,2.651]],["title/injectables/SaavnService.html",[558,0.353,1028,2.309]],["body/injectables/SaavnService.html",[3,0.167,4,0.167,9,0.125,15,0.905,25,0.697,40,0.21,41,0.692,50,0.735,60,0.526,65,0.641,69,0.897,70,0.021,71,0.545,72,0.399,73,0.846,77,1.744,84,0.846,113,2.683,117,0.622,127,0.897,128,0.925,131,1.934,145,0.276,149,0.145,158,0.203,159,0.167,161,1.207,167,1.43,182,1.192,188,0.905,198,1.638,204,1.638,205,1.542,244,1.999,268,0.625,307,0.013,308,0.013,318,3.47,328,1.171,330,2.159,341,3.279,344,2.159,350,2.159,358,0.816,389,3.392,395,1.863,466,2.35,473,2.35,479,1.863,496,2.35,497,2.159,558,0.46,560,1.112,564,3.614,568,1.542,577,2.159,578,0.86,580,0.905,592,1.235,761,2.35,826,1.863,869,3.191,887,3.013,888,1.999,908,1.999,913,0.953,1017,3.95,1018,5.138,1019,2.589,1020,4.504,1021,4.162,1023,4.088,1024,3.614,1025,4.061,1026,2.589,1027,2.159,1028,3.013,1029,4.162,1030,4.678,1031,4.061,1032,4.162,1033,3.614,1034,3.614,1035,3.614,1036,3.279,1037,4.061,1038,2.91,1039,2.589,1040,2.91,1041,2.589,1042,4.061,1043,2.91,1044,3.755,1045,5.037,1046,2.91,1047,5.062,1048,2.91,1049,2.91,1050,4.061,1051,4.061,1052,3.614,1053,2.91,1054,2.91,1055,2.589,1056,2.91,1057,2.91,1058,2.91,1059,4.162,1060,2.91,1061,2.91,1062,2.91,1063,2.91,1064,2.589,1065,4.162,1066,2.91,1067,2.91,1068,2.159,1069,2.91,1070,2.91,1071,2.91,1072,3.614,1073,5.062,1074,3.777,1075,4.061,1076,4.061,1077,4.061,1078,2.91,1079,2.91,1080,2.159,1081,4.061,1082,4.061,1083,2.91,1084,2.91,1085,2.91,1086,2.91,1087,2.91,1088,2.91,1089,2.91,1090,2.91,1091,2.91,1092,2.589,1093,2.91,1094,2.589,1095,2.589,1096,2.589,1097,2.91,1098,2.91,1099,2.589,1100,2.91,1101,2.35,1102,2.91,1103,2.91,1104,2.91,1105,2.35,1106,2.91,1107,4.061,1108,3.777,1109,2.35,1110,2.91,1111,2.91,1112,2.589,1113,3.614,1114,3.614,1115,2.589,1116,2.589,1117,3.614,1118,2.589,1119,3.614,1120,2.35,1121,2.589,1122,2.589,1123,4.162,1124,2.589,1125,2.589,1126,2.589,1127,4.504,1327,2.589,1423,2.589,1807,2.91,1928,2.91,2095,4.74,2096,4.74,2097,4.74,2098,3.397,2099,3.397,2100,3.397,2101,3.397,2102,3.397]],["title/interfaces/Schema.html",[368,2.309,580,0.968]],["body/interfaces/Schema.html",[3,0.179,4,0.179,9,0.134,16,1.629,21,1.757,65,0.354,70,0.021,71,0.41,90,1.757,114,1.257,115,1.655,117,0.631,131,1.629,141,1.257,145,0.243,149,0.156,158,0.156,159,0.179,161,1.109,167,1.583,169,1.909,172,2.399,173,1.998,177,1.998,182,1.245,188,1.51,307,0.013,308,0.013,332,2.145,358,0.876,368,4.649,369,2.777,391,1.325,407,4.212,413,1.757,414,2.315,430,1.476,457,1.193,533,1.998,558,0.483,559,3.335,562,2.315,568,2.259,570,4.212,578,0.922,580,0.971,581,2.259,582,1.998,584,2.52,585,1.871,586,1.757,590,1.655,591,2.016,592,1.809,593,1.655,610,1.757,625,1.655,726,1.562,903,1.998,904,2.729,905,2.145,913,1.022,916,2.336,922,3.126,1160,2.52,1167,2.52,1314,2.777,1316,2.777,1966,2.777,2050,2.315,2055,3.442,2103,2.777,2104,3.643,2105,3.643,2106,3.121,2107,3.121,2108,3.121,2109,3.121,2110,3.121,2111,3.121,2112,3.121,2113,3.121,2114,4.262,2115,3.121,2116,3.121,2117,4.262,2118,3.121,2119,3.121,2120,4.262,2121,2.52,2122,2.52,2123,2.52,2124,2.52,2125,2.52,2126,2.52,2127,2.52,2128,3.121,2129,3.121,2130,4.262,2131,3.121,2132,3.121,2133,3.121,2134,4.262,2135,4.262,2136,4.262,2137,4.262,2138,4.262,2139,3.121,2140,4.262,2141,3.121,2142,4.262,2143,4.262,2144,3.121,2145,3.121,2146,4.262,2147,4.262,2148,3.121,2149,3.121,2150,4.262,2151,4.262,2152,3.121,2153,3.121,2154,4.262,2155,3.121,2156,3.121,2157,3.121,2158,4.262,2159,3.121,2160,3.121,2161,3.121,2162,3.121,2163,3.121,2164,3.121,2165,3.121,2166,3.121,2167,3.121,2168,3.121,2169,3.121,2170,3.121,2171,3.121,2172,3.121,2173,3.121,2174,3.121,2175,3.121,2176,3.121,2177,3.121,2178,3.121]],["title/components/SearchComponent.html",[0,0.09,295,0.746]],["body/components/SearchComponent.html",[0,0.158,1,0.945,2,1.191,3,0.285,4,0.226,5,1.051,7,1.051,8,1.051,9,0.169,16,1.508,25,0.945,26,1.744,27,1.407,28,0.802,29,0.847,32,1.107,35,0.945,38,1.324,70,0.02,71,0.479,79,0.997,99,0.672,145,0.197,149,0.197,158,0.197,159,0.226,246,1.051,247,1.324,248,1.324,249,1.051,250,1.522,251,1.051,252,1.051,253,0.945,254,1.051,255,0.945,256,1.051,257,0.945,258,1.051,259,0.945,260,1.051,261,0.945,262,1.051,263,1.051,264,0.945,265,0.997,266,1.324,267,0.945,268,0.848,269,0.945,270,1.051,271,0.945,272,1.051,273,0.896,274,0.997,275,1.051,276,0.945,277,1.051,278,0.945,279,1.051,280,1.051,281,0.945,282,1.051,283,0.945,284,1.051,285,0.997,286,0.997,287,1.051,288,0.945,289,1.051,290,0.945,291,1.051,292,0.945,293,0.997,294,1.051,295,1.369,296,1.051,297,0.945,298,0.997,299,1.051,300,0.997,301,1.051,302,0.945,303,1.051,304,0.896,305,1.051,306,1.051,307,0.015,308,0.015,314,2.487,356,4.972,1686,5.242,2179,3.946,2180,5.803,2181,5.803,2182,4.606]],["title/injectables/SectionService.html",[390,1.993,558,0.353]],["body/injectables/SectionService.html",[3,0.26,4,0.26,9,0.194,15,1.685,40,0.328,41,0.923,50,0.98,65,0.656,69,0.871,70,0.02,71,0.437,72,0.328,73,0.821,84,0.821,91,0.821,117,0.606,127,1.04,128,0.868,145,0.271,149,0.227,158,0.227,159,0.26,161,1.177,307,0.017,308,0.017,358,1.274,365,3.119,375,5.792,390,3.469,558,0.614,560,1.735,578,1.341,1027,3.368,2183,4.54,2184,6.761,2185,6.325,2186,6.325,2187,5.299,2188,6.325,2189,5.299,2190,6.325,2191,5.299,2192,5.299,2193,5.299]],["title/components/SettingItemComponent.html",[0,0.09,297,0.746]],["body/components/SettingItemComponent.html",[0,0.156,1,0.921,2,1.172,3,0.28,4,0.22,5,1.024,7,1.024,8,1.024,9,0.165,25,0.921,26,1.741,27,1.405,28,0.781,29,0.833,30,2.076,31,1.774,32,1.078,35,0.921,38,1.302,40,0.278,65,0.435,70,0.02,71,0.471,72,0.278,79,0.971,99,0.655,105,2.447,117,0.512,145,0.192,149,0.192,158,0.192,159,0.22,246,1.024,247,1.302,248,1.302,249,1.024,250,1.507,251,1.024,252,1.024,253,0.921,254,1.024,255,0.921,256,1.024,257,0.921,258,1.024,259,0.921,260,1.024,261,0.921,262,1.024,263,1.024,264,0.921,265,0.971,266,1.302,267,0.921,268,0.826,269,0.921,270,1.024,271,0.921,272,1.024,273,0.873,274,0.971,275,1.024,276,0.921,277,1.024,278,0.921,279,1.024,280,1.024,281,0.921,282,1.024,283,0.921,284,1.024,285,0.971,286,0.971,287,1.024,288,0.921,289,1.024,290,0.921,291,1.024,292,0.921,293,0.971,294,1.024,295,0.921,296,1.024,297,1.356,298,1.477,299,1.024,300,0.971,301,1.024,302,0.921,303,1.024,304,0.873,305,1.024,306,1.024,307,0.015,308,0.015,610,2.753,867,4.336,954,2.753,2194,4.89,2195,4.89,2196,3.844,2197,5.708,2198,4.487]],["title/components/SidebarComponent.html",[0,0.09,302,0.746]],["body/components/SidebarComponent.html",[0,0.148,1,0.826,2,1.092,3,0.261,4,0.197,5,0.918,6,1.94,7,0.918,8,0.918,9,0.148,25,0.826,26,1.728,27,1.394,28,1.037,29,0.925,30,1.934,31,1.653,32,1.278,34,2.166,35,0.826,36,2.565,38,1.213,40,0.249,41,0.776,50,0.824,60,0.624,65,0.578,69,0.874,70,0.02,71,0.523,72,0.369,73,0.824,79,0.871,84,0.624,91,0.624,99,0.587,117,0.591,127,0.661,128,0.552,145,0.255,149,0.172,156,1.388,158,0.172,159,0.197,246,0.918,247,1.213,248,1.213,249,0.918,250,1.446,251,0.918,252,0.918,253,0.826,254,0.918,255,0.826,256,0.918,257,0.826,258,0.918,259,0.826,260,0.918,261,0.826,262,0.918,263,0.918,264,0.826,265,0.871,266,1.213,267,0.826,268,0.741,269,0.826,270,0.918,271,0.826,272,0.918,273,0.782,274,0.871,275,0.918,276,0.826,277,0.918,278,0.826,279,0.918,280,0.918,281,0.826,282,0.918,283,0.826,284,0.918,285,0.871,286,1.29,287,0.918,288,0.826,289,0.918,290,0.826,291,0.918,292,0.826,293,0.871,294,0.918,295,0.826,296,0.918,297,0.826,298,0.871,299,0.918,300,0.871,301,0.918,302,1.301,303,0.918,304,0.782,305,0.918,306,0.918,307,0.014,308,0.014,310,3.131,350,3.38,365,3.131,390,3.714,417,3.714,451,3.38,455,3.38,498,2.784,505,2.784,581,2.415,799,3.68,913,1.129,1665,4.054,1668,3.067,1671,4.054,1684,2.784,1685,3.067,2199,3.447,2200,5.319,2201,5.958,2202,5.319,2203,5.958,2204,5.319,2205,4.024,2206,4.024]],["title/injectables/StorageService.html",[391,1.321,558,0.353]],["body/injectables/StorageService.html",[3,0.147,4,0.147,9,0.11,16,1.669,21,1.446,40,0.186,41,0.633,50,0.672,60,0.465,65,0.704,69,0.838,70,0.021,71,0.489,72,0.395,73,0.79,84,1.097,90,1.446,91,0.958,114,1.034,115,1.362,117,0.653,127,0.918,128,0.766,131,1.669,141,1.034,145,0.218,149,0.128,158,0.128,159,0.147,161,1.232,167,1.542,169,1.664,172,2.092,173,1.645,177,1.645,182,1.203,188,1.358,307,0.012,308,0.012,332,1.765,358,0.721,368,4.594,369,2.286,391,1.577,407,3.865,413,1.446,414,1.906,430,1.215,457,1.42,533,1.645,558,0.421,559,3.637,560,0.982,562,1.906,568,1.97,570,4.782,578,0.759,580,0.799,581,2.315,584,2.075,585,1.54,586,1.446,590,2.537,591,1.758,592,1.577,593,1.362,610,1.446,625,1.362,726,1.285,903,1.645,904,2.38,905,1.765,913,0.841,916,2.274,922,2.617,1160,2.075,1167,2.075,1311,2.569,1314,2.286,1316,2.286,1966,3.886,2050,1.906,2055,3.001,2103,2.286,2106,2.569,2107,2.569,2108,4.367,2109,4.367,2110,4.367,2111,4.367,2112,2.569,2113,4.786,2114,3.717,2115,2.569,2116,4.786,2117,3.717,2118,2.569,2119,4.786,2120,3.717,2121,2.075,2122,2.075,2123,2.075,2124,2.075,2125,2.075,2126,2.075,2127,2.075,2128,2.569,2129,4.786,2130,3.717,2131,2.569,2132,2.569,2133,3.717,2134,5.294,2135,3.717,2136,3.717,2137,3.717,2138,3.717,2139,4.367,2140,3.717,2141,2.569,2142,3.717,2143,3.717,2144,2.569,2145,2.569,2146,3.717,2147,3.717,2148,2.569,2149,2.569,2150,3.717,2151,3.717,2152,2.569,2153,2.569,2154,3.717,2155,2.569,2156,2.569,2157,3.717,2158,3.717,2159,2.569,2160,2.569,2161,2.569,2162,2.569,2163,2.569,2164,2.569,2165,4.786,2166,4.786,2167,2.569,2168,4.786,2169,2.569,2170,4.786,2171,2.569,2172,4.786,2173,4.786,2174,2.569,2175,4.786,2176,2.569,2177,4.786,2178,2.569,2207,4.339,2208,4.339,2209,2.999,2210,2.999,2211,2.999,2212,2.999,2213,2.999,2214,2.999,2215,2.999,2216,2.999,2217,2.999,2218,2.999,2219,2.999,2220,2.999,2221,2.999,2222,2.999,2223,2.999,2224,2.999,2225,2.999,2226,2.999,2227,2.999,2228,2.999]],["title/components/ToastComponent.html",[0,0.09,304,0.706]],["body/components/ToastComponent.html",[0,0.144,1,0.781,2,1.052,3,0.327,4,0.187,5,0.868,7,0.868,8,0.868,9,0.14,23,2.631,25,0.781,26,1.722,27,1.389,28,0.662,29,0.748,32,0.915,35,0.781,38,1.169,40,0.236,50,0.794,60,0.59,64,3.923,65,0.562,69,0.842,70,0.02,71,0.511,72,0.401,73,0.794,79,1.342,84,0.794,91,0.898,99,0.556,117,0.52,127,0.626,128,0.522,145,0.248,149,0.219,157,2.902,158,0.163,159,0.187,182,1.008,203,4.611,205,2.815,246,0.868,247,1.169,248,1.169,249,0.868,250,1.414,251,0.868,252,0.868,253,0.781,254,0.868,255,0.781,256,0.868,257,0.781,258,0.868,259,0.781,260,0.868,261,0.781,262,0.868,263,0.868,264,0.781,265,0.824,266,1.169,267,0.781,268,0.701,269,0.781,270,0.868,271,0.781,272,0.868,273,0.74,274,0.824,275,0.868,276,0.781,277,0.868,278,0.781,279,0.868,280,0.868,281,0.781,282,0.868,283,0.781,284,0.868,285,0.824,286,0.824,287,0.868,288,0.781,289,0.868,290,0.781,291,0.868,292,0.781,293,0.824,294,0.868,295,0.781,296,0.868,297,0.781,298,0.824,299,0.868,300,0.824,301,0.868,302,0.781,303,0.868,304,1.205,305,0.868,306,0.868,307,0.014,308,0.014,314,2.197,524,3.94,655,4.726,656,2.902,724,2.902,730,2.902,731,2.902,733,2.902,734,3.017,742,2.633,788,2.419,869,2.631,913,1.068,964,3.261,1416,4.726,1450,3.261,1604,3.261,1683,3.261,1946,4.964,1952,5.311,2229,3.261,2230,5.125,2231,5.125,2232,5.125,2233,3.806,2234,3.806,2235,3.806,2236,5.125,2237,3.806,2238,3.806,2239,5.125,2240,3.806,2241,3.806,2242,3.806,2243,3.806,2244,3.806,2245,3.806,2246,3.806,2247,3.806,2248,3.806,2249,5.125,2250,3.806,2251,3.806,2252,3.806,2253,2.902,2254,3.806,2255,3.806,2256,3.806,2257,5.125,2258,3.806,2259,3.806,2260,3.806,2261,3.806,2262,3.806,2263,3.806,2264,3.806,2265,3.806]],["title/injectables/ToastService.html",[64,2.139,558,0.353]],["body/injectables/ToastService.html",[3,0.337,4,0.246,9,0.184,40,0.311,41,0.894,50,0.949,64,3.605,65,0.641,69,1.006,70,0.02,71,0.505,72,0.45,73,0.949,79,1.326,84,0.949,91,0.949,117,0.592,127,0.826,128,0.689,145,0.262,149,0.215,158,0.215,159,0.246,161,1.15,203,4.878,205,3,304,1.435,307,0.016,308,0.016,358,1.207,477,4.303,558,0.594,560,1.644,578,1.271,734,2.957,1416,5.036,1437,3.892,1453,5.246,2266,4.303,2267,6.124,2268,5.023,2269,6.124,2270,5.023,2271,5.023,2272,5.023,2273,5.023]],["title/interfaces/User.html",[131,1.189,580,0.968]],["body/interfaces/User.html",[3,0.22,4,0.22,9,0.164,40,0.278,41,0.833,70,0.02,71,0.545,72,0.457,91,0.695,117,0.69,128,0.783,131,1.867,145,0.244,149,0.192,158,0.244,159,0.22,161,0.78,167,1.476,182,0.993,307,0.015,308,0.015,328,1.967,358,1.077,380,1.719,391,2.281,413,3.185,430,1.816,457,1.467,558,0.554,578,1.134,580,1.194,582,2.458,588,2.301,590,2.035,591,2.311,592,2.074,593,2.035,595,2.928,625,2.999,904,3.623,913,1.257,922,2.301,1351,3.417,2050,4.197,2094,3.417,2121,4.569,2122,4.569,2123,4.569,2124,4.569,2125,4.569,2126,4.569,2127,4.569,2274,3.417,2275,3.84,2276,3.84,2277,5.375,2278,4.887,2279,4.887,2280,3.84,2281,3.84,2282,3.84]],["title/injectables/UserService.html",[380,1.394,558,0.353]],["body/injectables/UserService.html",[3,0.224,4,0.224,9,0.168,40,0.283,50,0.896,60,0.709,65,0.666,69,1.094,70,0.02,71,0.549,72,0.412,73,0.982,84,1.032,91,0.896,117,0.676,128,0.913,131,1.498,145,0.247,149,0.196,158,0.247,159,0.224,161,1.103,167,1.486,182,1.006,307,0.015,308,0.015,328,2.185,358,1.1,371,3.171,380,2.218,391,2.548,413,2.207,430,1.855,457,1.892,558,0.561,560,1.498,578,1.158,580,1.22,588,2.35,590,3.023,591,2.342,592,2.102,593,2.079,595,2.968,625,2.079,791,3.167,904,2.511,913,1.284,922,3.253,1351,4.83,2050,2.909,2094,3.489,2121,3.167,2122,3.167,2123,3.167,2124,3.167,2125,3.167,2126,3.167,2127,3.167,2274,3.489,2275,4.952,2276,4.952,2277,5.428,2278,4.952,2279,4.952,2280,3.921,2281,3.921,2282,4.952,2283,5.781,2284,4.577,2285,4.577,2286,4.577,2287,4.577,2288,4.577]],["title/injectables/UtilsService.html",[558,0.353,2289,2.77]],["body/injectables/UtilsService.html",[3,0.281,4,0.281,9,0.21,60,1.082,65,0.555,70,0.02,145,0.245,149,0.245,158,0.245,159,0.281,307,0.018,308,0.018,358,1.375,558,0.642,560,1.873,578,1.448,2289,5.044,2290,4.902,2291,5.722]],["title/coverage.html",[2292,4.254]],["body/coverage.html",[0,0.186,1,0.735,9,0.131,10,3.066,11,2.728,12,3.066,15,0.954,27,0.659,29,0.522,35,0.735,63,1.625,64,2.107,70,0.02,72,0.304,99,0.522,131,1.172,154,2.476,188,2.04,242,3.412,253,0.735,255,0.735,257,0.735,259,0.735,261,0.735,264,0.735,267,0.735,268,0.905,269,0.735,271,0.735,273,0.696,276,0.735,278,0.735,281,0.735,283,0.735,285,0.775,288,0.735,290,0.735,292,0.735,295,0.735,297,0.735,300,0.775,302,0.735,304,0.696,307,0.013,308,0.013,309,3.066,321,2.476,335,2.728,352,3.066,357,3.066,368,2.275,380,1.373,389,1.838,390,1.963,391,1.301,393,2.476,479,2.696,486,3.066,500,2.728,558,0.705,559,2.107,561,3.066,562,2.275,563,3.066,568,1.625,580,1.744,581,1.625,583,3.747,589,2.275,614,3.747,670,2.728,673,2.107,798,3.066,901,3.747,911,2.275,912,2.107,916,1.373,941,3.066,942,3.066,1017,2.275,1018,3.747,1019,3.747,1028,2.275,1128,2.476,1129,3.066,1151,3.066,1152,3.066,1153,3.747,1163,3.747,1206,3.747,1207,3.747,1208,3.066,1261,3.066,1262,3.066,1306,3.066,1322,3.066,1323,3.884,1427,2.728,1428,3.747,1429,3.066,1431,3.066,1432,3.066,1451,3.066,1452,3.066,1462,3.066,1658,3.066,1659,2.728,1660,3.066,1687,3.066,1753,3.4,1796,3.066,1797,3.066,1798,3.066,1802,3.066,1934,3.066,1944,3.747,1945,3.747,2103,3.747,2179,3.066,2183,3.066,2194,3.066,2195,3.066,2196,3.066,2199,3.066,2229,3.066,2266,3.066,2274,3.747,2289,2.728,2290,3.066,2292,3.066,2293,3.066,2294,3.579,2295,3.579,2296,3.579,2297,4.211,2298,7.184,2299,3.066,2300,7.266,2301,3.066,2302,3.066,2303,3.066,2304,3.066,2305,3.066,2306,3.579,2307,6.544,2308,3.579,2309,6.043,2310,4.915,2311,6.334,2312,3.579,2313,3.579,2314,5.614,2315,3.579,2316,3.579,2317,3.579,2318,3.579,2319,3.579,2320,3.579,2321,3.579,2322,3.579,2323,3.579,2324,5.614,2325,5.614,2326,3.579,2327,3.066,2328,3.579,2329,4.915,2330,3.579,2331,4.915,2332,3.066,2333,4.915,2334,3.066,2335,3.066,2336,5.426,2337,3.066,2338,3.066,2339,3.066,2340,3.066,2341,3.579]],["title/dependencies.html",[68,3.024,2342,2.596]],["body/dependencies.html",[68,3.736,70,0.02,149,0.231,151,2.963,156,1.863,307,0.017,308,0.017,331,5.839,332,3.765,333,4.627,471,4.627,502,4.627,1027,3.432,1465,3.736,1530,5.48,1558,4.627,2059,3.736,2343,7.468,2344,5.401,2345,5.401,2346,5.401,2347,5.401,2348,5.401,2349,5.401,2350,5.401,2351,5.401,2352,4.627,2353,5.401,2354,5.401,2355,5.401,2356,5.401,2357,5.401,2358,5.401,2359,5.401,2360,5.401,2361,5.401,2362,5.401]],["title/index.html",[40,0.188,2363,3.03,2364,3.03]],["body/index.html",[2,0.724,15,0.94,16,2.33,19,3.022,21,1.701,27,1.025,28,1.045,29,1.008,68,2.44,70,0.02,76,4.578,77,1.811,89,3.022,90,1.701,99,0.951,101,2.689,105,1.512,114,2.247,115,2.21,126,2.038,131,2.132,134,3.854,140,2.242,143,3.022,145,0.151,158,0.151,169,1.867,212,2.44,235,3.367,236,3.056,244,2.865,245,3.854,265,0.764,268,0.649,286,1.3,293,0.764,307,0.013,308,0.013,359,4.14,362,4.773,363,4.834,367,2.689,371,2.669,404,2.689,406,4.169,408,3.367,409,3.71,410,2.076,454,2.689,455,3.093,465,3.022,472,2.44,508,2.44,533,1.935,557,1.429,574,3.022,581,3.032,673,2.076,681,2.44,718,3.022,720,3.022,727,3.022,740,3.022,742,3.367,775,3.056,779,2.689,781,3.022,783,2.076,799,3.854,865,2.44,877,4.578,916,2.137,943,3.022,968,4.169,969,3.022,1068,2.242,1080,2.242,1105,2.44,1146,2.44,1154,3.71,1216,4.169,1356,3.022,1358,3.022,1359,3.022,1376,3.022,1386,4.169,1389,2.689,1395,4.169,1396,3.022,1401,2.689,1404,3.022,1415,4.773,1422,2.242,1436,2.689,1463,3.71,1466,3.022,1469,4.247,1497,4.773,1498,4.169,1543,4.169,1547,2.689,1640,3.022,1677,4.247,1688,3.022,1943,4.169,2016,4.773,2017,4.773,2020,3.022,2039,3.022,2042,3.022,2048,3.022,2055,2.44,2059,2.44,2253,2.689,2293,4.773,2365,3.527,2366,3.527,2367,3.527,2368,3.527,2369,3.527,2370,2.689,2371,4.866,2372,4.866,2373,4.866,2374,6.802,2375,3.527,2376,3.527,2377,3.527,2378,3.527,2379,4.866,2380,3.527,2381,3.527,2382,3.527,2383,3.527,2384,3.527,2385,3.527,2386,4.866,2387,3.527,2388,4.866,2389,3.527,2390,5.571,2391,3.527,2392,3.527,2393,3.527,2394,3.527,2395,3.527,2396,3.527,2397,3.527,2398,4.866,2399,3.527,2400,3.527,2401,4.866,2402,3.527,2403,3.527,2404,3.527,2405,4.866,2406,3.527,2407,3.527,2408,3.527,2409,3.527,2410,3.527,2411,3.022,2412,3.022,2413,3.022,2414,3.527,2415,3.527,2416,3.527,2417,3.527,2418,3.527,2419,3.527,2420,3.527,2421,3.527,2422,3.022,2423,3.527,2424,3.527,2425,4.866,2426,4.866,2427,3.527,2428,3.527,2429,4.866,2430,3.527,2431,3.527,2432,3.527,2433,3.527,2434,3.527,2435,3.527,2436,3.022,2437,3.527,2438,3.527,2439,3.527,2440,3.527,2441,3.527,2442,3.527,2443,4.866,2444,3.527,2445,3.527,2446,3.527,2447,3.527,2448,3.527,2449,3.527,2450,4.866,2451,2.689,2452,4.866,2453,3.527,2454,3.527,2455,3.527,2456,3.527,2457,3.527,2458,3.527,2459,3.527,2460,3.527,2461,3.527,2462,3.022,2463,3.527,2464,3.527,2465,3.527,2466,3.527,2467,3.527,2468,3.527,2469,3.527,2470,3.527,2471,3.527,2472,3.527,2473,3.527,2474,3.527,2475,3.527,2476,3.527,2477,3.527,2478,3.527,2479,3.527,2480,3.527,2481,3.527,2482,3.527,2483,3.527,2484,3.527,2485,3.527,2486,4.866,2487,3.527,2488,3.527,2489,3.527,2490,3.527,2491,3.527,2492,3.527,2493,3.527]],["title/modules.html",[2494,4.254]],["body/modules.html",[70,0.018,307,0.018,308,0.018,2494,5.109]],["title/overview.html",[2370,3.785]],["body/overview.html",[2,1.212,70,0.018,307,0.018,308,0.018,560,1.933,582,3.24,2370,4.502,2451,4.502,2495,5.906,2496,5.06]],["title/properties.html",[41,0.638,2342,2.596]],["body/properties.html",[41,0.866,70,0.019,307,0.018,308,0.018,565,4.524,2497,5.935]],["title/miscellaneous/typealiases.html",[2498,2.096,2499,4.371]],["body/miscellaneous/typealiases.html",[40,0.364,70,0.018,72,0.416,307,0.018,308,0.018,614,4.481,670,5.122,1022,4.481,2498,4.066,2500,5.878,2501,5.878]],["title/miscellaneous/variables.html",[2498,2.096,2502,3.745]],["body/miscellaneous/variables.html",[9,0.115,15,0.833,27,0.961,31,2.267,40,0.194,70,0.021,71,0.597,72,0.4,113,2.03,125,2.384,127,1.145,128,0.956,141,1.078,172,3.489,188,1.928,212,2.163,236,2.452,238,2.384,307,0.012,308,0.012,310,1.841,332,1.841,359,3.619,395,1.715,404,2.384,405,4.342,408,2.163,410,2.632,415,2.679,451,1.987,557,1.267,565,3.408,568,2.736,569,2.163,656,3.978,673,2.632,681,3.093,696,2.163,726,3.102,730,3.408,731,2.384,733,3.408,848,2.679,903,3.969,904,3.969,905,4.26,916,1.715,922,2.295,1064,3.408,1101,2.163,1132,2.163,1136,3.83,1137,2.679,1142,4.471,1144,2.679,1145,2.163,1283,2.679,1288,2.679,1401,2.384,1422,1.987,1491,2.679,1521,2.679,1749,2.679,1753,2.163,1876,2.679,1901,4.471,1944,2.384,1945,3.408,2059,2.163,2253,2.384,2297,2.679,2299,4.471,2301,4.471,2302,2.679,2303,3.83,2304,2.679,2305,3.83,2327,2.679,2332,2.679,2334,2.679,2335,3.83,2336,2.679,2337,3.83,2338,3.83,2339,3.83,2340,3.83,2352,2.679,2411,2.679,2412,2.679,2413,2.679,2422,2.679,2436,2.679,2451,2.384,2462,2.679,2496,2.679,2498,3.093,2502,2.679,2503,6.025,2504,3.127,2505,3.127,2506,3.127,2507,3.127,2508,4.471,2509,3.127,2510,3.127,2511,3.127,2512,3.127,2513,3.127,2514,3.127,2515,3.127,2516,3.127,2517,3.127,2518,3.127,2519,3.127,2520,3.127,2521,3.127,2522,4.471,2523,4.471,2524,3.127,2525,3.127,2526,3.127,2527,3.127,2528,3.127,2529,3.127,2530,3.127,2531,3.127,2532,3.127,2533,3.127,2534,3.127,2535,3.127,2536,3.127,2537,3.127,2538,3.127,2539,3.127,2540,3.127,2541,4.471,2542,3.127,2543,3.127,2544,3.127,2545,3.127,2546,3.127,2547,3.127,2548,3.127,2549,3.127,2550,3.127,2551,3.127,2552,3.127,2553,4.471,2554,3.127,2555,3.127,2556,4.471,2557,3.127,2558,3.127,2559,3.127,2560,3.127,2561,3.127,2562,3.127,2563,4.471,2564,3.127,2565,3.127,2566,4.471,2567,3.127,2568,3.127,2569,3.127,2570,3.127,2571,3.127,2572,3.127,2573,3.127,2574,3.127,2575,3.127,2576,3.127,2577,3.127,2578,3.127,2579,3.127,2580,3.127,2581,3.127,2582,3.127,2583,3.127,2584,3.127,2585,3.127,2586,3.127,2587,3.127,2588,3.127,2589,3.127,2590,3.127,2591,3.127,2592,6.025,2593,3.127,2594,3.127,2595,3.127,2596,3.127,2597,3.127,2598,3.127,2599,3.127,2600,3.127,2601,3.127,2602,3.127,2603,3.127,2604,3.127,2605,3.127,2606,3.127,2607,3.127,2608,3.127]]],"invertedIndex":[["",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":855,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":2497,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":2362,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2013,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.3s",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2300,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2310,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2317,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2309,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2312,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2315,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":2321,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2307,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2314,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2325,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2311,"title":{},"body":{"coverage.html":{}}}],["009688",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":863,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1290,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1289,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":853,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":859,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":2355,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["1000",{"_index":750,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["100px",{"_index":1793,"title":{},"body":{"components/HomeComponent.html":{}}}],["10rem",{"_index":970,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":848,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["111",{"_index":2024,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":2296,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":2496,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":2354,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2306,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1283,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":2318,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":2343,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":2348,"title":{},"body":{"dependencies.html":{}}}],["19/19",{"_index":2313,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1422,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1034,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":2360,"title":{},"body":{"dependencies.html":{}}}],["2025",{"_index":1317,"title":{},"body":{"components/FooterComponent.html":{}}}],["2196f3",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":2308,"title":{},"body":{"coverage.html":{}}}],["23px",{"_index":1795,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":752,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["25",{"_index":2495,"title":{},"body":{"overview.html":{}}}],["25.8.15",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29",{"_index":1346,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["29/29",{"_index":2323,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2422,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":732,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["3000",{"_index":1450,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["320kbps')?.url",{"_index":1851,"title":{},"body":{"components/MusicComponent.html":{}}}],["350",{"_index":1518,"title":{},"body":{"components/GraphsComponent.html":{}}}],["3f51b5",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":2253,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.18.2",{"_index":2353,"title":{},"body":{"dependencies.html":{}}}],["4.4.9",{"_index":2351,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2349,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2324,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":764,"title":{},"body":{"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["4caf50",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":2436,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{}}}],["500",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/MusicComponent.html":{},"components/ToastComponent.html":{}}}],["59",{"_index":1204,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":2451,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["60",{"_index":751,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["607d8b",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2358,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1288,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2357,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":728,"title":{},"body":{"components/BudgetComponent.html":{}}}],["800",{"_index":762,"title":{},"body":{"components/BudgetComponent.html":{}}}],["8bc34a",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["999",{"_index":1205,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":1644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.expense_count",{"_index":928,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.name.localecompare(b.name",{"_index":929,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.time.split(\":\").map(number",{"_index":1617,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ability",{"_index":2448,"title":{},"body":{"index.html":{}}}],["acc",{"_index":884,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accesses",{"_index":2049,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":1491,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1738,"title":{},"body":{"components/HomeComponent.html":{}}}],["accurate",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["activation",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["activepath",{"_index":2203,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual_component",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":934,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["add(data",{"_index":597,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["added",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":908,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{}}}],["adds",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["advice",{"_index":1402,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["afterviewinit",{"_index":1946,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ahours",{"_index":1614,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":310,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":315,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":313,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":253,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasyazt2myolb9grwra6nran8ndfsvmmwzz04",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["alias",{"_index":2316,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2500,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1603,"title":{},"body":{"components/GraphsComponent.html":{}}}],["all.filter(c",{"_index":939,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":613,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":608,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":601,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":936,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allowed",{"_index":782,"title":{},"body":{"components/BudgetComponent.html":{}}}],["allowed/day",{"_index":2445,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":2381,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2414,"title":{},"body":{"index.html":{}}}],["amber",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":1615,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["amounts",{"_index":1583,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amt",{"_index":1284,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":353,"title":{},"body":{"components/AnalysisComponent.html":{},"injectables/GeminiApiService.html":{}}}],["analysis'},{'name",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["analysis.component.css",{"_index":355,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysis.component.html",{"_index":354,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysiscomponent",{"_index":255,"title":{"components/AnalysisComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["analyze",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":1340,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["angular",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":330,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["angular/compiler",{"_index":2344,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":331,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2346,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":2347,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":2337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":2261,"title":{},"body":{"components/ToastComponent.html":{}}}],["animatedbudgetprogress",{"_index":617,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatepercentage",{"_index":633,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animation",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["animations",{"_index":1525,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":1380,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":1363,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":1983,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2014,"title":{},"body":{"components/PieChartComponent.html":{}}}],["apexaxischartseries",{"_index":1528,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":674,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":1530,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":1539,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":1541,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexnonaxischartseries",{"_index":672,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexplotoptions",{"_index":677,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexstroke",{"_index":1544,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":1549,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":1551,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":1553,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":1531,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":1536,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":336,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1323,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:12",{"_index":1328,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2046,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:16",{"_index":1336,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:35",{"_index":2057,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:40",{"_index":1334,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:58",{"_index":1332,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:6",{"_index":1430,"title":{},"body":{"injectables/GetApiService.html":{}}}],["api.service.ts:66",{"_index":2051,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":335,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/get/get",{"_index":1429,"title":{},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2064,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":1844,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1019,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:16",{"_index":2102,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:17",{"_index":2101,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:18",{"_index":2097,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:22",{"_index":2099,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:32",{"_index":2100,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:94",{"_index":2098,"title":{},"body":{"injectables/SaavnService.html":{}}}],["apiurl",{"_index":1032,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["app_version",{"_index":2127,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":257,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":1396,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["application",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1116,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["applicationconfig",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["appropriate",{"_index":1141,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{}}}],["appversion",{"_index":1310,"title":{},"body":{"components/FooterComponent.html":{}}}],["appversionservice",{"_index":559,"title":{"injectables/AppVersionService.html":{}},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["apr",{"_index":1592,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":1649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":1464,"title":{},"body":{"components/GraphsComponent.html":{}}}],["arguments",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":1582,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":1641,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":1630,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name",{"_index":1925,"title":{},"body":{"components/MusicComponent.html":{}}}],["artist.name).join",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(\",\")[0].trim",{"_index":1888,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":1616,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":1406,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":1419,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":1377,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assist",{"_index":1414,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":350,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["async",{"_index":318,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["audio",{"_index":1806,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":1595,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":1652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["available",{"_index":2055,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["average",{"_index":745,"title":{},"body":{"components/BudgetComponent.html":{}}}],["averages",{"_index":1369,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":781,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["avgallowedperday",{"_index":618,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgallowedperday.tofixed(2",{"_index":784,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday",{"_index":619,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday.tofixed(2",{"_index":785,"title":{},"body":{"components/BudgetComponent.html":{}}}],["await",{"_index":344,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["axis",{"_index":1534,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":926,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":927,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":1621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["backend",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1523,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{}}}],["backgroundcolor",{"_index":2009,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":1998,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":1777,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":1708,"title":{},"body":{"components/HomeComponent.html":{}}}],["backticks",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["backup",{"_index":2062,"title":{},"body":{"injectables/PostApiService.html":{}}}],["backup_frequency",{"_index":2121,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bar",{"_index":2020,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1134,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{}}}],["based",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["baseinstructions",{"_index":1353,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1030,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["before",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2034,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":1397,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["behaviorsubject",{"_index":2192,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2190,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1415,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["between",{"_index":742,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":655,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":1618,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":2243,"title":{},"body":{"components/ToastComponent.html":{}}}],["blockkey",{"_index":1695,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":1704,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":1387,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":733,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":1619,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1117,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["boolean",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":2335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1787,"title":{},"body":{"components/HomeComponent.html":{}}}],["bordercolor",{"_index":2003,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2010,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":2022,"title":{},"body":{"components/PieChartComponent.html":{}}}],["boxes",{"_index":2444,"title":{},"body":{"index.html":{}}}],["browser",{"_index":332,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":2338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browser’s",{"_index":2473,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":1620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["budget",{"_index":581,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":260,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget.component.css",{"_index":616,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget.component.html",{"_index":615,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget_id",{"_index":584,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcolorclass",{"_index":620,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetcomponent",{"_index":259,"title":{"components/BudgetComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetform",{"_index":621,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetkey",{"_index":2110,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetmessage",{"_index":622,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetprogress",{"_index":623,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgets",{"_index":624,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetschema",{"_index":2130,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":589,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["build",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["bullet",{"_index":1390,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1678,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["c.category_id",{"_index":937,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculatebudgetprogress",{"_index":634,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculatetotalexpenses",{"_index":810,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":814,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":799,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":262,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":801,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":800,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":261,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":802,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":803,"title":{},"body":{"components/CalendarComponent.html":{}}}],["callbacks",{"_index":2025,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["cancel",{"_index":789,"title":{},"body":{"components/BudgetComponent.html":{}}}],["canvasref",{"_index":1949,"title":{},"body":{"components/PieChartComponent.html":{}}}],["care",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1178,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":1982,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1009,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1008,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1183,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1182,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1181,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["categories",{"_index":916,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1179,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":99,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1168,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":1000,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1164,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1165,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1166,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{}}}],["categorycolors",{"_index":1950,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":935,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2108,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":1951,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":948,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2114,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":958,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":912,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["categorytotals",{"_index":1989,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":1993,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":955,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":1991,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2001,"title":{},"body":{"components/PieChartComponent.html":{}}}],["center",{"_index":1604,"title":{},"body":{"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["certain",{"_index":1710,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1145,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":1512,"title":{},"body":{"components/GraphsComponent.html":{}}}],["changemonth",{"_index":811,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":816,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['currentdate",{"_index":1563,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":1562,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["chart",{"_index":673,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":294,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":1754,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":1947,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":1948,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":1945,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:114",{"_index":1959,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:137",{"_index":1964,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:15",{"_index":1974,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:16",{"_index":1970,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1968,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:18",{"_index":1973,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:19",{"_index":1971,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:20",{"_index":1969,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:21",{"_index":1972,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1967,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1955,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1954,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1962,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:48",{"_index":1960,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:52",{"_index":1961,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:58",{"_index":1956,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:72",{"_index":1958,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:95",{"_index":1957,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2350,"title":{},"body":{"dependencies.html":{}}}],["chart/pie",{"_index":1753,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":1473,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartoptions",{"_index":670,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["charts",{"_index":1465,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":1474,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":1475,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":1476,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":1425,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1017,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["chosen",{"_index":2417,"title":{},"body":{"index.html":{}}}],["class",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["classes",{"_index":868,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleanedsong",{"_index":1873,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace",{"_index":1879,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace(/^```json",{"_index":1875,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith",{"_index":1878,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith(\"```json",{"_index":1874,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanup",{"_index":1904,"title":{},"body":{"components/MusicComponent.html":{}}}],["clearinterval(interval",{"_index":771,"title":{},"body":{"components/BudgetComponent.html":{}}}],["clearinterval(this.interval",{"_index":1860,"title":{},"body":{"components/MusicComponent.html":{}}}],["cli",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["clicked",{"_index":1679,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clickedinside",{"_index":1681,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":977,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["close",{"_index":979,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["closemodal",{"_index":635,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1386,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["color",{"_index":726,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":1784,"title":{},"body":{"components/HomeComponent.html":{}}}],["combining",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["complete",{"_index":2435,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["component/category",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/graphs/graphs.component",{"_index":1751,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/pie",{"_index":1752,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["concatenating",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["config",{"_index":2299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1128,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["configuration",{"_index":569,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm(\"are",{"_index":772,"title":{},"body":{"components/BudgetComponent.html":{}}}],["console.error(\"chart.js",{"_index":1987,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2035,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":875,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('error",{"_index":888,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["console.error('failed",{"_index":1883,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.error('gemini",{"_index":1344,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2136,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('submit",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["console.log('backup",{"_index":2089,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('posting",{"_index":2077,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('user",{"_index":2083,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn('incomplete",{"_index":1889,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('no",{"_index":1870,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2092,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":938,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["constructor(appversionservice",{"_index":1311,"title":{},"body":{"components/FooterComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(categoryservice",{"_index":960,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(expenseservice",{"_index":640,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["constructor(fb",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":320,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloaderservice",{"_index":1438,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1327,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":913,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":1816,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":1668,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":791,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":2233,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructs",{"_index":1490,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":1683,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1511,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/PostApiService.html":{}}}],["content",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["contents",{"_index":1118,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["context",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2028,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2027,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2026,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":1418,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":2491,"title":{},"body":{"index.html":{}}}],["control",{"_index":2450,"title":{},"body":{"index.html":{}}}],["controls",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["copyright",{"_index":1833,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":2292,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createform",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["createnoderequesthandler(app",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{}}}],["crypto.randomuuid",{"_index":600,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":2388,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":2004,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":625,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":1487,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["currentmonth",{"_index":804,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":1571,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":1576,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":2277,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":2279,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1807,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":1931,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":1930,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentstep",{"_index":766,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentstep).tofixed(1",{"_index":769,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentyear",{"_index":805,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":1635,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":1636,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1785,"title":{},"body":{"components/HomeComponent.html":{}}}],["curve",{"_index":1545,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":265,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["customization",{"_index":2452,"title":{},"body":{"index.html":{}}}],["custommodalcomponent",{"_index":264,"title":{"components/CustomModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["cyan",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.quality",{"_index":1850,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":1497,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["dark",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["dark:text",{"_index":2258,"title":{},"body":{"components/ToastComponent.html":{}}}],["darkencolor",{"_index":1265,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1272,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":1688,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["data.album?.name",{"_index":1922,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":1923,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":1921,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":1917,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":1918,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":1920,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.name",{"_index":1914,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":1919,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":1915,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":1916,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2106,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":1420,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":1477,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2008,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2011,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2012,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2015,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["date().getfullyear",{"_index":832,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":830,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(`${a.date}t${a.time",{"_index":1185,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1187,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":713,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1197,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1200,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2073,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":1761,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(this.latestbudget.fromdate",{"_index":709,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(this.latestbudget.todate",{"_index":710,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(todate",{"_index":1198,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(value",{"_index":1768,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":852,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getfullyear",{"_index":1775,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":1774,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.tolocaledatestring",{"_index":1280,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["datea",{"_index":1184,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1189,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1186,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1188,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":2424,"title":{},"body":{"index.html":{}}}],["datestr",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":783,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":892,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":1606,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":1568,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":1581,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":1579,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":1580,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days",{"_index":865,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":1584,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[value",{"_index":1587,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":854,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":1717,"title":{},"body":{"components/HomeComponent.html":{}}}],["ddd",{"_index":2033,"title":{},"body":{"components/PieChartComponent.html":{}}}],["dec",{"_index":1599,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":1656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["declare",{"_index":1975,"title":{},"body":{"components/PieChartComponent.html":{}}}],["decorators",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{}}}],["deep",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defaultschema",{"_index":2134,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":2154,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":1691,"title":{},"body":{"components/HomeComponent.html":{}}}],["define",{"_index":2437,"title":{},"body":{"index.html":{}}}],["defined",{"_index":65,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["delete",{"_index":775,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":1778,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":612,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":933,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1195,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deletebudget",{"_index":636,"title":{},"body":{"components/BudgetComponent.html":{}}}],["deleted",{"_index":778,"title":{},"body":{"components/BudgetComponent.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":1726,"title":{},"body":{"components/HomeComponent.html":{}}}],["deploying",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{}}}],["design",{"_index":2463,"title":{},"body":{"index.html":{}}}],["designed",{"_index":2373,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":2471,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":2486,"title":{},"body":{"index.html":{}}}],["details",{"_index":268,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["details(name",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["detect",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["detection",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["determines",{"_index":1496,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dev",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":2490,"title":{},"body":{"index.html":{}}}],["development",{"_index":1142,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1137,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":2418,"title":{},"body":{"index.html":{}}}],["devices",{"_index":2464,"title":{},"body":{"index.html":{}}}],["different",{"_index":2410,"title":{},"body":{"index.html":{}}}],["differentiation",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":305,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disables",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["displayedpercentage",{"_index":626,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displayedpercentage.tofixed(1",{"_index":780,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displaying",{"_index":2428,"title":{},"body":{"index.html":{}}}],["displays",{"_index":1463,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["distinct",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":2409,"title":{},"body":{"index.html":{}}}],["document.createelement('div",{"_index":2244,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":2240,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":959,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":974,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2293,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":323,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":1995,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":2455,"title":{},"body":{"index.html":{}}}],["drinks",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":263,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":946,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":947,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":942,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":986,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":975,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":973,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":971,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":966,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":963,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":989,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":992,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":961,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":982,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":980,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":987,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":956,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":761,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["during",{"_index":1901,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2345,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":874,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1180,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["each",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ease",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["easily",{"_index":2375,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1216,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["editform",{"_index":1209,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["education",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":1842,"title":{},"body":{"components/MusicComponent.html":{}}}],["elapseddays",{"_index":754,"title":{},"body":{"components/BudgetComponent.html":{}}}],["element",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["email",{"_index":2122,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":944,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["emojis",{"_index":1385,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":2376,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1521,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2439,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":2065,"title":{},"body":{"injectables/PostApiService.html":{}}}],["endpoints",{"_index":1147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["enhances",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["ensuring",{"_index":2474,"title":{},"body":{"index.html":{}}}],["entertainment",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entries",{"_index":2415,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2434,"title":{},"body":{"index.html":{}}}],["environment",{"_index":568,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":575,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["environment.developmentenvironment",{"_index":1143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":577,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":887,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["etc",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["event",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":1684,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":1004,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":1682,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":1763,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":972,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exceeded",{"_index":736,"title":{},"body":{"components/BudgetComponent.html":{}}}],["exists",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["exp",{"_index":883,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":894,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.category_icon",{"_index":1294,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":895,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.date",{"_index":1350,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["exp.isextraspending",{"_index":1352,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["exp.location",{"_index":899,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.note",{"_index":898,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.payment_mode",{"_index":900,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.time",{"_index":897,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.component",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:116",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:135",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:156",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:192",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:201",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":138,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:62",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:72",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:89",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.service",{"_index":906,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":902,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1167,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expensecountmap",{"_index":918,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":924,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedetailsmodalcomponent",{"_index":267,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2109,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":269,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":287,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":2320,"title":{},"body":{"coverage.html":{}}}],["expenses.filter((exp",{"_index":712,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expenses.filter(exp",{"_index":1612,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":1572,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1176,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":919,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1207,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2117,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1268,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":63,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["expensesinrange",{"_index":711,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expensessearch",{"_index":2182,"title":{},"body":{"components/SearchComponent.html":{}}}],["experience",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":2423,"title":{},"body":{"index.html":{}}}],["export",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["express",{"_index":2352,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["extract",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["exwise",{"_index":1318,"title":{},"body":{"components/FooterComponent.html":{}}}],["f44336",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fade",{"_index":2262,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["fails",{"_index":1886,"title":{},"body":{"components/MusicComponent.html":{}}}],["false",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fast",{"_index":2476,"title":{},"body":{"index.html":{}}}],["fb",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["features",{"_index":2398,"title":{},"body":{"index.html":{}}}],["features/add",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["features/analysis/analysis.component",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["features/search/search.component",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":1590,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":1647,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":876,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fetching",{"_index":1126,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff4081",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2023,"title":{},"body":{"components/PieChartComponent.html":{}}}],["field",{"_index":909,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fieldname",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fills",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["filter(loc",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredlocationsuggestions",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2143,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":1494,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["finalize",{"_index":1025,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":1902,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":2383,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1356,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2371,"title":{},"body":{"index.html":{}}}],["firstday",{"_index":851,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":1896,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1026,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1121,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fits",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["flag",{"_index":1749,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1737,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1035,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":2246,"title":{},"body":{"components/ToastComponent.html":{}}}],["flexibility",{"_index":2449,"title":{},"body":{"index.html":{}}}],["flow",{"_index":2481,"title":{},"body":{"index.html":{}}}],["focused",{"_index":1413,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["food",{"_index":2411,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1307,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":272,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1309,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1308,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":271,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":1744,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":1692,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":1522,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["format",{"_index":1381,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{}}}],["formatdateforinput",{"_index":1696,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":1712,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":1697,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":1720,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1714,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatted",{"_index":1719,"title":{},"body":{"components/HomeComponent.html":{}}}],["formattedexpense",{"_index":1175,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":1586,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":1808,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":1933,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":1932,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":1818,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":1929,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formgroup",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formsmodule",{"_index":311,"title":{},"body":{"components/AiComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["forwards",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":893,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{}}}],["framework",{"_index":2387,"title":{},"body":{"index.html":{}}}],["fri",{"_index":844,"title":{},"body":{"components/CalendarComponent.html":{}}}],["friendly",{"_index":1376,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1202,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":585,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["fromdate.gettime",{"_index":749,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":1345,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":2386,"title":{},"body":{"index.html":{}}}],["full",{"_index":2251,"title":{},"body":{"components/ToastComponent.html":{}}}],["fullnames",{"_index":1645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":1657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["function",{"_index":1160,"title":{},"body":{"components/CustomModalComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["functionality",{"_index":2399,"title":{},"body":{"index.html":{}}}],["functions",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":2431,"title":{},"body":{"index.html":{}}}],["g",{"_index":1287,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gathers",{"_index":2052,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":325,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":321,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generated",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["generateexpenseanalysisprompt",{"_index":1324,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1329,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generates",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["generateuserid",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["getall",{"_index":594,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":2166,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2165,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2170,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiservice",{"_index":1427,"title":{"injectables/GetApiService.html":{}},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["getapiurl",{"_index":1138,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2175,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1295,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1193,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":2172,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":1698,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2173,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1266,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1275,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1127,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlast30daysexpenses",{"_index":1325,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1169,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getresponse",{"_index":1326,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":1335,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":1809,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":1821,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":914,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getting",{"_index":2363,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":2168,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2044,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2177,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":2283,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":2282,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":571,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["gifts",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["global",{"_index":274,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloadercomponent",{"_index":273,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":389,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["go",{"_index":2384,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":1699,"title":{},"body":{"components/HomeComponent.html":{}}}],["goprevious",{"_index":1700,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":2405,"title":{},"body":{"index.html":{}}}],["graphs",{"_index":1469,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":1471,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":1472,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":276,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":870,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":656,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":2402,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":1372,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1478,"title":{},"body":{"components/GraphsComponent.html":{}}}],["groceries",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grouped",{"_index":1503,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":891,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":965,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["hamburger",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":278,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":2037,"title":{},"body":{"injectables/PostApiService.html":{}}}],["handler",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["headers",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["health",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":967,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["hello",{"_index":1374,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":1359,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":2132,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpful",{"_index":1355,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":1404,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hi",{"_index":1373,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hiddeninput",{"_index":1790,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":1794,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1436,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"index.html":{}}}],["history",{"_index":1029,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["home",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":282,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":1689,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1690,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":281,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["hostlistener",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":984,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":1624,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2043,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":1628,"title":{},"body":{"components/GraphsComponent.html":{}}}],["html",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["htmlelement",{"_index":1005,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["htmlinputelement",{"_index":1730,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1036,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["http://localhost:8000",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpclient",{"_index":1023,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["httpclientmodule",{"_index":312,"title":{},"body":{"components/AiComponent.html":{}}}],["httpheaders",{"_index":1024,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1033,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1031,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1383,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":1403,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":903,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":284,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["icon.component.css",{"_index":1800,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.html",{"_index":1799,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.ts",{"_index":1798,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:10",{"_index":1801,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon/info",{"_index":1797,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["id",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2294,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1366,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["immediately",{"_index":2420,"title":{},"body":{"index.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["include",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["including",{"_index":1535,"title":{},"body":{"components/GraphsComponent.html":{}}}],["incorrect",{"_index":2460,"title":{},"body":{"index.html":{}}}],["increment",{"_index":765,"title":{},"body":{"components/BudgetComponent.html":{}}}],["independent",{"_index":2393,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2104,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicating",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["indicator",{"_index":1782,"title":{},"body":{"components/HomeComponent.html":{}}}],["indigo",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["infoiconcomponent",{"_index":283,"title":{"components/InfoIconComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["informative",{"_index":2442,"title":{},"body":{"index.html":{}}}],["init",{"_index":1742,"title":{},"body":{"components/HomeComponent.html":{}}}],["initform",{"_index":1210,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initialization",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["initializes",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject(platform_id",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":558,"title":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":560,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["injected",{"_index":567,"title":{},"body":{"injectables/AppVersionService.html":{},"components/GraphsComponent.html":{}}}],["input",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{},"index.html":{}}}],["input[type=\"date",{"_index":1780,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":1783,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":1718,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":1722,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":1729,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":1765,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":954,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":746,"title":{},"body":{"components/BudgetComponent.html":{}}}],["instance",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{}}}],["instanceof",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["intended",{"_index":2039,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interactive",{"_index":2404,"title":{},"body":{"index.html":{}}}],["interface",{"_index":580,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":582,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intersect",{"_index":1555,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":767,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["intuitive",{"_index":2465,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":904,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_backup",{"_index":2123,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isbrowser",{"_index":590,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":949,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":872,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":627,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":628,"title":{},"body":{"components/BudgetComponent.html":{}}}],["iseditopen",{"_index":1214,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ismenuopen",{"_index":1663,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":1773,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":1769,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":1772,"title":{},"body":{"components/HomeComponent.html":{}}}],["isplatformbrowser",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":1435,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["item",{"_index":610,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"injectables/StorageService.html":{}}}],["item'},{'name",{"_index":299,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":1578,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":609,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":932,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":2197,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2196,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:10",{"_index":2198,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":1573,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1192,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.note?.trim",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":1627,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2145,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":2195,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2153,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1199,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1201,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":2247,"title":{},"body":{"components/ToastComponent.html":{}}}],["jan",{"_index":1589,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":1646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["job",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["json",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["json.parse(cleanedsong",{"_index":1881,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2138,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2167,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2142,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2171,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2169,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":604,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(currentsettings",{"_index":2281,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(last15daysexpenses",{"_index":1421,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2164,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":940,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2156,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsonerror",{"_index":1882,"title":{},"body":{"components/MusicComponent.html":{}}}],["jul",{"_index":1594,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":1651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1593,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":1650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":2248,"title":{},"body":{"components/ToastComponent.html":{}}}],["keep",{"_index":1412,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["key",{"_index":922,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":1711,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":1705,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":1709,"title":{},"body":{"components/HomeComponent.html":{}}}],["label",{"_index":867,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["labels",{"_index":675,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["language",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["laptop",{"_index":2470,"title":{},"body":{"index.html":{}}}],["last",{"_index":1361,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["last15daysexpenses",{"_index":1330,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2050,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2072,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2076,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2070,"title":{},"body":{"injectables/PostApiService.html":{}}}],["latest",{"_index":2461,"title":{},"body":{"index.html":{}}}],["latestbudget",{"_index":629,"title":{},"body":{"components/BudgetComponent.html":{}}}],["launch",{"_index":2401,"title":{},"body":{"index.html":{}}}],["legend",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["let’s",{"_index":1411,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":2492,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":2385,"title":{},"body":{"index.html":{}}}],["lg",{"_index":2256,"title":{},"body":{"components/ToastComponent.html":{}}}],["lifecycle",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["light",{"_index":681,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":2392,"title":{},"body":{"index.html":{}}}],["limit",{"_index":741,"title":{},"body":{"components/BudgetComponent.html":{}}}],["line",{"_index":1547,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["list",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1264,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1263,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1262,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1271,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:14",{"_index":1270,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:15",{"_index":1269,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:23",{"_index":1278,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:27",{"_index":1276,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:32",{"_index":1274,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1261,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listener",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["listening",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":976,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["listexpensescomponent",{"_index":285,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":2421,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1022,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":1136,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadbudgets",{"_index":637,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadcategories",{"_index":950,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":1481,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":1482,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":1500,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":1741,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{}}}],["loader'},{'name",{"_index":275,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":1434,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":1433,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":1432,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:12",{"_index":1443,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:13",{"_index":1439,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":1442,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1440,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{}}}],["loader.service.ts",{"_index":1452,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":1456,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:15",{"_index":1457,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:19",{"_index":1454,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1458,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["loaderservice",{"_index":1447,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loading",{"_index":889,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loadmonthdata",{"_index":1483,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":1504,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["loadsomething",{"_index":1448,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":1484,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":1506,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2155,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":603,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":930,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1190,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":2280,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2163,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":1338,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2068,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2069,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["locationsuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":2487,"title":{},"body":{"index.html":{}}}],["logic",{"_index":727,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["long",{"_index":862,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":890,"title":{},"body":{"components/CalendarComponent.html":{}}}],["main",{"_index":1527,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["mainartist",{"_index":1887,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":1893,"title":{},"body":{"components/MusicComponent.html":{}}}],["making",{"_index":2391,"title":{},"body":{"index.html":{}}}],["manage",{"_index":962,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["management",{"_index":2372,"title":{},"body":{"index.html":{}}}],["manager",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["managing",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":921,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{}}}],["map((artist",{"_index":1924,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":923,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1177,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":1574,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":920,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["mar",{"_index":1591,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":1648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["mark",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["marked",{"_index":333,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":345,"title":{},"body":{"components/AiComponent.html":{}}}],["match",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matching",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil((todate.gettime",{"_index":748,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.floor(seconds",{"_index":1907,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":1293,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1292,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(math.ceil((today.gettime",{"_index":755,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totalbudget",{"_index":719,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totaldays",{"_index":757,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.min((spent",{"_index":717,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.round(2.55",{"_index":1285,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.round(data.amount",{"_index":602,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":611,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":964,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ToastComponent.html":{}}}],["maximumfractiondigits",{"_index":2030,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":280,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":1941,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":1661,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":1662,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":1660,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:13",{"_index":1669,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":1675,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1674,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1670,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":1672,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":1659,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":734,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":1417,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1906,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimumfractiondigits",{"_index":2029,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minute",{"_index":1625,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":1909,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":2498,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1890,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["mm",{"_index":1716,"title":{},"body":{"components/HomeComponent.html":{}}}],["mobile",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["modal",{"_index":1154,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["modal'},{'name",{"_index":266,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1155,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1153,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:10",{"_index":1159,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:11",{"_index":1162,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:12",{"_index":1161,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:14",{"_index":1220,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:15",{"_index":1218,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:16",{"_index":1219,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:17",{"_index":1221,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1222,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1223,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:20",{"_index":1231,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1217,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1226,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1225,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1227,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:48",{"_index":1230,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:56",{"_index":1229,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:67",{"_index":1224,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:71",{"_index":1228,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/custom",{"_index":1152,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["modal/expense",{"_index":1208,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":806,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modalid",{"_index":1156,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modaltitle",{"_index":807,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modelreply",{"_index":1123,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":2389,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2494,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mon",{"_index":840,"title":{},"body":{"components/CalendarComponent.html":{}}}],["money",{"_index":2366,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":2489,"title":{},"body":{"index.html":{}}}],["month",{"_index":824,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":861,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":2482,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":1467,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":1634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":1643,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":1639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":1638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":877,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["monthname",{"_index":1600,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":1588,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":1637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":1601,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":1640,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":1642,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthstr",{"_index":857,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{}}}],["mouse",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["mouseevent",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["msg",{"_index":346,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":343,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":340,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":2441,"title":{},"body":{"index.html":{}}}],["music",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["music'},{'name",{"_index":289,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":1805,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":1804,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":288,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1171,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1172,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["navbar",{"_index":1935,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":1936,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1937,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":290,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2429,"title":{},"body":{"index.html":{}}}],["navigateandclose",{"_index":1665,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":1671,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":1725,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigationend",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":2475,"title":{},"body":{"index.html":{}}}],["negative",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":606,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["next",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["nextsong",{"_index":1867,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":1869,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":1558,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":2356,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1952,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":1470,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngonchanges",{"_index":1485,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":1508,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1810,"title":{},"body":{"components/MusicComponent.html":{}}}],["ngoninit",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["none",{"_index":1788,"title":{},"body":{"components/HomeComponent.html":{}}}],["note",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notification",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notifications",{"_index":2124,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nov",{"_index":1598,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":1655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2075,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2087,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1281,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":587,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{}}}],["number(item.amount",{"_index":873,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":1911,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":395,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":1996,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":1999,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2147,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.values(categorytotals",{"_index":1997,"title":{},"body":{"components/PieChartComponent.html":{}}}],["oct",{"_index":1597,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":1654,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offset",{"_index":818,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":598,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2042,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["onchanges",{"_index":1468,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":1666,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclick(event",{"_index":1673,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclose",{"_index":1157,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["ondelete",{"_index":1211,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1803,"title":{},"body":{"components/MusicComponent.html":{}}}],["ondocumentclick",{"_index":951,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":983,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["oninputchange",{"_index":1701,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchange(event",{"_index":1728,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":1702,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":1733,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["onseek",{"_index":1811,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":1824,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":1267,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1277,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":1812,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["opacity",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{}}}],["open",{"_index":2426,"title":{},"body":{"index.html":{}}}],["openeditmodal",{"_index":638,"title":{},"body":{"components/BudgetComponent.html":{}}}],["openmodal",{"_index":639,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":821,"title":{},"body":{"components/CalendarComponent.html":{}}}],["operations",{"_index":2478,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":2467,"title":{},"body":{"index.html":{}}}],["optional",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":2016,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["orange",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":2457,"title":{},"body":{"index.html":{}}}],["others",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["outline",{"_index":1789,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":993,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["outputs",{"_index":957,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["outside",{"_index":978,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":740,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["overlay",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":2370,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":2252,"title":{},"body":{"components/ToastComponent.html":{}}}],["p.text).join('\\n\\n",{"_index":1125,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":2342,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":1170,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1174,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1173,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["page",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["paragraph",{"_index":1393,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{}}}],["parameters",{"_index":69,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":945,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["parse",{"_index":1884,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":1767,"title":{},"body":{"components/HomeComponent.html":{}}}],["parsefloat(exp.amount",{"_index":715,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parsefloat(this.latestbudget.amount.tostring",{"_index":708,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parseint(color.replace",{"_index":1282,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["parseint(exp.amount",{"_index":885,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":1577,"title":{},"body":{"components/GraphsComponent.html":{}}}],["parsing",{"_index":1885,"title":{},"body":{"components/MusicComponent.html":{}}}],["part",{"_index":910,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":607,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["parts",{"_index":1020,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1124,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2060,"title":{},"body":{"injectables/PostApiService.html":{}}}],["past",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2141,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":2144,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patterns",{"_index":1368,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["payment",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["payment_mode",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["per",{"_index":2485,"title":{},"body":{"index.html":{}}}],["percent",{"_index":1273,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":716,"title":{},"body":{"components/BudgetComponent.html":{}}}],["perform",{"_index":2047,"title":{},"body":{"injectables/PostApiService.html":{}}}],["persistent",{"_index":2397,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1401,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":2454,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1331,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":1732,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["piechartcomponent",{"_index":292,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["platform_id",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["platformid",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":1891,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":1832,"title":{},"body":{"components/MusicComponent.html":{}}}],["playing",{"_index":2368,"title":{},"body":{"index.html":{}}}],["playsong",{"_index":1813,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":1827,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":1405,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["plotoptions",{"_index":676,"title":{},"body":{"components/BudgetComponent.html":{}}}],["plugins",{"_index":2018,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1786,"title":{},"body":{"components/HomeComponent.html":{}}}],["points",{"_index":1391,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":1354,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":1370,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":1400,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["popup",{"_index":2427,"title":{},"body":{"index.html":{}}}],["position",{"_index":2019,"title":{},"body":{"components/PieChartComponent.html":{}}}],["positive",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1144,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":393,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2084,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2088,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2058,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2045,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predict",{"_index":1360,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":1364,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["prevents",{"_index":1707,"title":{},"body":{"components/HomeComponent.html":{}}}],["previous",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["prevmonthdays",{"_index":856,"title":{},"body":{"components/CalendarComponent.html":{}}}],["privacy",{"_index":2480,"title":{},"body":{"index.html":{}}}],["private",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["process",{"_index":1409,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["processes",{"_index":1502,"title":{},"body":{"components/GraphsComponent.html":{}}}],["production",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":779,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1337,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompt",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":1424,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":1988,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":564,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1362,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["providedin",{"_index":578,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["providehttpclient",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":2048,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1131,"title":{},"body":{"injectables/ConfigService.html":{}}}],["public",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":1358,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["pwa",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["q",{"_index":1845,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1423,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["question",{"_index":1378,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":1410,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["r",{"_index":1286,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["random",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":1466,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["raw",{"_index":342,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["read/write",{"_index":2477,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":570,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["received",{"_index":1871,"title":{},"body":{"components/MusicComponent.html":{}}}],["recent",{"_index":1408,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommendation",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":2275,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["red",{"_index":730,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":991,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["reflected",{"_index":2419,"title":{},"body":{"index.html":{}}}],["register",{"_index":1453,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":1455,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":2267,"title":{},"body":{"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1407,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["release",{"_index":2462,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2053,"title":{},"body":{"injectables/PostApiService.html":{}}}],["reloads",{"_index":1517,"title":{},"body":{"components/GraphsComponent.html":{}}}],["remaining",{"_index":718,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["remainingdays",{"_index":756,"title":{},"body":{"components/BudgetComponent.html":{}}}],["remove",{"_index":2458,"title":{},"body":{"index.html":{}}}],["rendercalendar",{"_index":812,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":823,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":1953,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":1963,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendering",{"_index":2036,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendermode",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rent",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace",{"_index":1876,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":1382,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["representing",{"_index":574,"title":{},"body":{"injectables/AppVersionService.html":{},"index.html":{}}}],["represents",{"_index":2440,"title":{},"body":{"index.html":{}}}],["reqhandler",{"_index":2339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":2038,"title":{},"body":{"injectables/PostApiService.html":{}}}],["required",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/MusicComponent.html":{}}}],["res",{"_index":1120,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["res.data?.results",{"_index":1894,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1122,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1320,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1903,"title":{},"body":{"components/MusicComponent.html":{}}}],["resetformwithcurrentdatetime",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HomeComponent.html":{}}}],["resetting",{"_index":1745,"title":{},"body":{"components/HomeComponent.html":{}}}],["resize",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":1371,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["responsehtml",{"_index":316,"title":{},"body":{"components/AiComponent.html":{}}}],["responsibilities",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":1130,"title":{},"body":{"injectables/ConfigService.html":{}}}],["responsive",{"_index":2017,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["results",{"_index":307,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":1895,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":1349,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":1897,"title":{},"body":{"components/MusicComponent.html":{}}}],["retrieving",{"_index":1492,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["rgb(${math.max(r",{"_index":1291,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["rights",{"_index":1319,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":1021,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":2254,"title":{},"body":{"components/ToastComponent.html":{}}}],["route",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2040,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1027,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1028,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safehtml",{"_index":327,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sanitizer",{"_index":322,"title":{},"body":{"components/AiComponent.html":{}}}],["sat",{"_index":845,"title":{},"body":{"components/CalendarComponent.html":{}}}],["save",{"_index":790,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["saved",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["saveddata",{"_index":2137,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":2149,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":2158,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":2161,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["saving",{"_index":699,"title":{},"body":{"components/BudgetComponent.html":{}}}],["scales",{"_index":2031,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schema",{"_index":368,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":2146,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":2151,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screens",{"_index":2469,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":2493,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":969,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["seamless",{"_index":2382,"title":{},"body":{"index.html":{}}}],["search",{"_index":1686,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SearchComponent.html":{}}}],["search'},{'name",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["search.component.css",{"_index":2181,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":2180,"title":{},"body":{"components/SearchComponent.html":{}}}],["search/filter",{"_index":2488,"title":{},"body":{"index.html":{}}}],["searchbydaterange",{"_index":1296,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1196,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchcomponent",{"_index":295,"title":{"components/SearchComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searcherror",{"_index":1900,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsong",{"_index":1814,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2095,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1037,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":1908,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":1626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["seconds",{"_index":1820,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1048,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":390,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionsource",{"_index":2184,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2369,"title":{},"body":{"index.html":{}}}],["seektime",{"_index":1910,"title":{},"body":{"components/MusicComponent.html":{}}}],["select",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectcategory",{"_index":952,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":985,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["selectedcategoryname",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1215,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1253,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1254,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1255,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1259,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1257,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1258,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1256,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selecting",{"_index":943,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["selection",{"_index":100,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["selectlocationsuggestion",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["selects",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":319,"title":{},"body":{"components/AiComponent.html":{}}}],["sendmessage(message",{"_index":1426,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2054,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":1392,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1596,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":1653,"title":{},"body":{"components/GraphsComponent.html":{}}}],["series",{"_index":671,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["server",{"_index":2059,"title":{},"body":{"injectables/PostApiService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":2301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":2340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":2305,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{}}}],["service/backend",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["service/gemini",{"_index":334,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{}}}],["service/localstorage/budget.service",{"_index":669,"title":{},"body":{"components/BudgetComponent.html":{}}}],["service/localstorage/category.service",{"_index":994,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/expense.service",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/storage.service",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/saavan",{"_index":1843,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["service/util/app",{"_index":1313,"title":{},"body":{"components/FooterComponent.html":{}}}],["services",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["set",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setinterval",{"_index":768,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["sets",{"_index":444,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["setsection",{"_index":2185,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2186,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":724,"title":{},"body":{"components/BudgetComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":297,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":300,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":1703,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":1735,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":2255,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":1554,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":2413,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":1375,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["shouldbackup",{"_index":2074,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":1437,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{}}}],["show(message",{"_index":2269,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":1441,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["showaibutton",{"_index":1664,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":1938,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showbudgetsection",{"_index":630,"title":{},"body":{"components/BudgetComponent.html":{}}}],["showlocationsuggestions",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":631,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["showtoast",{"_index":2232,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":2236,"title":{},"body":{"components/ToastComponent.html":{}}}],["sidebar",{"_index":2200,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2201,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2202,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":302,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":1840,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":1836,"title":{},"body":{"components/MusicComponent.html":{}}}],["silently",{"_index":2041,"title":{},"body":{"injectables/PostApiService.html":{}}}],["simplechanges",{"_index":1509,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["skipped",{"_index":2090,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2093,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":2468,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":2380,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoothing",{"_index":1548,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":1357,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["something",{"_index":1398,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["song",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song.artists.primary[0]?.name",{"_index":1927,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":1849,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":1926,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":1880,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":2433,"title":{},"body":{"index.html":{}}}],["sort((a",{"_index":925,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":2432,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":981,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["specific",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["specifically",{"_index":2379,"title":{},"body":{"index.html":{}}}],["spending",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["spent",{"_index":720,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["spent/day",{"_index":2446,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../budget.component.ts",{"_index":2501,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../categories.ts",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:110",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:149",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":2304,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":941,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/custom",{"_index":1151,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":1462,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":1552,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":1550,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":1556,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":1489,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":1557,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":1513,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":1510,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":1515,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":1499,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":1505,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":1501,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":1495,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":1493,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":1507,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":1529,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":1537,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":1542,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":1526,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":1532,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":1540,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":1546,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/info",{"_index":1796,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1206,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":1944,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/setting",{"_index":2194,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":309,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:17",{"_index":329,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:18",{"_index":324,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:25",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/analysis/analysis.component.ts",{"_index":352,"title":{},"body":{"components/AnalysisComponent.html":{},"coverage.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":614,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/budget/budget.component.ts:117",{"_index":647,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:127",{"_index":643,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:175",{"_index":642,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:192",{"_index":646,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:24",{"_index":658,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:25",{"_index":661,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:26",{"_index":667,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:27",{"_index":666,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:28",{"_index":665,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:29",{"_index":660,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:30",{"_index":657,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:31",{"_index":659,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:32",{"_index":653,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:33",{"_index":654,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:34",{"_index":668,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:35",{"_index":664,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:36",{"_index":662,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:37",{"_index":663,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:38",{"_index":652,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:39",{"_index":641,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:60",{"_index":648,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:64",{"_index":645,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:72",{"_index":651,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:78",{"_index":650,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:88",{"_index":644,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:92",{"_index":649,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":798,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:100",{"_index":822,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:112",{"_index":819,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:15",{"_index":833,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:16",{"_index":831,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:17",{"_index":828,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:18",{"_index":837,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:19",{"_index":827,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:20",{"_index":836,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:21",{"_index":835,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:22",{"_index":834,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:23",{"_index":829,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":813,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:28",{"_index":838,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":820,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:37",{"_index":817,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:49",{"_index":825,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:90",{"_index":815,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1687,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":1723,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":1731,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":1734,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":1713,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":1721,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":1706,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":1740,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":1747,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":1748,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":1750,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1739,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":1743,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":1736,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":1727,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":1724,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":2319,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":1802,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:129",{"_index":1819,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:135",{"_index":1823,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:139",{"_index":1825,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:14",{"_index":1839,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:148",{"_index":1831,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:15",{"_index":1841,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:16",{"_index":1834,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:17",{"_index":1835,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:18",{"_index":1838,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:19",{"_index":1837,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:20",{"_index":1817,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:24",{"_index":1829,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:33",{"_index":1822,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:37",{"_index":1828,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:67",{"_index":1826,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/search/search.component.ts",{"_index":2179,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2322,"title":{},"body":{"coverage.html":{}}}],["src/app/service/backend",{"_index":1428,"title":{},"body":{"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/gemini",{"_index":1322,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":1451,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":583,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:12",{"_index":792,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:18",{"_index":796,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:22",{"_index":795,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":793,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:35",{"_index":797,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:48",{"_index":794,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":901,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:21",{"_index":1015,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:23",{"_index":1010,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:27",{"_index":1014,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:44",{"_index":1013,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:49",{"_index":1011,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:59",{"_index":1016,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:66",{"_index":1012,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":2327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1163,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:24",{"_index":1297,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:28",{"_index":1303,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:32",{"_index":1302,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:39",{"_index":1300,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:64",{"_index":1298,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:72",{"_index":1305,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:80",{"_index":1301,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:85",{"_index":1299,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:92",{"_index":1304,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2103,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:117",{"_index":2222,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:12",{"_index":2209,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:136",{"_index":2211,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:140",{"_index":2210,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:144",{"_index":2216,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:148",{"_index":2212,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:152",{"_index":2214,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:156",{"_index":2215,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:16",{"_index":2226,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:160",{"_index":2213,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:164",{"_index":2217,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:17",{"_index":2227,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:18",{"_index":2225,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:19",{"_index":2228,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:22",{"_index":2218,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:27",{"_index":2220,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:41",{"_index":2221,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:5",{"_index":2105,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:58",{"_index":2223,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:78",{"_index":2219,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:90",{"_index":2224,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":2274,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:20",{"_index":2284,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:24",{"_index":2287,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:28",{"_index":2285,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:33",{"_index":2288,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:40",{"_index":2286,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1018,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2183,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:10",{"_index":2189,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:12",{"_index":2187,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:9",{"_index":2191,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":2266,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:10",{"_index":2268,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:14",{"_index":2270,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:8",{"_index":2271,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/util/app",{"_index":561,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts",{"_index":1129,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts:18",{"_index":1139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/config/config.service.ts:29",{"_index":1140,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/utils.service.ts",{"_index":2290,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/service/util/utils.service.ts:6",{"_index":2291,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1306,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1312,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":1431,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":1658,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":1934,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:14",{"_index":1939,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:22",{"_index":1940,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2199,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:13",{"_index":2204,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:21",{"_index":2205,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":2229,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:12",{"_index":2234,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:15",{"_index":2235,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:18",{"_index":2237,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":2332,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":2334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":2336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2395,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":2438,"title":{},"body":{"index.html":{}}}],["started",{"_index":2364,"title":{"index.html":{}},"body":{}}],["state",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["statements",{"_index":2295,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1966,"title":{},"body":{"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stays",{"_index":2479,"title":{},"body":{"index.html":{}}}],["steps",{"_index":763,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stop",{"_index":1872,"title":{},"body":{"components/MusicComponent.html":{}}}],["stops",{"_index":2367,"title":{},"body":{"index.html":{}}}],["storage",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["storage.service",{"_index":588,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2139,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":391,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":2135,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stored",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":576,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["string",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["string(date.getmonth",{"_index":1776,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":858,"title":{},"body":{"components/CalendarComponent.html":{}}}],["stroke",{"_index":1479,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1388,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["style",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":314,"title":{},"body":{"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/SearchComponent.html":{},"components/ToastComponent.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1543,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["submitedit",{"_index":1212,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscribe((event",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscriptions",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successful",{"_index":2061,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["such",{"_index":1133,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{}}}],["suggest",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":786,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["suggested/day",{"_index":2447,"title":{},"body":{"index.html":{}}}],["suggestedperday",{"_index":632,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestedperday.tofixed(2",{"_index":787,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestion",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["suggestnextsong",{"_index":2096,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":714,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["summary",{"_index":2443,"title":{},"body":{"index.html":{}}}],["sun",{"_index":839,"title":{},"body":{"components/CalendarComponent.html":{}}}],["sure",{"_index":773,"title":{},"body":{"components/BudgetComponent.html":{}}}],["surface",{"_index":871,"title":{},"body":{"components/CalendarComponent.html":{}}}],["switch",{"_index":1146,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["switches",{"_index":1516,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":1486,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":1514,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["sync",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":2129,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":2113,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":2150,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":2152,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":2159,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":2162,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":2160,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":2116,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["syncuser",{"_index":2207,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":2157,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":2119,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":2208,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":2133,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["t",{"_index":1351,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["tab",{"_index":2484,"title":{},"body":{"index.html":{}}}],["table",{"_index":911,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2341,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":2378,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":968,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2066,"title":{},"body":{"injectables/PostApiService.html":{}}}],["tap",{"_index":2425,"title":{},"body":{"index.html":{}}}],["target",{"_index":1003,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":2394,"title":{},"body":{"index.html":{}}}],["technology",{"_index":2396,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["text",{"_index":869,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{}}}],["that's",{"_index":1394,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["theme_mode",{"_index":2126,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["thinking",{"_index":351,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2206,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.animatedbudgetprogress",{"_index":722,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.animatepercentage",{"_index":725,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.appversion",{"_index":1315,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.appversionservice.getversion",{"_index":1316,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.audio",{"_index":1852,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":1912,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":1863,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":1856,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":1854,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":1855,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":1857,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.avgallowedperday",{"_index":758,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.avgspentperday",{"_index":759,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetcolorclass",{"_index":729,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform",{"_index":680,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.invalid",{"_index":691,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.markallastouched",{"_index":692,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.patchvalue",{"_index":687,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.reset",{"_index":684,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.value",{"_index":693,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetkey",{"_index":2176,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetmessage",{"_index":735,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress",{"_index":721,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress.tofixed(1",{"_index":770,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets",{"_index":700,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets.length",{"_index":703,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets[this.budgets.length",{"_index":705,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.add(data",{"_index":697,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.delete(this.latestbudget.budget_id",{"_index":776,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.getall",{"_index":701,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.update(this.latestbudget.budget_id",{"_index":694,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatebudgetprogress",{"_index":706,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":864,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":850,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":866,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":860,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2005,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":996,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":999,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":1978,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories.foreach(cat",{"_index":1980,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2000,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":1981,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2140,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":1979,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":1992,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":1006,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":1007,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":1002,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":1976,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":997,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":998,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2006,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2007,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":1607,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":1605,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.closemodal",{"_index":698,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.closemodal.emit",{"_index":1251,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.configservice.getapiurl",{"_index":2078,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.createform",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.currency",{"_index":678,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currency}${(spent",{"_index":738,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${remaining.tofixed(2",{"_index":744,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${spent.tofixed(2",{"_index":737,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${totalbudget.tofixed(2",{"_index":743,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currentdate",{"_index":1755,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":1610,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":1569,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":1570,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":1758,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":1760,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":1759,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":1762,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":847,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":1858,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":1853,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":849,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":1746,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1252,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1148,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayedpercentage",{"_index":723,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.duration.set(song.duration",{"_index":1859,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1249,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1233,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1242,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1245,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1248,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.expenseform",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2174,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":1977,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2002,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":1990,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":1279,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":879,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":1347,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.fb.group",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.filteredlocationsuggestions",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":1766,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":1770,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":1343,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generateuserid",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":2278,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":599,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1194,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlast30daysexpenses",{"_index":1341,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":1898,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2080,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloadercomponent",{"_index":1459,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":1461,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":1460,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":1444,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":1339,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.history",{"_index":1119,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.post(url",{"_index":2081,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1232,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.interval",{"_index":1861,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isbrowser",{"_index":595,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":1001,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":682,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["this.iseditmode",{"_index":685,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.iseditopen",{"_index":1243,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":1680,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isvisible",{"_index":1446,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.latestbudget",{"_index":704,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.amount",{"_index":688,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.fromdate",{"_index":689,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.todate",{"_index":690,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadbudgets",{"_index":683,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadcategories",{"_index":995,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":1561,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":1986,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":1566,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{}}}],["this.loader.show",{"_index":1449,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.loadmonthdata",{"_index":1984,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":1565,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":1985,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":1567,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.locationsuggestions",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":1445,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":348,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":880,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":882,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":886,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.oninputchanges",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":1864,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(url",{"_index":1899,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.progress.set(0",{"_index":1905,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":1913,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":1862,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim",{"_index":1846,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":846,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":1994,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":1892,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":1847,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":1868,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":1685,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2188,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2193,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1247,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1244,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1234,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1235,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1236,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1241,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1240,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1238,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1239,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1237,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.showaibutton",{"_index":1676,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":1942,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showbudgetsection",{"_index":702,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.showlocationsuggestions",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":686,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":1848,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":596,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":917,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":915,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2094,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["this.suggestedperday",{"_index":760,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.syncuser(this.userkey",{"_index":2128,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":2131,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":2115,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":2118,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.theme.mode",{"_index":1560,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":1602,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":2272,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":2273,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":2238,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show(\"budget",{"_index":777,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('budget",{"_index":695,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('error",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.toastservice.show('expense",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toggleedit",{"_index":1250,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":1585,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":878,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":1866,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.userinput.trim",{"_index":338,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2178,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('currency",{"_index":679,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2071,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('last_backup",{"_index":2086,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":579,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["this.viewtype",{"_index":1564,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":1756,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":1757,"title":{},"body":{"components/HomeComponent.html":{}}}],["through",{"_index":2416,"title":{},"body":{"index.html":{}}}],["thu",{"_index":843,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ticks",{"_index":2032,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["timeamountmap",{"_index":1608,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":1632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":1622,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":1629,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times",{"_index":788,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":1631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":1633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["timestr",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["title",{"_index":1158,"title":{},"body":{"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["titlecase",{"_index":1779,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1203,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast.classname",{"_index":2245,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":2231,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":2230,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":2263,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":2265,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":304,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":2239,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":2264,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":2241,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":64,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["todate",{"_index":586,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["todate.toisostring",{"_index":1348,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":753,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["todaysexpenses",{"_index":1611,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":1623,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":1613,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":1609,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["toggle",{"_index":1677,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":953,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleedit",{"_index":1213,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglemenu",{"_index":1667,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":988,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["tomato",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":1384,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":1519,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":1480,"title":{},"body":{"components/GraphsComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":2021,"title":{},"body":{"components/PieChartComponent.html":{}}}],["total",{"_index":881,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["totalamount",{"_index":1575,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalbudget",{"_index":707,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalbudget).tofixed(2",{"_index":739,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totaldays",{"_index":747,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalexpenses",{"_index":808,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":2466,"title":{},"body":{"index.html":{}}}],["track",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tracker",{"_index":1943,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":366,"title":{},"body":{"components/AppComponent.html":{}}}],["transform",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["transformeddata",{"_index":1865,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":1815,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":1830,"title":{},"body":{"components/MusicComponent.html":{}}}],["translatey(0",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":1524,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["travel",{"_index":2412,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":1367,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["trim",{"_index":1877,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":339,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["tslib",{"_index":2359,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":841,"title":{},"body":{"components/CalendarComponent.html":{}}}],["two",{"_index":2403,"title":{},"body":{"index.html":{}}}],["type",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2499,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeclasses",{"_index":2242,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":2260,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":2259,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":591,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typically",{"_index":566,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["ui",{"_index":2390,"title":{},"body":{"index.html":{}}}],["ui/ux",{"_index":2377,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":896,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":592,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":1928,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["unrelated",{"_index":1379,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":2459,"title":{},"body":{"index.html":{}}}],["up",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":605,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":931,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1191,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":2276,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":696,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2148,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1246,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":1342,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2085,"title":{},"body":{"injectables/PostApiService.html":{}}}],["upi",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":2456,"title":{},"body":{"index.html":{}}}],["upon",{"_index":2400,"title":{},"body":{"index.html":{}}}],["url",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["url.startswith('/music",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["urls",{"_index":1135,"title":{},"body":{"injectables/ConfigService.html":{}}}],["usage",{"_index":2472,"title":{},"body":{"index.html":{}}}],["use",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":131,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["user.service",{"_index":907,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2056,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":905,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":2125,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":2079,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2082,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":317,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2111,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":1333,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":2374,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2120,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":380,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":1559,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1365,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["uses",{"_index":2063,"title":{},"body":{"injectables/PostApiService.html":{}}}],["using",{"_index":1389,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["util/app",{"_index":2107,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["util/config/config.service",{"_index":2067,"title":{},"body":{"injectables/PostApiService.html":{}}}],["utilities",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":2453,"title":{},"body":{"index.html":{}}}],["utilsservice",{"_index":2289,"title":{"injectables/UtilsService.html":{}},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["val?.tolowercase().trim",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["validators",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["validators.maxlength(100",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["validators.required",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["value",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":1771,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":1764,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":1132,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{},"miscellaneous/variables.html":{}}}],["value}\\n",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":2298,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2502,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":565,"title":{},"body":{"injectables/AppVersionService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version.service",{"_index":1314,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["version.service.ts",{"_index":563,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["version.service.ts:17",{"_index":572,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version.service.ts:29",{"_index":573,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version/app",{"_index":562,"title":{},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["versions",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2483,"title":{},"body":{"index.html":{}}}],["vibe",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":363,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["viewchild",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["viewchild('categorycanvas",{"_index":1965,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":990,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewed",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2406,"title":{},"body":{"index.html":{}}}],["viewtype",{"_index":1488,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":1693,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":1694,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["visualizes",{"_index":2408,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1395,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["v{{appversion",{"_index":1321,"title":{},"body":{"components/FooterComponent.html":{}}}],["w",{"_index":2249,"title":{},"body":{"components/ToastComponent.html":{}}}],["want",{"_index":774,"title":{},"body":{"components/BudgetComponent.html":{}}}],["warning",{"_index":1416,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["we're",{"_index":2112,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":1399,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":1781,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":842,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":809,"title":{},"body":{"components/CalendarComponent.html":{}}}],["whether",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["white",{"_index":2257,"title":{},"body":{"components/ToastComponent.html":{}}}],["whole",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1792,"title":{},"body":{"components/HomeComponent.html":{}}}],["window",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.innerwidth",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":593,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window:resize",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":2407,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":2365,"title":{},"body":{"index.html":{}}}],["within",{"_index":2091,"title":{},"body":{"injectables/PostApiService.html":{}}}],["worker",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":356,"title":{},"body":{"components/AnalysisComponent.html":{},"components/SearchComponent.html":{}}}],["x",{"_index":1533,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xs",{"_index":2250,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1538,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["year",{"_index":826,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":1498,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["years",{"_index":2430,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":731,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1260,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["yyyy",{"_index":1715,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":1791,"title":{},"body":{"components/HomeComponent.html":{}}}],["zone.js",{"_index":2361,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1520,"title":{},"body":{"components/GraphsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:192\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:201\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n  userInput = '';\n  responseHtml: SafeHtml | null = null;\n\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnalysisComponent.html":{"url":"components/AnalysisComponent.html","title":"component - AnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/analysis/analysis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-analysis\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./analysis.component.html\n            \n\n\n\n            \n                styleUrl\n                ./analysis.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-analysis',\n  imports: [],\n  templateUrl: './analysis.component.html',\n  styleUrl: './analysis.component.css'\n})\nexport class AnalysisComponent {\n\n}\n\n    \n\n    \n        analysis works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'analysis works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SearchComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                AnalysisComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:51\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:61\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:56\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:82\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SearchComponent } from './features/search/search.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AnalysisComponent } from './features/analysis/analysis.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent, SearchComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent,\n    AnalysisComponent, CalendarComponent, AiComponent, MusicComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth \n    \n\n    \n        \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppVersionService.html":{"url":"injectables/AppVersionService.html","title":"injectable - AppVersionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppVersionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/app-version/app-version.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to provide the current application version.\nThis version is typically injected from the environment configuration.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for AppVersionService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/app-version/app-version.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service to provide the current application version.\n * \n * This version is typically injected from the environment configuration.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppVersionService {\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * Constructor for AppVersionService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BudgetComponent.html":{"url":"components/BudgetComponent.html","title":"component - BudgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/budget/budget.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-budget\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./budget.component.html\n            \n\n\n\n            \n                styleUrl\n                ./budget.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedBudgetProgress\n                            \n                            \n                                avgAllowedPerDay\n                            \n                            \n                                avgSpentPerDay\n                            \n                            \n                                budgetColorClass\n                            \n                            \n                                budgetForm\n                            \n                            \n                                budgetMessage\n                            \n                            \n                                budgetProgress\n                            \n                            \n                                budgets\n                            \n                            \n                                currency\n                            \n                            \n                                displayedPercentage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isEditMode\n                            \n                            \n                                latestBudget\n                            \n                            \n                                showBudgetSection\n                            \n                            \n                                showModal\n                            \n                            \n                                suggestedPerDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animatePercentage\n                            \n                            \n                                calculateBudgetProgress\n                            \n                            \n                                closeModal\n                            \n                            \n                                createForm\n                            \n                            \n                                deleteBudget\n                            \n                            \n                                loadBudgets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, budgetService: BudgetService, toastService: ToastService, fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/budget/budget.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animatePercentage\n                        \n                    \n                \n            \n            \n                \nanimatePercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBudgetProgress\n                        \n                    \n                \n            \n            \n                \ncalculateBudgetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBudget\n                        \n                    \n                \n            \n            \n                \ndeleteBudget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBudgets\n                        \n                    \n                \n            \n            \n                \nloadBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedBudgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgAllowedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgSpentPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetColorClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bg-green-500'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latestBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBudgetSection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { Budget, BudgetService } from '../../service/localStorage/budget.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  labels: string[];\n  plotOptions: ApexPlotOptions;\n};\n@Component({\n  selector: 'app-budget',\n  standalone: true,\n  imports: [ReactiveFormsModule,\n    CommonModule],\n  templateUrl: './budget.component.html',\n  styleUrl: './budget.component.css'\n})\nexport class BudgetComponent implements OnInit {\n  budgetForm: FormGroup;\n  budgets: Budget[] = [];\n  showModal = false;\n  showBudgetSection = false;\n  latestBudget!: Budget;\n  budgetProgress = 0;\n  budgetColorClass = 'bg-green-500';\n  budgetMessage = '';\n  avgAllowedPerDay = 0;\n  avgSpentPerDay = 0;\n  suggestedPerDay = 0;\n  isEditMode = false;\n  currency: string | null;\n  isDarkMode: boolean = false;\n  animatedBudgetProgress = 0;\n  displayedPercentage = 0;\n\n\n  constructor(\n    private expenseService: ExpenseService,\n    private budgetService: BudgetService,\n    private toastService: ToastService,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n    this.budgetForm = this.createForm();\n    const savedTheme = this.userService.getValue('theme_mode') ?? 'light';\n    if (savedTheme === 'dark') {\n      this.isDarkMode = true;\n    }\n    else {\n      this.isDarkMode = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.loadBudgets();\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n    });\n  }\n\n  openModal(): void {\n    this.budgetForm.reset();\n    this.isEditMode = false;\n    this.showModal = true;\n  }\n\n  openEditModal(): void {\n    this.isEditMode = true;\n    this.showModal = true;\n    this.budgetForm.patchValue({\n      amount: this.latestBudget.amount,\n      fromDate: this.latestBudget.fromDate,\n      toDate: this.latestBudget.toDate,\n    });\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n  }\n\n  onSubmit() {\n    if (this.budgetForm.invalid) {\n      this.budgetForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.budgetForm.value;\n\n    try {\n      if (this.isEditMode) {\n        this.budgetService.update(this.latestBudget.budget_id, data);\n        this.toastService.show('Budget updated successfully!', 'success');\n      } else {\n        this.budgetService.add(data);\n        this.toastService.show('Budget added successfully!', 'success');\n      }\n\n      this.loadBudgets();\n      this.closeModal();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error saving budget.', 'error');\n    }\n  }\n\n  loadBudgets() {\n    this.budgets = this.budgetService.getAll();\n    this.showBudgetSection = this.budgets.length > 0;\n\n    if (this.showBudgetSection) {\n      this.latestBudget = this.budgets[this.budgets.length - 1];\n      this.calculateBudgetProgress();\n    }\n  }\n\n  calculateBudgetProgress() {\n    const totalBudget = parseFloat(this.latestBudget.amount.toString());\n    const fromDate = new Date(this.latestBudget.fromDate);\n    const toDate = new Date(this.latestBudget.toDate);\n\n    const expenses: Expense[] = this.expenseService.getAll();\n    const expensesInRange = expenses.filter((exp: any) => {\n      const date = new Date(exp.date);\n      return date >= fromDate && date  sum + parseFloat(exp.amount), 0);\n    const percentage = Math.min((spent / totalBudget) * 100, 100);\n    const remaining = Math.max(totalBudget - spent, 0);\n    this.budgetProgress = percentage;\n    this.animatedBudgetProgress = 0;\n    this.displayedPercentage = 0;\n\n    setTimeout(() => {\n      this.animatedBudgetProgress = this.budgetProgress;\n    }, 100);\n\n    this.animatePercentage();\n\n    // Color class logic\n    if (percentage > 80) this.budgetColorClass = 'bg-red-500';\n    else if (percentage > 50) this.budgetColorClass = 'bg-yellow-500';\n    else if (percentage > 30) this.budgetColorClass = 'bg-blue-500';\n    else this.budgetColorClass = 'bg-green-500';\n\n    // Budget message\n    if (spent > totalBudget) {\n      this.budgetMessage = `⚠️ You have exceeded your budget! You spent ${this.currency}${spent.toFixed(2)} which is ${this.currency}${(spent - totalBudget).toFixed(2)} over the limit set between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 😰`;\n    } else {\n      this.budgetMessage = `✅ You have spent ${this.currency}${spent.toFixed(2)} out of ${this.currency}${totalBudget.toFixed(2)} between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 💸 Remaining: ${this.currency}${remaining.toFixed(2)}`;\n    }\n\n    // Average insights\n    const totalDays = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    const today = new Date();\n    const elapsedDays = Math.max(Math.ceil((today.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)), 1);\n    const remainingDays = Math.max(totalDays - elapsedDays, 1);\n\n    this.avgAllowedPerDay = totalBudget / totalDays;\n    this.avgSpentPerDay = spent / elapsedDays;\n    this.suggestedPerDay = remaining / remainingDays;\n  }\n\n  animatePercentage() {\n    const duration = 800;\n    const steps = 40;\n    const increment = this.budgetProgress / steps;\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      currentStep++;\n      this.displayedPercentage = +(increment * currentStep).toFixed(1);\n\n      if (currentStep >= steps) {\n        this.displayedPercentage = +this.budgetProgress.toFixed(1);\n        clearInterval(interval);\n      }\n    }, duration / steps);\n  }\n\n  deleteBudget() {\n    if (confirm(\"Are you sure you want to delete this budget?\")) {\n      this.budgetService.delete(this.latestBudget.budget_id);\n      this.toastService.show(\"Budget deleted successfully\", 'success');\n      this.closeModal();\n    }\n    this.loadBudgets();\n  }\n}\n    \n\n    \n        \n\n    \n    \n        \n            💰 Budget Progress\n            \n                \n\n                    \n                        {{ displayedPercentage.toFixed(1) }}%\n                    \n\n                \n            \n\n            \n                {{ budgetMessage }}\n            \n\n            \n                \n                    Avg Allowed / Day\n                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}\n                \n                \n                    Spent / Day\n                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}\n                \n                \n                    Suggested / Day\n                    {{currency}}{{ suggestedPerDay.toFixed(2) }}\n                \n            \n        \n        \n            \n                \n                    Update\n                \n                \n                    Delete\n                \n            \n        \n\n    \n\n    \n    \n        \n            \n            \n                \n            \n\n            \n            \n                \n            \n            \n                ➕ Add Budget\n            \n        \n    \n\n    \n    \n        \n            \n                \n                    {{ isEditMode ? 'Update Budget' : 'Add Budget' }}\n                \n\n                &times;\n            \n            \n                Amount\n                \n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n                From Date\n                \n                \n                    From Date is required\n                \n                To Date\n                \n                \n                    To Date is required\n                \n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            💰 Budget Progress                                                                        {{ displayedPercentage.toFixed(1) }}%                                                                            {{ budgetMessage }}                                                            Avg Allowed / Day                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}                                                    Spent / Day                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}                                                    Suggested / Day                    {{currency}}{{ suggestedPerDay.toFixed(2) }}                                                                                            Update                                                    Delete                                                                                                                                                                                            ➕ Add Budget                                                                                        {{ isEditMode ? \\'Update Budget\\' : \\'Add Budget\\' }}                                ×                                        Amount                                                    Amount cannot be negative                                                    Amount is required                                From Date                                                    From Date is required                                To Date                                                    To Date is required                                                    Cancel                    Save                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BudgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Budget[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\n\nexport class CalendarComponent implements OnInit {\n  currentYear = new Date().getFullYear();\n  currentMonth = new Date().getMonth();\n  calendarTitle = '';\n  totalExpenses = 0;\n  calendarDays: any[] = [];\n  showModal = false;\n  modalTitle = '';\n  modalExpenses: any[] = [];\n  currency: string | null;\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\nsuch as API base URLs based on the current environment (local or live).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/config/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/config/config.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL based on the development environment.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/config/config.service.ts:18\n                        \n                    \n\n            \n                \n                    The current environment setting.\nPossible values: 'local' | 'live'.\nChange this value to switch API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n * such as API base URLs based on the current environment (local or live).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting.\n   * Possible values: 'local' | 'live'.\n   * Change this value to switch API endpoints.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL based on the development environment.\n   *\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return \"http://localhost:8000\";\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return \"https://exwiseapi.onrender.com\";\n    }\n    else {\n      return \"http://localhost:8000\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomModalComponent.html":{"url":"components/CustomModalComponent.html","title":"component - CustomModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/custom-modal/custom-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-modal\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./custom-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalId\n                            \n                            \n                                onClose\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onClose\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => { }\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Modal Title'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-modal',\n  templateUrl: './custom-modal.component.html',\n  standalone: true,\n  imports: []\n})\nexport class CustomModalComponent {\n  @Input() modalId!: string;\n  @Input() title: string = 'Modal Title';\n  @Input() onClose: () => void = () => { };\n}\n\n    \n\n    \n        \n    \n        {{ title }}\n        &times;\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}        ×        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n  @Input() selectedExpense: any;\n  @Input() currency: string | null = '';\n  @Input() isEditOpen: boolean = false;\n  @Output() closeModal = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() edit = new EventEmitter();\n  selectedCategoryName: string = 'Select Category';\n  editForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  initForm() {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  onCategorySelected(category: any) {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  toggleEdit() {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  submitEdit() {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  close() {\n    this.closeModal.emit();\n  }\n\n  onDelete() {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\n\nexport class ExpenseListComponent {\n  @Input() expenses: any[] = [];\n  @Input() currency: string | null;\n  @Output() expenseSelected = new EventEmitter();\n\n  constructor(\n  ) {\n    this.currency = '';\n\n  }\n\n  onSelect(expense: any) {\n    this.expenseSelected.emit(expense);\n  }\n\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n    return date.toLocaleDateString();\n  }\n\n  darkenColor(color: string, percent: number): string {\n    try {\n      const num = parseInt(color.replace('#', ''), 16);\n      const amt = Math.round(2.55 * percent * 100);\n      const R = (num >> 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Expense[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppVersionService } from '../../service/util/app-version/app-version.service';\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n  appVersion: string = \"\";\n  constructor(private appVersionService: AppVersionService) {\n    this.appVersion = this.appVersionService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Pick[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService, private expenseService: ExpenseService) { }\n\n  async getResponse(prompt: string): Promise {\n\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics, personal advice), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetApiService.html":{"url":"injectables/GetApiService.html","title":"injectable - GetApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/get/get-api.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/get/get-api.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetApiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service'\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n  isVisible = false;\n  message = \"\";\n\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  show(text: string = \"Loading...\") {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  hide() {\n    this.isVisible = false;\n  }\n}\n\n// constructor(private loader: LoaderService) {}\n\n// loadSomething() {\n//   this.loader.show();\n//   setTimeout(() => {\n//     this.loader.hide();\n//   }, 3000);\n// }\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  register(component: GlobalLoaderComponent) {\n    this.globalLoaderComponent = component;\n  }\n  \n  show(text: string = \"Loading...\") {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  hide() {\n    this.globalLoaderComponent?.hide();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  showAIButton = false;\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n  isMenuOpen = false;\n\n  // Toggle the menu when the button is clicked\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  // Close the menu if clicked outside\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    const clickedInside = event.target instanceof HTMLElement && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoIconComponent.html":{"url":"components/InfoIconComponent.html","title":"component - InfoIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/info-icon/info-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-icon\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./info-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info-icon.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Info tooltip'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/info-icon/info-icon.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-icon',\n  imports: [],\n  templateUrl: './info-icon.component.html',\n  styleUrl: './info-icon.component.css'\n})\nexport class InfoIconComponent {\n  @Input() message: string = 'Info tooltip';\n}\n\n    \n\n    \n        \n    \n    \n        {{ message }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ message }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                playSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: any; type: any; year: any; duration: any; label: any; playCount: any; language: any; copyright: any; album: { name: any; }; artists: { all: any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\n\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './music.component.html',\n  styleUrl: './music.component.css'\n})\nexport class MusicComponent implements OnDestroy {\n  query = '';\n  songs = signal([]);\n  audio = new Audio();\n  currentSong: any = null;\n  progress = signal(0);\n  duration = signal(0);\n  interval: any = null;\n\n  constructor(private saavnService: SaavnService) { }\n\n  searchSong() {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  playSong(url: string, song: any) {\n    if (!this.audio) {\n      this.audio = new Audio();\n    }\n\n    if (this.currentSong?.url === url) {\n      if (this.audio.paused) {\n        this.audio.play();\n      } else {\n        this.audio.pause();\n      }\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) {\n        this.progress.set(this.audio.currentTime);\n      }\n    }, 500);\n\n    this.audio.onended = () => {\n      this.onSongFinished();\n    };\n  }\n\n  async onSongFinished() {\n    try {\n      const transformedData = this.transformSongData(this.currentSong);\n\n      // Get AI suggestion\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') {\n        console.warn('No song suggestion received from AI.');\n        return; // Stop if no suggestion\n      }\n\n      let cleanedSong = nextSong.trim();\n\n      if (cleanedSong.startsWith(\"```json\")) {\n        cleanedSong = cleanedSong.replace(/^```json/, \"\").replace(/```$/, \"\").trim();\n      } else if (cleanedSong.startsWith(\"```\")) {\n        cleanedSong = cleanedSong.replace(/^```/, \"\").replace(/```$/, \"\").trim();\n      }\n\n      let songDetails: { songName: string; artistsName: string };\n\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch (jsonError) {\n        console.error('Failed to parse AI response as JSON:', jsonError);\n        return; // Stop if JSON parsing fails\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(\",\")[0].trim() : \"\";\n      if (!songName || !mainArtist) {\n        console.warn('Incomplete song details received from AI:', songDetails);\n        return; // Stop if required fields are missing\n      }\n\n      // Search and play the song\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const url = this.getSongUrl(firstSong);\n            this.playSong(url, firstSong);\n          } else {\n            console.warn('No search results found for suggested song.');\n          }\n        },\n        error: (searchError) => {\n          console.error('Error during song search:', searchError);\n        }\n      });\n    } catch (error) {\n      console.error('Error in onSongFinished:', error);\n    } finally {\n      // Reset progress and cleanup\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n    }\n  }\n\n  formatTime(seconds: number) {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  onSeek(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    if (this.audio) {\n      this.audio.currentTime = seekTime;\n      this.progress.set(seekTime);\n    }\n  }\n\n  transformSongData(data: any) {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: {\n        name: data.album?.name || ''\n      },\n      artists: {\n        all: (data.artists?.primary || []).map((artist: any) => ({\n          name: artist.name\n        }))\n      }\n    };\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n        \n          \n        \n      \n    \n\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                                {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                      '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent {\n  showBackButton = false;\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\ndeclare const Chart: any;\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n  isDarkMode: boolean = false;\n  categoryMap: any = {};\n  categories: Category[] = []\n  expenses: Expense[] = [];\n  charts: { [key: string]: any } = {};\n  categoryColors: { [key: string]: string } = {};\n  currency: string | null;\n\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n  @Input() currentDate!: Date;\n\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n    });\n    this.categories.forEach(cat => {\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../util/config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\n\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      //console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: () => {\n          //console.log('User data posted successfully. Updating last_backup...');\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\"\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/search/search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  imports: [],\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.css'\n})\nexport class SearchComponent {\n\n}\n\n    \n\n    \n        🔍 Search Expenses\nsearch works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '🔍 Search Expensessearch works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n  private sectionSource = new BehaviorSubject('home');\n  currentSection$ = this.sectionSource.asObservable();\n\n  setSection(section: string) {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/setting-item/setting-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/setting-item/setting-item.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n  @Input() label!: string;\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  activePath: string = '';\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                syncWithSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUser\n                        \n                    \n                \n            \n            \n                \nsyncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\"\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\n\nexport class ToastComponent implements AfterViewInit {\n  constructor(private toastService: ToastService) { }\n\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n  showToast(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success') {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      toastContainer.innerHTML = '';\n\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      setTimeout(() => {\n        toast.remove();\n      }, 3000);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private toastComponent!: ToastComponent;\n\n  register(toast: ToastComponent) {\n    this.toastComponent = toast;\n  }\n\n  show(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success') {\n    this.toastComponent?.showToast(message, type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/utils.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/utils.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/component/custom-modal/custom-modal.component.ts\n            \n            component\n            CustomModalComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/component/info-icon/info-icon.component.ts\n            \n            component\n            InfoIconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/analysis/analysis.component.ts\n            \n            component\n            AnalysisComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            type alias\n            ChartOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/features/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/get/get-api.service.ts\n            \n            injectable\n            GetApiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/util/app-version/app-version.service.ts\n            \n            injectable\n            AppVersionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            chart.js : ^4.4.9\n        \n            express : ^4.18.2\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🧾 Sort expenses by date, amount, or category.\n🔍 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage.\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log and search/filter options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:👉 Documentation\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    25 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartOptions   (src/.../budget.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/features/budget/budget.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChartOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyAZT2MYoLB9gRwRa6NRan8NdFSVmmwzz04',\n\n  /**\n   * Current environment type.\n   * Possible values: 'local', 'live'\n   */\n  developmentEnvironment: 'local', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.8.15', // Current application version\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
