var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddExpenseComponent.html",[0,0.068,1,0.725]],["body/components/AddExpenseComponent.html",[0,0.109,1,0.915,2,0.647,3,0.156,4,0.098,5,0.452,6,0.937,7,0.452,8,0.452,9,0.073,10,5.918,11,5.27,12,1.759,13,2.594,14,4.047,15,1.292,16,1.77,17,3.255,18,5.349,19,5.263,20,6.808,21,3.367,22,3.255,23,1.68,24,2.391,25,0.407,26,1.578,27,1.276,28,1.075,29,0.939,30,1.134,31,0.973,32,0.756,33,3.09,34,1.41,35,0.915,36,1.488,37,4.047,38,0.718,39,3.255,40,0.124,41,0.461,42,4.047,43,4.047,44,4.047,45,4.047,46,4.047,47,4.047,48,3.09,49,4.047,50,4.047,51,0.49,52,3.951,53,4.608,54,2.378,55,2.791,56,4.608,57,3.951,58,4.608,59,3.255,60,3.255,61,0.693,62,1.759,63,4.084,64,2.658,65,3.436,66,0.647,67,3.255,68,2.486,69,2.257,70,0.735,71,0.02,72,0.467,73,0.378,74,0.693,75,3.09,76,2.257,77,3.519,78,3.167,79,2.378,80,0.847,81,3.255,82,2.051,83,2.257,84,3.255,85,0.923,86,4.281,87,3.255,88,2.051,89,2.486,90,2.791,91,3.385,92,0.997,93,2.051,94,2.486,95,2.486,96,2.486,97,2.791,98,2.051,99,2.257,100,0.948,101,2.791,102,4.084,103,4.033,104,2.051,105,3.255,106,2.78,107,2.075,108,3.255,109,2.051,110,3.255,111,3.255,112,2.051,113,2.791,114,1.405,115,2.087,116,2.658,117,3.255,118,0.556,119,2.051,120,4.608,121,5.263,122,4.608,123,3.255,124,2.051,125,2.807,126,1.212,127,3.255,128,2.257,129,2.375,130,1.016,131,2.051,132,2.486,133,1.21,134,0.894,135,0.747,136,2.051,137,4.608,138,1.449,139,2.051,140,2.051,141,3.195,142,3.519,143,2.051,144,3.09,145,2.051,146,2.486,147,1.923,148,2.031,149,2.051,150,3.951,151,3.195,152,2.051,153,0.223,154,1.422,155,1.422,156,0.086,157,1.566,158,1.058,159,1.307,160,2.051,161,1.422,162,1.759,163,0.679,164,1.566,165,0.086,166,0.098,167,2.947,168,0.683,169,2.051,170,1.759,171,1.307,172,2.051,173,2.391,174,3.255,175,3.255,176,2.051,177,1.016,178,1.566,179,4.084,180,1.759,181,1.963,182,1.793,183,3.951,184,2.051,185,2.051,186,1.793,187,4.047,188,1.759,189,2.486,190,1.759,191,1,192,1.422,193,2.791,194,1.566,195,2.051,196,1.566,197,1.358,198,2.051,199,3.255,200,2.051,201,2.051,202,2.051,203,2.051,204,2.051,205,2.051,206,2.051,207,0.995,208,2.051,209,2.051,210,1.759,211,1.566,212,1.422,213,0.995,214,1.85,215,1.759,216,1.759,217,1.759,218,4.047,219,1.422,220,2.051,221,2.257,222,3.255,223,2.051,224,2.051,225,4.047,226,2.051,227,2.051,228,2.051,229,2.051,230,3.255,231,4.047,232,3.255,233,2.051,234,2.051,235,2.051,236,2.051,237,4.047,238,3.255,239,2.051,240,2.051,241,2.051,242,2.486,243,4.033,244,2.257,245,1.793,246,2.791,247,2.486,248,3.519,249,3.519,250,1.579,251,2.791,252,1.923,253,2.257,254,0.452,255,0.718,256,0.452,257,1.016,258,0.452,259,0.452,260,0.407,261,0.452,262,0.407,263,0.452,264,0.407,265,0.452,266,0.407,267,0.452,268,0.407,269,0.452,270,0.452,271,0.407,272,0.429,273,0.718,274,0.407,275,0.366,276,0.407,277,0.452,278,0.407,279,0.452,280,0.386,281,0.429,282,0.452,283,0.407,284,0.452,285,0.407,286,0.452,287,0.452,288,0.407,289,0.452,290,0.407,291,0.452,292,0.429,293,0.429,294,0.452,295,0.407,296,0.452,297,0.407,298,0.452,299,0.407,300,0.429,301,0.452,302,0.407,303,0.429,304,0.452,305,0.407,306,0.452,307,0.407,308,0.429,309,0.452,310,0.429,311,0.452,312,0.407,313,0.452,314,0.386,315,0.452,316,0.452,317,0.008,318,0.008]],["title/components/AiComponent.html",[0,0.068,260,0.725]],["body/components/AiComponent.html",[0,0.109,1,0.755,2,1.018,3,0.245,4,0.182,5,0.838,7,0.838,8,0.838,9,0.136,25,0.755,26,1.674,27,1.354,28,0.641,29,0.726,30,1.786,31,1.533,32,1.19,34,2.021,35,0.755,38,1.131,40,0.229,41,0.726,51,0.771,61,0.771,66,0.587,70,0.606,71,0.02,72,0.466,73,0.35,74,0.571,80,0.795,85,0.571,100,0.538,118,0.331,130,1.131,134,0.817,135,0.683,153,0.285,156,0.159,158,1.96,163,1.257,165,0.159,166,0.182,168,0.865,177,1.131,191,1.035,254,0.838,255,1.28,256,0.838,257,1.37,258,0.838,259,0.838,260,1.234,261,0.838,262,0.755,263,0.838,264,0.755,265,0.838,266,0.755,267,0.838,268,0.755,269,0.838,270,0.838,271,0.755,272,0.795,273,1.131,274,0.755,275,0.677,276,0.755,277,0.838,278,0.755,279,0.838,280,0.715,281,0.795,282,0.838,283,0.755,284,0.838,285,0.755,286,0.838,287,0.838,288,0.755,289,0.838,290,0.755,291,0.838,292,0.795,293,0.795,294,0.838,295,0.755,296,0.838,297,0.755,298,0.838,299,0.755,300,0.795,301,0.838,302,0.755,303,0.795,304,0.838,305,0.755,306,0.838,307,0.755,308,0.795,309,0.838,310,0.795,311,0.838,312,0.755,313,0.838,314,0.715,315,0.838,316,0.838,317,0.013,318,0.013,319,3.257,320,3.671,321,4.024,322,5.803,323,5.127,324,2.213,325,5.127,326,5.803,327,5.803,328,3.699,329,6.685,330,3.799,331,4.308,332,5.803,333,6.213,334,5.127,335,5.127,336,3.799,337,6.213,338,2.164,339,3.799,340,2.421,341,3.257,342,2.244,343,4.396,344,3.799,345,2.9,346,3.257,347,3.799,348,3.799,349,3.799,350,3.799,351,2.634,352,3.257,353,5.803,354,2.421,355,3.799,356,5.127,357,3.799,358,3.799,359,3.799,360,3.268,361,5.127]],["title/components/AnalysisComponent.html",[0,0.068,262,0.725]],["body/components/AnalysisComponent.html",[0,0.12,1,0.923,2,1.162,3,0.28,4,0.222,5,1.025,7,1.025,8,1.025,9,0.166,25,0.923,26,1.697,27,1.372,28,0.784,29,0.829,32,1.079,35,0.923,38,1.29,71,0.019,72,0.469,80,0.973,100,0.659,130,1.29,153,0.194,156,0.194,165,0.194,166,0.222,254,1.025,255,1.29,256,1.025,257,1.481,258,1.025,259,1.025,260,0.923,261,1.025,262,1.334,263,1.025,264,0.923,265,1.025,266,0.923,267,1.025,268,0.923,269,1.025,270,1.025,271,0.923,272,0.973,273,1.29,274,0.923,275,0.829,276,0.923,277,1.025,278,0.923,279,1.025,280,0.875,281,0.973,282,1.025,283,0.923,284,1.025,285,0.923,286,1.025,287,1.025,288,0.923,289,1.025,290,0.923,291,1.025,292,0.973,293,0.973,294,1.025,295,0.923,296,1.025,297,0.923,298,1.025,299,0.923,300,0.973,301,1.025,302,0.923,303,0.973,304,1.025,305,0.923,306,1.025,307,0.923,308,0.973,309,1.025,310,0.973,311,1.025,312,0.923,313,1.025,314,0.875,315,1.025,316,1.025,317,0.015,318,0.015,324,2.524,362,3.985,363,5.758,364,5.848,365,5.848,366,5.014]],["title/components/AppComponent.html",[0,0.068,264,0.725]],["body/components/AppComponent.html",[0,0.108,1,0.959,2,0.691,3,0.166,4,0.107,5,0.493,6,1.021,7,0.493,8,0.493,9,0.08,11,1.706,13,2.689,25,0.444,26,1.595,27,1.309,28,0.377,29,0.493,30,1.212,31,1.041,32,0.808,34,1.49,35,0.444,36,1.591,38,0.768,40,0.135,41,0.493,51,0.524,54,2.492,61,0.726,66,0.615,68,1.706,70,0.835,71,0.02,72,0.481,73,0.335,74,0.787,79,3.359,80,0.468,85,0.726,92,0.643,94,2.658,95,2.658,96,2.658,100,0.316,107,3.337,114,2.499,118,0.457,126,2.057,130,0.768,133,0.668,134,0.77,135,0.643,138,1.883,141,1.549,146,2.658,148,1.835,153,0.299,154,1.549,156,0.145,163,0.739,165,0.093,166,0.107,167,3.39,168,1.011,191,0.621,197,0.604,245,1.23,254,0.493,255,0.768,256,0.493,257,1.065,258,0.493,259,0.493,260,0.959,261,0.493,262,0.959,263,0.493,264,1.102,265,0.493,266,0.959,267,0.493,268,0.959,269,0.493,270,0.493,271,0.444,272,0.468,273,0.768,274,0.444,275,0.398,276,0.444,277,0.493,278,0.959,279,0.493,280,0.909,281,1.096,282,0.493,283,0.444,284,0.493,285,0.444,286,0.493,287,0.493,288,0.959,289,0.493,290,0.444,291,0.493,292,1.011,293,0.468,294,0.493,295,0.959,296,0.493,297,0.959,298,0.493,299,0.444,300,0.468,301,0.493,302,0.444,303,0.468,304,0.493,305,0.959,306,0.493,307,0.444,308,0.468,309,0.493,310,1.011,311,0.493,312,0.959,313,0.493,314,0.909,315,0.493,316,0.493,317,0.009,318,0.009,342,2.057,346,1.915,367,1.915,368,1.18,369,3.079,370,2.985,371,2.658,372,5.136,373,3.63,374,5.235,375,3.717,376,4.83,377,3.997,378,3.691,379,2.658,380,4.83,381,3.3,382,3.481,383,4.277,384,3.481,385,3.668,386,4.277,387,4.277,388,4.277,389,3.266,390,2.434,391,4.277,392,3.481,393,3.481,394,2.658,395,3.481,396,3.481,397,1.915,398,4.574,399,2.342,400,3.3,401,2.198,402,6.292,403,4.154,404,4.83,405,3.3,406,3.481,407,6.154,408,3.481,409,5.235,410,2.658,411,4.277,412,4.277,413,3.481,414,4.235,415,2.658,416,2.985,417,2.966,418,3.846,419,2.658,420,2.057,421,2.985,422,3.481,423,2.808,424,2.219,425,2.985,426,2.658,427,3.833,428,2.234,429,3.266,430,3.481,431,3.481,432,2.985,433,2.985,434,2.985,435,2.985,436,3.481,437,3.481,438,2.234,439,3.481,440,1.747,441,5.546,442,2.234,443,2.234,444,2.234,445,2.234,446,2.234,447,2.234,448,2.234,449,2.234,450,2.985,451,2.985,452,3.481,453,3.481,454,2.985,455,2.985,456,3.481,457,3.481,458,2.234,459,2.234,460,3.079,461,2.234,462,2.985,463,2.658,464,2.219,465,2.234,466,1.982,467,5.546,468,4.235,469,3.481,470,5.235,471,2.234,472,3.481,473,3.481,474,2.985,475,2.414,476,2.234,477,2.234,478,2.234,479,3.481,480,1.915,481,1.549,482,1.549,483,2.234,484,2.234,485,2.234,486,1.915,487,1.915,488,1.796,489,1.915,490,2.234,491,2.234,492,2.234,493,2.234,494,2.234,495,1.915,496,2.234,497,2.234,498,2.234,499,2.234,500,2.234,501,2.234,502,2.234,503,2.234,504,1.32,505,1.424,506,1.32,507,1.549,508,2.234,509,1.706,510,2.234,511,1.915,512,2.234,513,2.234,514,1.549,515,2.234,516,2.234,517,1.549,518,2.234,519,2.234,520,2.234,521,1.915,522,2.234,523,2.414,524,2.234,525,2.234,526,2.234,527,2.234,528,2.234,529,3.481,530,3.481,531,2.234,532,1.915,533,1.32,534,2.234,535,2.234,536,2.234,537,2.234,538,2.234,539,2.234,540,2.985,541,1.549,542,1.23,543,2.234,544,2.234,545,2.234,546,1.706,547,3.688,548,1.424,549,2.234,550,2.234,551,2.234,552,2.234,553,2.234,554,2.234,555,1.915,556,3.481,557,2.234,558,2.234,559,1.915,560,2.234,561,2.234,562,3.481,563,2.234,564,2.985,565,2.234,566,0.912]],["title/injectables/AppVersionService.html",[567,0.371,568,2.157]],["body/injectables/AppVersionService.html",[3,0.232,4,0.232,9,0.234,13,2.353,27,1.071,40,0.293,41,0.851,51,0.904,61,1.054,66,0.616,71,0.02,73,0.293,79,3.1,85,1.026,114,2.943,118,0.623,134,0.774,135,0.647,153,0.251,156,0.203,165,0.203,166,0.232,168,1.101,177,1.07,317,0.016,318,0.016,368,1.186,369,4.552,567,0.611,568,4.029,569,1.606,570,5.847,571,4.347,572,4.161,573,4.587,574,5.744,575,6.008,576,5.151,577,3.203,578,4.166,579,4.525,580,6.819,581,6.008,582,4.853,583,5.151,584,6.008,585,5.151,586,3.093,587,1.247,588,4.853]],["title/interfaces/Budget.html",[589,0.987,590,1.668]],["body/interfaces/Budget.html",[3,0.221,4,0.221,9,0.165,40,0.278,41,0.825,61,0.694,71,0.02,73,0.404,92,0.959,118,0.646,129,2.728,133,1.379,153,0.243,156,0.193,165,0.243,166,0.221,168,0.982,177,1.555,191,1.038,250,3.247,317,0.015,318,0.015,368,1.127,401,2.34,440,1.884,466,1.526,567,0.592,587,1.186,589,1.247,590,3.222,591,2.542,592,3.523,593,5.022,594,3.455,595,3.247,596,2.604,597,2.38,598,2.941,599,2.108,600,2.377,601,2.136,602,2.108,603,2.726,604,3.455,605,3.523,606,2.726,607,2.726,608,3.768,609,2.726,610,2.726,611,3.199,612,5.468,613,3.768,614,3.956,615,3.439,616,2.726,617,3.439,618,4.991,619,3.092,620,3.199,621,3.956,622,3.199]],["title/components/BudgetComponent.html",[0,0.068,266,0.725]],["body/components/BudgetComponent.html",[0,0.078,1,0.429,2,0.673,3,0.162,4,0.103,5,0.476,7,0.476,8,0.476,9,0.077,15,1.218,16,0.714,23,1.749,24,2.472,25,0.429,26,1.588,27,1.284,28,0.869,29,0.672,30,1.181,31,1.634,32,0.787,33,3.195,34,1.458,35,0.429,38,0.748,40,0.13,41,0.48,51,0.51,52,4.065,54,2.446,57,4.065,61,0.51,63,3.62,64,2.499,65,3.378,66,0.678,70,0.344,71,0.02,72,0.336,73,0.404,74,0.325,75,3.195,80,0.452,85,0.937,86,3.934,92,0.985,100,0.306,115,2.249,118,0.45,129,2.291,130,0.748,133,1.013,134,1.044,135,0.872,148,2.102,153,0.239,156,0.09,157,1.648,158,1.114,159,1.376,163,0.714,164,1.648,165,0.141,166,0.162,168,0.869,170,1.851,171,1.376,173,1.276,177,0.923,178,1.648,179,3.195,180,1.851,191,1.225,197,1.857,207,1.047,210,1.851,211,3.195,212,2.902,213,1.047,214,1.912,215,1.851,216,1.851,217,1.851,219,1.497,221,1.497,242,2.588,243,3.791,250,2.029,254,0.476,255,0.748,256,0.476,257,1.046,258,0.476,259,0.476,260,0.429,261,0.476,262,0.429,263,0.476,264,0.429,265,0.476,266,0.942,267,0.476,268,0.429,269,0.476,270,0.476,271,0.429,272,0.452,273,0.748,274,0.429,275,0.385,276,0.429,277,0.476,278,0.429,279,0.476,280,0.407,281,0.452,282,0.476,283,0.429,284,0.476,285,0.429,286,0.476,287,0.476,288,0.429,289,0.476,290,0.429,291,0.476,292,0.452,293,0.452,294,0.476,295,0.429,296,0.476,297,0.429,298,0.476,299,0.429,300,0.452,301,0.476,302,0.429,303,0.452,304,0.476,305,0.429,306,0.476,307,0.429,308,0.452,309,0.476,310,0.452,311,0.476,312,0.429,313,0.476,314,0.407,315,0.476,316,0.476,317,0.009,318,0.009,324,1.463,338,1.181,381,2.612,390,2.212,466,1.121,504,1.276,533,3.23,540,2.906,541,1.497,542,1.189,559,1.851,566,1.936,590,3.162,594,2.446,595,2.029,596,2.233,598,3.645,623,1.648,624,3.39,625,3.39,626,4.185,627,4.185,628,4.185,629,4.185,630,4.185,631,5.152,632,4.185,633,4.185,634,2.783,635,4.185,636,3.588,637,5.152,638,4.185,639,4.185,640,3.588,641,4.185,642,4.741,643,4.741,644,3.62,645,4.741,646,4.741,647,4.741,648,4.065,649,1.851,650,3.39,651,2.159,652,2.159,653,2.159,654,2.159,655,2.159,656,2.159,657,2.159,658,2.159,659,2.159,660,2.159,661,2.159,662,2.159,663,2.159,664,4.175,665,3.195,666,2.159,667,2.159,668,2.159,669,2.159,670,2.159,671,2.159,672,2.159,673,2.159,674,2.159,675,2.159,676,2.159,677,2.159,678,2.159,679,1.648,680,1.851,681,2.159,682,1.276,683,1.851,684,1.851,685,2.159,686,2.159,687,1.497,688,1.497,689,2.159,690,1.497,691,2.906,692,4.185,693,2.159,694,4.185,695,3.588,696,2.159,697,2.159,698,4.185,699,4.185,700,2.159,701,2.159,702,2.159,703,2.159,704,3.39,705,1.497,706,2.159,707,3.39,708,2.159,709,2.159,710,2.159,711,3.39,712,2.159,713,2.159,714,2.159,715,2.159,716,4.741,717,2.159,718,2.159,719,2.159,720,2.159,721,2.159,722,1.851,723,1.851,724,2.159,725,5.152,726,2.159,727,3.588,728,2.159,729,4.903,730,4.185,731,3.39,732,4.185,733,2.159,734,0.932,735,1.851,736,2.159,737,4.741,738,1.648,739,1.648,740,1.851,741,1.648,742,1.276,743,3.39,744,2.159,745,3.39,746,2.159,747,2.159,748,1.851,749,2.159,750,2.35,751,2.159,752,2.159,753,2.159,754,2.159,755,3.39,756,2.159,757,3.39,758,2.906,759,3.62,760,2.906,761,1.851,762,4.185,763,2.159,764,3.39,765,2.159,766,2.159,767,2.159,768,2.159,769,2.161,770,2.159,771,4.741,772,1.851,773,3.39,774,4.185,775,1.851,776,1.851,777,2.159,778,2.159,779,2.159,780,2.159,781,2.159,782,2.159,783,2.305,784,2.159,785,2.159,786,2.159,787,2.588,788,3.39,789,2.906,790,3.39,791,3.23,792,3.39,793,3.39,794,2.906,795,3.39,796,1.376,797,3.39,798,2.906]],["title/injectables/BudgetService.html",[567,0.371,598,2.327]],["body/injectables/BudgetService.html",[3,0.207,4,0.207,9,0.155,28,0.942,40,0.261,51,0.84,61,0.84,66,0.655,70,1.042,71,0.02,72,0.525,73,0.395,74,0.984,85,1.018,92,1.043,118,0.63,129,2.394,133,1.67,153,0.233,156,0.18,165,0.233,166,0.207,168,1.103,177,1.529,191,0.996,250,3.171,317,0.015,318,0.015,368,1.057,381,3.077,401,2.544,440,1.766,466,1.848,567,0.568,569,1.431,587,1.112,589,1.169,590,3.168,592,3.303,593,4.892,594,2.232,595,2.098,596,1.766,597,2.232,598,3.561,599,2.988,600,2.281,601,2.05,602,1.977,603,3.863,604,3.374,605,3.303,606,3.3,607,3.655,608,3.655,609,2.556,610,2.556,611,2.999,612,5.305,613,3.655,614,4.79,615,3.863,616,3.655,617,3.3,618,4.79,619,3,620,2.999,621,4.79,622,2.999,783,3.077,799,2.999,800,4.326,801,4.326,802,4.326,803,4.326,804,4.326,805,4.326]],["title/components/CalendarComponent.html",[0,0.068,268,0.725]],["body/components/CalendarComponent.html",[0,0.089,1,0.528,2,0.79,3,0.19,4,0.127,5,0.586,7,0.586,8,0.586,9,0.095,15,1.663,16,2.094,21,1.927,23,2.051,24,2.813,25,0.528,26,1.625,27,1.314,28,0.448,29,0.749,31,0.794,32,0.923,34,1.659,35,0.528,38,0.877,40,0.16,41,0.563,51,0.598,54,2.727,61,0.598,64,2.713,66,0.671,70,0.902,71,0.02,72,0.494,73,0.413,74,0.851,80,0.556,85,0.893,91,1.927,92,1.006,100,0.377,114,1.147,115,1.841,116,1.816,118,0.584,130,0.877,133,0.794,134,1.031,135,0.862,142,2.029,148,1.749,153,0.221,156,0.111,159,1.694,163,0.879,165,0.111,166,0.127,168,0.448,173,1.57,191,1.154,193,4.083,197,1.781,207,1.289,213,1.927,244,2.756,245,2.19,254,0.586,255,0.877,256,0.586,257,1.309,258,0.586,259,0.586,260,0.528,261,0.586,262,0.528,263,0.586,264,0.528,265,0.586,266,0.528,267,0.586,268,1.05,269,0.586,270,0.586,271,0.528,272,0.556,273,0.877,274,0.528,275,0.474,276,0.528,277,0.586,278,0.528,279,0.586,280,0.5,281,0.556,282,0.586,283,0.528,284,0.586,285,0.528,286,0.586,287,0.586,288,0.528,289,0.586,290,0.528,291,0.586,292,0.556,293,0.556,294,0.586,295,0.528,296,0.586,297,0.528,298,0.586,299,0.528,300,0.556,301,0.586,302,0.528,303,0.556,304,0.586,305,0.528,306,0.586,307,0.528,308,0.556,309,0.586,310,0.556,311,0.586,312,0.528,313,0.586,314,0.5,315,0.586,316,0.586,317,0.01,318,0.01,324,1.716,338,1.384,389,3.636,390,2.549,504,1.57,533,1.57,564,2.278,566,1.944,594,2.051,595,2.563,596,2.69,634,2.812,640,4.083,644,4.035,648,3.408,649,2.278,664,2.029,687,1.843,688,1.843,695,3.408,723,2.278,734,1.716,761,2.278,791,3.122,796,1.694,806,2.278,807,2.756,808,3.975,809,3.975,810,4.762,811,5.658,812,3.636,813,3.636,814,4.762,815,5.658,816,5.658,817,4.762,818,3.975,819,3.975,820,3.975,821,3.975,822,2.657,823,2.657,824,3.975,825,2.657,826,3.975,827,2.657,828,2.657,829,3.975,830,2.657,831,3.975,832,4.486,833,2.657,834,2.911,835,2.657,836,2.657,837,2.657,838,3.975,839,2.657,840,3.975,841,2.657,842,2.657,843,2.657,844,2.657,845,2.657,846,2.657,847,3.975,848,3.975,849,3.975,850,3.975,851,3.975,852,3.975,853,3.975,854,3.975,855,5.658,856,2.278,857,2.657,858,2.657,859,3.975,860,4.532,861,2.657,862,3.975,863,3.975,864,3.975,865,4.762,866,2.657,867,2.278,868,2.657,869,2.657,870,2.657,871,2.657,872,2.657,873,2.756,874,2.657,875,1.694,876,2.657,877,1.371,878,2.657,879,2.657,880,2.657,881,2.657,882,3.035,883,2.657,884,2.657,885,2.029,886,2.657,887,2.657,888,3.975,889,4.532,890,2.657,891,2.278,892,2.657,893,2.657,894,2.657,895,2.534,896,1.57,897,1.843,898,2.657,899,2.657,900,3.975,901,2.756,902,3.035,903,3.035,904,3.035,905,3.408,906,3.408,907,3.408,908,3.408]],["title/interfaces/Category.html",[100,0.517,589,0.987]],["body/interfaces/Category.html",[3,0.195,4,0.195,9,0.146,16,1.348,29,0.852,40,0.246,41,0.761,71,0.02,72,0.513,73,0.42,92,0.904,100,1.022,118,0.659,133,1.218,153,0.267,156,0.17,165,0.224,166,0.195,168,0.907,177,1.575,181,3.496,191,1.274,197,1.625,317,0.014,318,0.014,368,0.996,390,2.326,401,2.206,423,1.976,424,2.598,440,1.664,466,1.348,546,3.112,548,2.598,566,1.664,567,0.547,587,1.047,589,1.102,591,2.245,596,2.61,597,2.103,599,1.863,600,2.194,601,1.972,602,1.863,603,2.408,604,3.297,606,2.408,607,2.408,608,3.552,609,2.408,610,2.408,613,3.175,615,3.175,616,2.408,617,2.408,619,2.606,705,2.826,734,2.758,901,2.826,909,3.112,910,5.696,911,3.521,912,3.521,913,4.03,914,3.495,915,3.495,916,2.408,917,2.598,918,2.826,919,2.598,920,2.408,921,1.158,922,3.495,923,2.598,924,2.079,925,3.425,926,3.495,927,3.495,928,4.608,929,3.112,930,2.103,931,3.495,932,3.495,933,2.826,934,2.408,935,3.495,936,3.495,937,3.495,938,5.155,939,3.495,940,3.495,941,3.495,942,3.495,943,4.608,944,3.495,945,3.726,946,3.495,947,3.495,948,3.495]],["title/components/CategoryDropdownComponent.html",[0,0.068,35,0.725]],["body/components/CategoryDropdownComponent.html",[0,0.114,1,0.512,2,0.772,3,0.186,4,0.123,5,0.568,6,1.178,7,1.031,8,0.568,9,0.092,13,2.708,15,0.662,25,0.512,26,1.62,27,1.31,28,0.435,29,0.737,30,1.353,31,1.161,32,0.902,34,1.628,35,1.034,36,1.775,38,0.857,40,0.155,41,0.55,48,4.263,51,0.584,54,2.685,61,0.703,66,0.649,68,2.966,70,0.83,71,0.02,72,0.503,73,0.415,74,0.943,79,3.028,80,0.54,85,0.84,89,3.974,92,0.983,96,2.966,99,2.693,100,1.049,101,3.33,102,5.293,103,4.348,106,2.125,118,0.512,125,3.241,126,2.295,128,2.693,130,1.148,133,1.161,134,1.113,135,0.744,138,1.221,144,2.966,146,2.966,147,3.075,148,1.722,151,3.609,153,0.217,154,1.787,155,1.787,156,0.108,161,4.807,163,0.853,165,0.108,166,0.223,167,2.867,168,0.435,189,1.967,190,2.209,191,0.46,197,1.05,254,0.568,255,0.857,256,0.568,257,1.148,258,0.568,259,0.568,260,0.512,261,0.568,262,0.512,263,0.568,264,0.512,265,0.568,266,0.512,267,0.568,268,0.512,269,0.568,270,0.568,271,0.512,272,1.343,273,0.857,274,0.512,275,0.46,276,0.512,277,0.568,278,0.512,279,0.568,280,0.485,281,0.54,282,0.568,283,0.512,284,0.568,285,0.512,286,0.568,287,0.568,288,0.512,289,0.568,290,0.512,291,0.568,292,0.54,293,1.169,294,0.568,295,0.512,296,0.568,297,0.512,298,0.568,299,0.512,300,0.54,301,0.568,302,0.512,303,0.54,304,0.568,305,0.512,306,0.568,307,0.512,308,0.54,309,0.568,310,0.54,311,0.568,312,0.512,313,0.568,314,0.485,315,0.568,316,0.568,317,0.01,318,0.01,371,2.966,390,2.425,394,2.966,410,2.966,426,1.967,427,3.534,429,3.974,435,4.008,466,1.285,481,2.693,504,1.522,547,2.966,548,1.642,772,4.462,920,3.599,921,0.732,924,2.752,949,5.944,950,2.209,951,3.33,952,4.462,953,4.462,954,4.675,955,3.884,956,4.675,957,4.675,958,5.204,959,3.884,960,3.884,961,5.204,962,1.883,963,5.584,964,4.675,965,2.693,966,4.675,967,3.33,968,2.209,969,3.884,970,5.204,971,2.577,972,5.032,973,5.204,974,2.577,975,3.33,976,3.33,977,3.33,978,3.884,979,2.577,980,3.609,981,2.577,982,2.209,983,3.884,984,4.675,985,4.675,986,3.569,987,3.569,988,2.577,989,3.884,990,2.577,991,3.884,992,3.33,993,3.884,994,2.577,995,2.577,996,3.33,997,2.577,998,3.884,999,2.577,1000,2.693,1001,2.209,1002,2.577,1003,4.008,1004,2.577,1005,3.884,1006,3.884,1007,3.884,1008,5.584,1009,2.577,1010,2.209,1011,1.967,1012,2.209,1013,2.577,1014,2.577,1015,3.33,1016,3.884]],["title/injectables/CategoryService.html",[567,0.371,920,2.157]],["body/injectables/CategoryService.html",[3,0.186,4,0.186,9,0.139,16,1.285,28,0.878,29,0.832,40,0.234,51,0.783,61,0.584,66,0.649,70,1,71,0.02,72,0.525,73,0.378,74,0.943,85,1.012,92,1.012,100,1.021,118,0.637,133,1.556,153,0.262,156,0.162,165,0.217,166,0.186,168,1.058,177,1.56,181,3.431,191,1.262,197,1.587,317,0.014,318,0.014,368,0.949,381,2.867,390,2.659,401,2.469,423,1.884,424,2.477,440,1.586,466,1.722,546,2.967,548,2.477,566,1.586,567,0.53,569,1.285,587,0.998,589,1.05,596,2.125,597,2.005,599,2.866,600,2.125,601,1.91,602,1.776,603,3.705,604,3.235,606,3.075,607,3.468,608,3.468,609,2.295,610,2.295,613,3.075,615,3.705,616,3.468,617,2.295,619,2.524,705,2.694,734,1.677,783,2.867,799,2.694,901,2.694,909,2.967,910,4.463,911,2.14,912,2.14,913,3.468,914,3.331,915,3.331,916,2.295,917,2.477,918,2.694,919,2.477,920,3.075,921,1.104,922,5.377,923,2.477,924,2.014,925,3.318,926,3.331,927,3.331,928,4.463,929,2.967,930,2.005,931,3.331,932,3.331,933,2.694,934,2.295,935,3.331,936,3.331,937,3.331,938,5.033,939,4.463,940,3.331,941,4.463,942,3.331,943,4.463,944,3.331,945,3.61,946,3.331,947,3.331,948,3.331,1017,3.885,1018,3.885,1019,3.885,1020,3.885,1021,3.885,1022,3.885,1023,3.885]],["title/interfaces/ChatMessage.html",[589,0.987,1024,2.327]],["body/interfaces/ChatMessage.html",[3,0.178,4,0.178,9,0.133,15,0.956,25,0.739,40,0.224,41,0.716,71,0.02,72,0.494,73,0.389,78,1.919,114,2.658,118,0.593,135,0.858,138,2.089,153,0.277,156,0.155,165,0.211,166,0.178,168,1.039,177,1.499,191,1.25,197,1.005,207,1.803,213,1.803,214,1.7,252,2.197,275,0.663,317,0.013,318,0.013,328,2.371,338,1.295,340,2.371,351,4.271,354,2.371,360,2.371,368,0.909,399,2.784,405,2.049,475,2.579,482,2.579,488,1.919,505,2.371,506,2.197,567,0.514,573,3.859,577,1.7,586,2.371,587,0.956,589,1.005,591,2.049,601,1.365,769,2.371,834,2.049,877,3.323,895,3.222,896,2.197,916,2.197,921,1.057,1024,3.926,1025,2.84,1026,2.84,1027,5.19,1028,5.073,1029,3.859,1030,3.505,1031,3.859,1032,4.334,1033,2.84,1034,2.371,1035,2.371,1036,2.84,1037,3.189,1038,3.189,1039,2.84,1040,2.84,1041,2.84,1042,2.84,1043,2.579,1044,3.189,1045,3.189,1046,2.84,1047,3.189,1048,2.84,1049,3.189,1050,3.189,1051,3.926,1052,5.19,1053,3.189,1054,5.281,1055,3.189,1056,3.189,1057,4.334,1058,4.334,1059,3.859,1060,3.189,1061,3.189,1062,2.84,1063,3.189,1064,3.189,1065,3.189,1066,4.384,1067,3.189,1068,3.189,1069,3.189,1070,3.189,1071,2.84,1072,4.384,1073,3.189,1074,3.189,1075,2.371,1076,3.189,1077,3.189,1078,3.189,1079,3.859,1080,5.281,1081,3.981,1082,4.334,1083,4.334,1084,4.334,1085,3.189,1086,3.189,1087,2.371,1088,4.334,1089,4.334,1090,3.189,1091,3.189,1092,3.189,1093,3.189,1094,3.189,1095,3.189,1096,3.189,1097,3.189,1098,3.189,1099,2.84,1100,3.189,1101,2.84,1102,2.84,1103,2.84,1104,3.189,1105,3.189,1106,2.84,1107,3.189,1108,2.579,1109,3.189,1110,3.189,1111,3.189,1112,2.579,1113,3.189,1114,4.334,1115,3.981,1116,2.579,1117,3.189,1118,3.189,1119,2.84,1120,3.859,1121,3.859,1122,2.84,1123,2.84,1124,3.859,1125,2.84,1126,3.859,1127,2.579,1128,2.84,1129,2.84,1130,4.384,1131,2.84,1132,2.84,1133,2.84,1134,2.84]],["title/injectables/ConfigService.html",[567,0.371,1135,2.532]],["body/injectables/ConfigService.html",[3,0.218,4,0.218,9,0.164,13,2.215,40,0.276,41,0.82,51,0.87,61,0.955,66,0.599,71,0.02,73,0.276,76,4.011,78,3.443,79,2.985,83,4.011,85,1.004,114,3.035,118,0.601,134,0.728,135,0.846,153,0.241,156,0.191,165,0.191,166,0.218,168,1.071,177,1.4,308,1.211,317,0.015,318,0.015,368,1.116,369,3.687,415,5.257,420,4.27,523,4.627,567,0.589,569,1.512,577,3.334,578,4.011,579,4.402,586,2.912,587,1.174,1135,4.627,1136,3.917,1137,5.785,1138,5.785,1139,4.627,1140,4.96,1141,6.031,1142,5.785,1143,5.903,1144,5.443,1145,6.673,1146,5.785,1147,4.569,1148,4.96,1149,4.96,1150,5.785,1151,4.96,1152,4.011,1153,4.011,1154,5.785,1155,5.785,1156,5.785,1157,4.569]],["title/components/CustomModalComponent.html",[0,0.068,271,0.725]],["body/components/CustomModalComponent.html",[0,0.115,1,0.846,2,1.098,3,0.264,4,0.203,5,0.939,7,0.939,8,0.939,9,0.152,25,0.846,26,1.687,27,1.364,28,0.718,29,0.783,30,1.926,31,1.653,32,0.988,35,0.846,38,1.219,40,0.257,66,0.58,71,0.02,72,0.444,73,0.37,80,0.891,92,0.64,100,0.603,106,2.654,118,0.567,130,1.219,134,0.881,135,0.737,153,0.178,156,0.178,165,0.178,166,0.203,254,0.939,255,1.219,256,0.939,257,1.433,258,0.939,259,0.939,260,0.846,261,0.939,262,0.846,263,0.939,264,0.846,265,0.939,266,0.846,267,0.939,268,0.846,269,0.939,270,0.939,271,1.291,272,1.41,273,1.219,274,0.846,275,0.759,276,0.846,277,0.939,278,0.846,279,0.939,280,0.802,281,0.891,282,0.939,283,0.846,284,0.939,285,0.846,286,0.939,287,0.939,288,0.846,289,0.939,290,0.846,291,0.939,292,0.891,293,0.891,294,0.939,295,0.846,296,0.939,297,0.846,298,0.939,299,0.846,300,0.891,301,0.939,302,0.846,303,0.891,304,0.939,305,0.846,306,0.939,307,0.846,308,0.891,309,0.939,310,0.891,311,0.939,312,0.846,313,0.939,314,0.802,315,0.939,316,0.939,317,0.014,318,0.014,796,2.713,962,2.681,1158,5.573,1159,5.573,1160,3.25,1161,4.963,1162,4.74,1163,6.14,1164,6.14,1165,5.366,1166,4.257,1167,2.952,1168,4.257,1169,4.257]],["title/interfaces/Expense.html",[29,0.517,589,0.987]],["body/interfaces/Expense.html",[3,0.17,4,0.17,9,0.128,15,1.685,16,1.179,21,2.934,29,0.996,40,0.215,41,0.695,64,1.628,71,0.02,73,0.432,74,0.986,91,2.934,92,0.844,100,0.695,115,2.21,116,2.765,118,0.665,129,2.6,133,1.065,153,0.234,156,0.149,165,0.205,166,0.17,168,0.601,177,1.6,181,2.934,182,3.333,186,3.333,191,1.294,192,2.471,194,2.721,197,1.816,250,3.18,317,0.013,318,0.013,338,1.956,368,0.871,401,2.06,440,1.455,466,2.002,566,1.455,567,0.499,587,0.916,589,0.963,591,1.963,595,1.728,596,2.47,597,1.839,599,1.628,600,2.004,601,1.801,602,1.628,603,2.105,604,3.384,606,2.105,607,2.105,608,3.574,609,2.105,610,2.105,611,2.471,613,3.317,615,2.9,616,2.105,617,2.9,619,2.934,620,3.404,622,3.404,882,2.721,916,2.105,917,2.271,918,2.471,919,2.271,921,1.013,923,2.271,924,1.378,925,2.271,933,2.471,934,2.105,945,2.471,1170,2.721,1171,5.441,1172,5.441,1173,4.845,1174,4.818,1175,3.055,1176,3.055,1177,3.055,1178,3.055,1179,3.055,1180,3.055,1181,3.055,1182,4.209,1183,3.055,1184,3.055,1185,3.055,1186,3.055,1187,3.055,1188,3.055,1189,3.055,1190,3.055,1191,3.055,1192,3.055,1193,3.055,1194,3.055,1195,3.055,1196,3.055,1197,4.814,1198,3.055,1199,4.814,1200,3.055,1201,3.055,1202,3.055,1203,3.055,1204,3.055,1205,3.055,1206,4.814,1207,3.055,1208,3.055,1209,3.055,1210,3.055,1211,4.209,1212,3.055]],["title/components/ExpenseDetailsModalComponent.html",[0,0.068,274,0.725]],["body/components/ExpenseDetailsModalComponent.html",[0,0.09,1,0.537,2,0.8,3,0.193,4,0.129,5,0.597,7,0.597,8,0.597,9,0.097,15,1.237,21,3.002,23,2.078,24,2.843,25,0.537,26,1.627,27,1.316,28,0.456,29,0.938,30,1.403,31,1.204,32,0.935,33,3.675,34,1.676,35,1.059,38,0.888,40,0.163,41,0.571,48,3.675,51,0.606,54,2.751,55,3.454,61,0.606,62,2.32,63,4.071,66,0.665,70,0.642,71,0.02,72,0.428,73,0.399,74,0.606,75,3.076,80,0.566,85,0.931,86,3.675,91,3.002,92,0.931,97,3.454,100,0.951,106,2.177,115,2.156,116,2.829,118,0.465,129,2.515,130,0.888,134,0.767,135,0.641,144,3.076,148,1.592,153,0.238,156,0.168,157,2.066,158,1.396,161,1.876,162,2.32,163,0.895,165,0.113,166,0.129,168,0.456,173,2.38,178,2.066,179,4.353,181,1.953,182,1.49,183,3.454,186,1.49,188,2.32,189,2.066,191,0.482,242,3.076,243,4.411,244,3.697,245,2.937,246,3.454,247,3.076,248,4.071,249,4.071,250,1.953,251,3.454,252,3.15,253,3.697,254,0.597,255,0.888,256,0.597,257,1.176,258,0.597,259,0.597,260,0.537,261,0.597,262,0.537,263,0.597,264,0.537,265,0.597,266,0.537,267,0.597,268,0.537,269,0.597,270,0.597,271,0.537,272,0.566,273,0.888,274,1.059,275,1.343,276,0.537,277,0.597,278,0.537,279,0.597,280,0.509,281,0.566,282,0.597,283,0.537,284,0.597,285,0.537,286,0.597,287,0.597,288,0.537,289,0.597,290,0.537,291,0.597,292,0.566,293,0.566,294,0.597,295,0.537,296,0.597,297,0.537,298,0.597,299,0.537,300,0.566,301,0.597,302,0.537,303,0.566,304,0.597,305,0.537,306,0.597,307,0.537,308,0.566,309,0.597,310,0.566,311,0.597,312,0.537,313,0.597,314,0.509,315,0.597,316,0.597,317,0.01,318,0.01,338,1.403,466,1.333,634,2.605,644,3.675,783,3.141,798,3.454,904,3.076,962,1.953,965,2.793,980,4.293,987,4.564,1000,3.697,1160,2.066,1161,3.076,1162,3.454,1213,5.41,1214,5.41,1215,6.076,1216,4.813,1217,5.332,1218,5.332,1219,5.332,1220,5.332,1221,5.701,1222,4.813,1223,4.888,1224,4.028,1225,2.705,1226,2.705,1227,2.705,1228,2.705,1229,2.705,1230,2.705,1231,2.705,1232,2.705,1233,2.705,1234,2.705,1235,2.705,1236,2.705,1237,2.705,1238,2.705,1239,4.028,1240,2.705,1241,2.705,1242,2.705,1243,2.705,1244,2.705,1245,2.705,1246,2.705,1247,2.705,1248,2.705,1249,2.705,1250,4.813,1251,2.705,1252,2.705,1253,2.705,1254,2.705,1255,2.705,1256,2.705,1257,2.705,1258,2.705,1259,2.705,1260,4.028,1261,4.028,1262,4.028,1263,4.028,1264,4.028,1265,4.028,1266,4.028,1267,4.028]],["title/components/ExpenseListComponent.html",[0,0.068,276,0.725]],["body/components/ExpenseListComponent.html",[0,0.104,1,0.7,2,0.968,3,0.233,4,0.169,5,0.778,7,0.778,8,0.778,9,0.126,15,1.252,16,1.847,25,0.7,26,1.665,27,1.347,28,0.595,29,0.982,30,1.697,31,1.457,32,1.131,34,1.945,35,0.7,38,1.075,40,0.213,51,0.733,61,0.84,66,0.633,70,0.89,71,0.02,72,0.507,73,0.394,74,0.84,80,0.738,85,0.84,92,0.53,100,0.5,106,2.28,115,1.228,118,0.605,130,1.075,134,0.562,135,0.47,153,0.203,156,0.147,163,1.167,165,0.147,166,0.169,177,1.231,191,1.166,197,1.509,207,1.71,213,1.71,250,1.71,254,0.778,255,1.075,256,0.778,257,1.328,258,0.778,259,0.778,260,0.7,261,0.778,262,0.7,263,0.778,264,0.7,265,0.778,266,0.7,267,0.778,268,0.7,269,0.778,270,0.778,271,0.7,272,0.738,273,1.075,274,0.7,275,0.629,276,1.196,277,0.778,278,0.7,279,0.778,280,0.664,281,0.738,282,0.778,283,0.7,284,0.778,285,0.7,286,0.778,287,0.778,288,0.7,289,0.778,290,0.7,291,0.778,292,0.738,293,1.169,294,0.778,295,0.7,296,0.778,297,0.7,298,0.778,299,0.7,300,0.738,301,0.778,302,0.7,303,0.738,304,0.778,305,0.7,306,0.778,307,0.7,308,0.738,309,0.778,310,0.738,311,0.778,312,0.7,313,0.778,314,0.664,315,0.778,316,0.778,317,0.013,318,0.013,324,2.103,338,1.697,596,2.28,634,2.889,687,2.445,722,3.024,734,2.103,891,3.024,902,3.721,903,3.721,904,3.721,934,2.083,962,2.363,965,3.379,980,3.872,1000,3.379,1213,5.214,1214,5.214,1268,5.856,1269,3.024,1270,4.873,1271,4.873,1272,4.873,1273,4.873,1274,4.873,1275,5.584,1276,4.873,1277,3.526,1278,3.526,1279,4.873,1280,6.023,1281,3.526,1282,6.023,1283,3.526,1284,4.873,1285,3.526,1286,3.526,1287,3.526,1288,6.023,1289,3.526,1290,4.178,1291,6.023,1292,3.526,1293,3.526,1294,3.526,1295,3.024,1296,3.526,1297,3.526,1298,3.526,1299,3.526,1300,3.526,1301,4.873]],["title/injectables/ExpenseService.html",[64,1.668,567,0.371]],["body/injectables/ExpenseService.html",[3,0.164,4,0.164,9,0.123,15,1.667,16,1.138,21,1.668,28,0.808,29,1.008,40,0.207,51,0.72,61,0.517,64,2.188,66,0.651,70,1.034,71,0.02,72,0.521,73,0.391,74,0.976,85,1.021,91,1.668,92,0.976,100,0.679,115,1.668,116,1.572,118,0.656,129,2.305,133,1.432,153,0.23,156,0.143,165,0.2,166,0.164,168,0.93,177,1.592,181,1.668,182,1.894,186,1.894,191,1.287,192,2.385,194,2.626,197,1.799,250,3.145,317,0.012,318,0.012,338,2.075,368,0.84,381,2.638,401,2.38,440,1.404,466,1.823,566,1.404,567,0.487,569,1.138,587,0.884,589,0.929,594,1.774,595,2.672,596,1.955,597,1.774,599,2.723,600,1.955,601,1.757,602,1.572,603,3.52,604,3.347,606,2.829,607,3.255,608,3.52,609,2.032,610,2.032,611,2.385,613,3.255,615,3.52,616,3.255,617,2.829,619,2.889,620,3.321,622,3.321,783,2.638,799,2.385,882,2.626,916,2.032,917,2.192,918,2.385,919,2.192,921,0.977,923,2.192,924,1.33,925,2.192,933,2.385,934,2.032,945,2.385,1170,2.626,1171,4.106,1172,4.106,1173,3.657,1174,4.78,1175,2.949,1176,5.109,1177,2.949,1178,2.949,1179,2.949,1180,2.949,1181,2.949,1182,4.106,1183,2.949,1184,2.949,1185,2.949,1186,2.949,1187,2.949,1188,2.949,1189,2.949,1190,2.949,1191,2.949,1192,2.949,1193,2.949,1194,2.949,1195,2.949,1196,2.949,1197,4.724,1198,4.106,1199,4.724,1200,4.106,1201,2.949,1202,4.106,1203,4.106,1204,2.949,1205,2.949,1206,4.724,1207,2.949,1208,2.949,1209,2.949,1210,2.949,1211,4.106,1212,2.949,1302,4.789,1303,4.789,1304,3.439,1305,3.439,1306,3.439,1307,3.439,1308,3.439,1309,3.439,1310,3.439,1311,3.439,1312,3.439]],["title/components/FooterComponent.html",[0,0.068,278,0.725]],["body/components/FooterComponent.html",[0,0.116,1,0.865,2,1.115,3,0.268,4,0.208,5,0.961,7,0.961,8,0.961,9,0.156,25,0.865,26,1.69,27,1.366,28,0.735,29,0.795,32,1.011,35,0.865,38,1.238,40,0.263,41,0.795,61,0.655,66,0.53,70,0.694,71,0.02,72,0.498,73,0.339,74,0.655,80,0.912,100,0.617,118,0.49,130,1.238,134,0.694,135,0.58,153,0.234,156,0.182,165,0.182,166,0.208,254,0.961,255,1.238,256,0.961,257,1.446,258,0.961,259,0.961,260,0.865,261,0.961,262,0.865,263,0.961,264,0.865,265,0.961,266,0.865,267,0.961,268,0.865,269,0.961,270,0.961,271,0.865,272,0.912,273,1.238,274,0.865,275,0.777,276,0.865,277,0.961,278,1.302,279,0.961,280,0.82,281,0.912,282,0.961,283,0.865,284,0.961,285,0.865,286,0.961,287,0.961,288,0.865,289,0.961,290,0.865,291,0.961,292,0.912,293,0.912,294,0.961,295,0.865,296,0.961,297,0.865,298,0.961,299,0.865,300,0.912,301,0.961,302,0.865,303,0.912,304,0.961,305,0.865,306,0.961,307,0.865,308,0.912,309,0.961,310,0.912,311,0.961,312,0.865,313,0.961,314,0.82,315,0.961,316,0.961,317,0.015,318,0.015,324,2.422,568,4.104,571,2.776,921,1.238,1313,3.735,1314,5.611,1315,5.611,1316,5.611,1317,6.208,1318,3.735,1319,5.611,1320,4.356,1321,3.326,1322,4.356,1323,3.326,1324,5.611,1325,5.611,1326,5.611,1327,5.611,1328,5.611]],["title/injectables/GeminiApiService.html",[331,2.532,567,0.371]],["body/injectables/GeminiApiService.html",[3,0.143,4,0.143,9,0.107,15,1.438,16,2.05,21,1.45,28,0.505,29,0.905,40,0.18,41,0.614,51,0.652,61,0.45,64,2.92,66,0.561,70,0.813,71,0.02,72,0.41,73,0.358,74,0.767,85,0.767,91,1.45,115,1.777,118,0.591,129,1.157,133,1.852,134,0.477,135,0.398,138,2.009,153,0.283,156,0.181,165,0.213,166,0.207,168,1.078,177,1.443,182,1.648,186,1.648,191,1.283,207,2.103,213,2.103,214,2.331,252,1.767,253,2.074,281,0.626,317,0.013,318,0.011,320,1.767,328,3.567,331,3.538,338,1.042,340,2.764,345,4.73,351,3.007,352,2.564,354,2.764,360,1.906,363,2.564,368,1.059,399,3.099,420,1.767,463,2.284,488,1.543,506,1.767,567,0.569,569,0.99,577,1.982,586,2.764,587,1.114,589,0.808,594,1.543,595,1.45,740,4.374,742,3.014,873,3.538,877,2.887,895,3.786,896,1.767,902,2.284,903,2.284,905,2.564,906,2.564,907,2.564,908,2.564,921,1.233,986,2.284,1024,3.252,1027,4.73,1028,3.895,1030,4.296,1031,4.272,1033,3.311,1034,2.764,1036,2.284,1039,4.272,1040,3.895,1041,3.895,1042,3.895,1043,3.538,1048,3.311,1072,3.311,1079,2.284,1081,2.074,1087,1.906,1099,2.284,1108,3.007,1112,2.074,1115,4.296,1116,2.074,1120,3.311,1121,4.272,1122,3.311,1123,3.311,1124,4.272,1125,3.311,1126,3.311,1127,3.007,1128,3.311,1129,3.311,1130,3.895,1131,3.311,1132,3.311,1133,3.311,1134,2.284,1148,2.564,1173,2.284,1329,5.312,1330,2.074,1331,5.102,1332,5.595,1333,4.336,1334,2.284,1335,4.336,1336,2.991,1337,5.102,1338,5.94,1339,2.991,1340,5.102,1341,2.991,1342,4.336,1343,2.991,1344,5.102,1345,2.991,1346,2.991,1347,2.991,1348,2.991,1349,4.336,1350,2.991,1351,2.991,1352,2.991,1353,2.991,1354,2.991,1355,2.991,1356,2.991,1357,2.284,1358,2.284,1359,2.991,1360,4.336,1361,2.991,1362,4.336,1363,2.564,1364,2.991,1365,2.564,1366,3.718,1367,4.336,1368,4.374,1369,2.991,1370,2.991,1371,2.991,1372,2.991,1373,2.991,1374,2.991,1375,2.991,1376,2.991,1377,2.991,1378,4.336,1379,2.991,1380,2.991,1381,2.991,1382,3.718,1383,3.718,1384,4.336,1385,2.991,1386,5.102,1387,2.991,1388,2.564,1389,2.991,1390,2.991,1391,2.991,1392,2.991,1393,2.564,1394,2.991,1395,2.991,1396,2.284,1397,2.991,1398,2.991,1399,2.991,1400,2.991,1401,2.991,1402,2.564,1403,2.564,1404,2.991,1405,4.336,1406,2.991,1407,2.991,1408,2.284,1409,2.991,1410,2.991,1411,3.718,1412,2.991,1413,2.991,1414,2.991,1415,2.991,1416,2.991,1417,4.336,1418,2.991,1419,2.991,1420,2.991,1421,2.991,1422,2.564,1423,2.284,1424,2.991,1425,2.991,1426,2.991,1427,4.336,1428,2.991,1429,1.906,1430,2.074,1431,2.991,1432,2.991,1433,2.991]],["title/injectables/GetApiService.html",[567,0.371,1434,2.788]],["body/injectables/GetApiService.html",[3,0.273,4,0.273,9,0.205,61,1.053,66,0.54,71,0.02,153,0.239,156,0.239,165,0.239,166,0.273,317,0.017,318,0.017,368,1.398,567,0.675,569,1.893,587,1.47,1330,3.967,1434,5.063,1435,5.063,1436,5.685,1437,5.721]],["title/components/GlobalLoaderComponent.html",[0,0.068,280,0.687]],["body/components/GlobalLoaderComponent.html",[0,0.111,1,0.782,2,1.043,3,0.251,4,0.188,5,0.869,7,0.869,8,0.869,9,0.141,25,0.782,26,1.679,27,1.357,28,0.664,29,0.744,31,1.177,32,1.22,34,2.059,35,0.782,38,1.158,40,0.238,41,0.744,51,0.79,61,0.592,66,0.62,70,0.837,71,0.02,72,0.506,73,0.357,74,0.79,80,0.825,85,0.79,92,0.79,100,0.558,118,0.55,130,1.158,134,0.942,135,0.787,148,1.955,153,0.247,156,0.164,163,1.303,165,0.164,166,0.188,171,2.511,254,0.869,255,1.158,256,0.869,257,1.39,258,0.869,259,0.869,260,0.782,261,0.869,262,0.782,263,0.869,264,0.782,265,0.869,266,0.782,267,0.869,268,0.782,269,0.869,270,0.869,271,0.782,272,0.825,273,1.158,274,0.782,275,0.702,276,0.782,277,0.869,278,0.782,279,0.869,280,1.187,281,1.444,282,0.869,283,0.782,284,0.869,285,0.782,286,0.869,287,0.869,288,0.782,289,0.869,290,0.782,291,0.869,292,0.825,293,0.825,294,0.869,295,0.782,296,0.869,297,0.782,298,0.869,299,0.782,300,0.825,301,0.869,302,0.782,303,0.825,304,0.869,305,0.782,306,0.869,307,0.782,308,0.825,309,0.869,310,0.825,311,0.869,312,0.782,313,0.869,314,0.742,315,0.869,316,0.869,317,0.014,318,0.014,324,2.267,398,4.513,399,3.276,488,3.558,505,2.511,506,2.327,532,3.377,742,3.88,877,2.71,897,3.642,921,1.493,1438,5.793,1439,3.377,1440,5.253,1441,5.253,1442,5.91,1443,4.814,1444,3.348,1445,3.938,1446,5.253,1447,3.938,1448,4.504,1449,3.938,1450,3.938,1451,3.938,1452,3.938,1453,5.253,1454,3.938,1455,3.938,1456,3.938,1457,3.377]],["title/injectables/GlobalLoaderService.html",[399,1.77,567,0.371]],["body/injectables/GlobalLoaderService.html",[0,0.115,3,0.242,4,0.242,9,0.181,40,0.306,41,0.874,51,0.928,66,0.654,70,0.984,71,0.02,72,0.495,73,0.401,74,0.928,85,1.001,92,1.001,118,0.581,134,0.808,135,0.675,153,0.258,156,0.212,165,0.212,166,0.242,168,1.122,280,1.398,317,0.016,318,0.016,368,1.239,399,2.993,487,4.347,488,3.723,489,4.347,567,0.628,569,1.677,587,1.303,877,2.616,897,4.279,1443,5.286,1444,3.934,1448,5.292,1458,6.085,1459,4.347,1460,5.292,1461,5.07,1462,6.171,1463,5.07,1464,5.07,1465,5.07,1466,5.07,1467,5.07,1468,5.07]],["title/components/GraphsComponent.html",[0,0.068,283,0.725]],["body/components/GraphsComponent.html",[0,0.083,1,0.322,2,0.535,3,0.129,4,0.078,5,0.358,6,0.742,7,0.358,8,0.358,9,0.058,13,2.465,15,0.886,16,2.234,23,1.389,24,2.038,25,0.322,26,1.528,27,1.236,28,0.274,29,0.957,30,0.938,31,1.745,32,0.625,35,0.322,36,1.23,38,0.594,40,0.098,41,0.569,51,0.405,54,2.071,61,0.405,64,2.431,66,0.629,70,0.765,71,0.02,72,0.488,73,0.427,74,0.722,78,2.071,79,2.296,80,0.34,85,0.765,89,4.062,92,0.93,94,3.065,95,3.065,100,0.68,103,2.783,106,2.076,107,1.716,114,2.456,115,1.55,116,2.431,129,1.553,130,0.594,132,3.065,133,1.991,134,0.93,135,0.873,138,1.085,141,1.867,148,2.148,153,0.186,156,0.068,159,1.035,165,0.068,166,0.078,167,2.8,168,0.274,177,1.255,191,1.266,196,1.239,197,1.374,219,1.126,245,2.211,254,0.358,255,0.594,256,0.358,257,1.217,258,0.358,259,0.358,260,0.322,261,0.358,262,0.322,263,0.358,264,0.322,265,0.358,266,0.322,267,0.358,268,0.322,269,0.358,270,0.358,271,0.322,272,0.34,273,0.594,274,0.322,275,0.289,276,0.322,277,0.358,278,0.322,279,0.358,280,0.306,281,0.34,282,0.358,283,1.057,284,0.358,285,0.322,286,0.358,287,0.358,288,0.322,289,0.358,290,0.322,291,0.358,292,0.34,293,1.064,294,0.358,295,0.322,296,0.358,297,0.322,298,0.358,299,0.322,300,0.34,301,0.358,302,0.322,303,0.34,304,0.358,305,0.322,306,0.358,307,0.322,308,0.34,309,0.358,310,0.34,311,0.358,312,0.322,313,0.358,314,0.306,315,0.358,316,0.358,317,0.007,318,0.007,373,3.688,377,4.062,389,2.634,390,2.201,397,1.392,405,1.483,410,2.056,450,3.441,451,2.308,464,2.199,468,2.056,504,0.959,541,1.126,542,2.211,566,1.96,576,2.308,578,4.286,596,1.408,634,1.576,680,2.308,682,3.836,683,2.958,688,2.392,690,3.086,734,2.296,750,1.867,791,3.753,796,1.716,812,2.056,813,3.065,832,4.544,834,3.499,873,1.126,875,1.716,877,2.744,885,2.056,889,3.816,924,1.966,929,2.634,934,2.038,962,1.305,975,2.308,1081,2.392,1106,2.056,1139,1.867,1140,2.308,1152,1.867,1153,1.867,1165,3.398,1357,1.239,1429,1.035,1444,3.391,1469,1.392,1470,1.867,1471,4.014,1472,1.867,1473,2.308,1474,2.692,1475,2.958,1476,2.056,1477,3.449,1478,3.449,1479,2.692,1480,3.449,1481,3.449,1482,3.449,1483,3.449,1484,3.449,1485,4.451,1486,4.451,1487,4.555,1488,3.441,1489,2.308,1490,2.308,1491,2.308,1492,2.308,1493,2.692,1494,2.634,1495,3.664,1496,1.623,1497,2.692,1498,2.958,1499,2.692,1500,1.623,1501,2.692,1502,1.623,1503,2.692,1504,2.308,1505,2.308,1506,1.623,1507,2.692,1508,1.623,1509,4.799,1510,4.799,1511,2.692,1512,1.623,1513,2.692,1514,1.623,1515,2.308,1516,3.441,1517,1.623,1518,2.308,1519,2.692,1520,1.623,1521,2.692,1522,1.623,1523,2.692,1524,2.692,1525,2.692,1526,4.014,1527,4.014,1528,5.005,1529,2.692,1530,2.056,1531,2.308,1532,2.692,1533,1.623,1534,2.308,1535,3.449,1536,1.623,1537,3.441,1538,3.449,1539,1.623,1540,4.358,1541,4.014,1542,4.014,1543,3.449,1544,1.623,1545,4.358,1546,3.449,1547,1.623,1548,3.449,1549,1.623,1550,2.308,1551,3.449,1552,2.692,1553,1.623,1554,2.056,1555,2.692,1556,3.449,1557,1.623,1558,3.449,1559,1.623,1560,3.449,1561,4.451,1562,4.451,1563,1.623,1564,1.623,1565,2.308,1566,2.308,1567,1.623,1568,2.958,1569,1.392,1570,1.392,1571,2.634,1572,1.623,1573,1.623,1574,1.623,1575,1.623,1576,3.065,1577,2.308,1578,1.392,1579,2.692,1580,2.308,1581,2.056,1582,5.519,1583,1.392,1584,2.692,1585,3.816,1586,1.623,1587,2.692,1588,2.692,1589,1.623,1590,4.799,1591,2.692,1592,3.449,1593,4.799,1594,1.623,1595,2.308,1596,2.308,1597,2.308,1598,2.308,1599,2.308,1600,2.308,1601,2.308,1602,2.308,1603,2.308,1604,2.308,1605,2.308,1606,2.308,1607,3.449,1608,1.392,1609,3.449,1610,3.449,1611,2.958,1612,3.449,1613,1.623,1614,3.449,1615,1.623,1616,2.308,1617,1.392,1618,1.392,1619,1.623,1620,1.623,1621,3.449,1622,3.449,1623,2.692,1624,1.623,1625,3.449,1626,3.449,1627,2.692,1628,1.623,1629,1.623,1630,1.392,1631,1.623,1632,1.623,1633,1.623,1634,1.623,1635,1.623,1636,1.623,1637,1.623,1638,1.623,1639,1.623,1640,1.623,1641,1.623,1642,1.392,1643,1.392,1644,1.623,1645,1.623,1646,1.623,1647,2.308,1648,1.623,1649,1.623,1650,1.623,1651,1.623,1652,1.623,1653,1.623,1654,1.623,1655,1.623,1656,1.623,1657,1.623,1658,1.623,1659,1.623,1660,1.623,1661,1.623,1662,1.623,1663,1.623,1664,1.623]],["title/components/HamburgerMenuComponent.html",[0,0.068,285,0.725]],["body/components/HamburgerMenuComponent.html",[0,0.107,1,0.734,2,1,3,0.241,4,0.177,5,0.815,6,1.69,7,0.815,8,0.815,9,0.132,25,0.734,26,1.671,27,1.351,28,0.624,29,0.713,32,1.169,34,1.993,35,0.734,36,2.3,38,1.11,40,0.223,41,0.713,51,0.757,61,0.556,66,0.641,70,0.912,71,0.02,72,0.516,73,0.345,74,0.861,80,0.774,85,0.861,92,0.861,100,0.524,118,0.499,126,2.184,130,1.11,134,0.802,135,0.671,148,2.127,153,0.239,154,2.564,156,0.154,163,1.223,165,0.154,166,0.177,191,0.659,254,0.815,255,1.11,256,0.815,257,1.355,258,0.815,259,0.815,260,0.734,261,0.815,262,0.734,263,0.815,264,0.734,265,0.815,266,0.734,267,0.815,268,0.734,269,0.815,270,0.815,271,0.734,272,0.774,273,1.11,274,0.734,275,0.659,276,0.734,277,0.815,278,0.734,279,0.815,280,0.696,281,0.774,282,0.815,283,0.734,284,0.815,285,1.221,286,1.523,287,0.815,288,0.734,289,0.815,290,0.734,291,0.815,292,0.774,293,0.774,294,0.815,295,0.734,296,0.815,297,0.734,298,0.815,299,0.734,300,0.774,301,0.815,302,0.734,303,1.198,304,0.815,305,0.734,306,0.815,307,0.734,308,0.774,309,0.815,310,0.774,311,0.815,312,0.734,313,0.815,314,0.696,315,0.815,316,0.815,317,0.013,318,0.013,320,2.184,375,2.974,394,3.844,400,3.653,426,2.823,427,3.901,429,4.692,433,5.512,464,3.209,507,2.564,514,2.564,521,3.17,921,1.051,967,4.316,982,3.17,986,2.823,987,2.823,992,4.316,1011,2.823,1012,3.17,1665,5.922,1666,5.273,1667,3.17,1668,5.723,1669,5.034,1670,5.723,1671,5.723,1672,3.844,1673,5.034,1674,6.144,1675,2.823,1676,5.034,1677,5.034,1678,3.844,1679,3.697,1680,5.034,1681,3.697,1682,3.697,1683,3.697,1684,2.823,1685,3.17,1686,5.034,1687,6.428,1688,5.034,1689,3.697,1690,3.17,1691,2.564,1692,2.823]],["title/components/HomeComponent.html",[0,0.068,288,0.725]],["body/components/HomeComponent.html",[0,0.095,1,0.415,2,0.656,3,0.158,4,0.1,5,0.461,6,0.955,7,0.461,8,0.461,9,0.075,13,2.738,15,1.451,25,0.415,26,1.582,27,1.279,28,0.352,29,0.468,30,1.15,31,1.392,32,0.767,34,1.427,35,0.415,36,1.509,38,0.728,40,0.199,41,0.468,51,0.497,66,0.628,70,0.859,71,0.02,72,0.47,73,0.43,74,0.811,78,2.402,80,0.437,85,0.99,92,0.811,99,3.228,100,0.296,103,3.738,106,2.827,113,2.832,114,2.527,115,2.506,116,1.509,118,0.574,128,3.228,130,1.189,133,0.987,134,0.933,135,0.822,138,1.039,142,2.522,147,2.75,148,1.937,151,3.228,153,0.212,156,0.087,158,1.078,163,0.691,165,0.087,166,0.1,167,3.225,173,1.234,177,1.245,191,0.904,197,0.565,254,0.461,255,0.728,256,0.461,257,1.118,258,0.461,259,0.461,260,0.415,261,0.461,262,0.415,263,0.461,264,0.415,265,0.461,266,0.415,267,0.461,268,0.415,269,0.461,270,0.461,271,0.415,272,0.437,273,0.728,274,0.415,275,0.373,276,0.415,277,0.461,278,0.415,279,0.461,280,0.393,281,0.437,282,0.461,283,0.925,284,0.461,285,0.415,286,0.461,287,0.461,288,1.071,289,0.461,290,0.415,291,0.461,292,0.437,293,0.437,294,0.461,295,0.415,296,0.461,297,0.415,298,0.461,299,0.925,300,0.437,301,0.461,302,0.415,303,0.437,304,0.461,305,0.415,306,0.461,307,0.415,308,0.437,309,0.461,310,0.437,311,0.461,312,0.415,313,0.461,314,0.393,315,0.461,316,0.461,317,0.009,318,0.009,321,2.84,371,2.522,373,4.829,375,2.75,405,3.225,427,3.528,434,1.791,454,2.832,460,2.105,462,3.992,466,1.937,481,1.449,517,3.228,566,2.306,734,0.902,791,4.193,807,2.29,832,4.94,834,3.876,860,1.791,867,1.791,911,1.151,962,1.602,1051,2.105,1075,2.105,1087,2.105,1152,3.228,1153,2.29,1388,3.992,1396,2.522,1444,2.105,1470,2.29,1472,2.29,1476,2.522,1494,3.128,1495,3.128,1530,1.595,1531,1.791,1534,2.832,1571,4.889,1576,2.522,1581,1.595,1595,1.791,1596,1.791,1597,1.791,1598,1.791,1599,1.791,1600,1.791,1601,1.791,1602,1.791,1603,1.791,1604,1.791,1605,1.791,1606,1.791,1608,1.791,1684,3.555,1691,1.449,1693,1.791,1694,2.832,1695,4.096,1696,3.303,1697,4.096,1698,4.096,1699,4.096,1700,4.096,1701,3.303,1702,3.303,1703,3.303,1704,5.391,1705,4.655,1706,4.655,1707,2.832,1708,3.303,1709,3.303,1710,3.303,1711,4.096,1712,2.089,1713,3.303,1714,3.303,1715,3.303,1716,3.303,1717,3.303,1718,3.303,1719,2.089,1720,4.655,1721,4.655,1722,4.655,1723,3.303,1724,3.303,1725,5.854,1726,3.303,1727,2.089,1728,3.303,1729,2.089,1730,2.089,1731,4.655,1732,4.655,1733,2.089,1734,3.303,1735,5.854,1736,4.623,1737,2.089,1738,4.655,1739,3.303,1740,2.089,1741,3.303,1742,2.089,1743,3.303,1744,3.303,1745,2.089,1746,2.089,1747,2.832,1748,3.303,1749,2.089,1750,3.303,1751,3.303,1752,4.096,1753,2.089,1754,2.089,1755,3.992,1756,2.089,1757,2.089,1758,2.089,1759,1.449,1760,2.089,1761,5.071,1762,3.303,1763,3.303,1764,3.303,1765,3.303,1766,3.303,1767,3.303,1768,2.089,1769,3.303,1770,3.303,1771,4.655,1772,3.303,1773,3.303,1774,2.089,1775,2.089,1776,3.303,1777,2.089,1778,2.089,1779,2.089,1780,2.089,1781,2.089,1782,2.089,1783,2.089,1784,2.089,1785,5.391,1786,4.096,1787,3.303,1788,2.832,1789,4.096,1790,2.089,1791,3.303,1792,3.303,1793,2.089,1794,4.096,1795,2.089,1796,2.089,1797,2.089,1798,1.791,1799,2.089,1800,2.089,1801,2.089]],["title/components/InfoIconComponent.html",[0,0.068,290,0.725]],["body/components/InfoIconComponent.html",[0,0.117,1,0.884,2,1.13,3,0.35,4,0.213,5,0.981,7,0.981,8,0.981,9,0.159,25,0.884,26,1.692,27,1.368,28,0.751,29,0.806,32,1.033,35,0.884,38,1.254,40,0.268,66,0.42,71,0.02,72,0.457,73,0.268,80,0.932,100,0.63,106,2.323,118,0.496,130,1.254,134,0.709,135,0.593,153,0.186,156,0.186,165,0.186,166,0.213,254,0.981,255,1.254,256,0.981,257,1.457,258,0.981,259,0.981,260,0.884,261,0.981,262,0.884,263,0.981,264,0.884,265,0.981,266,0.884,267,0.981,268,0.884,269,0.981,270,0.981,271,0.884,272,0.932,273,1.254,274,0.884,275,0.793,276,0.884,277,0.981,278,0.884,279,0.981,280,0.838,281,0.932,282,0.981,283,0.884,284,0.981,285,0.884,286,0.981,287,0.981,288,0.884,289,0.981,290,1.313,291,0.981,292,0.932,293,0.932,294,0.981,295,0.884,296,0.981,297,0.884,298,0.981,299,0.884,300,0.932,301,0.981,302,0.884,303,0.932,304,0.981,305,0.884,306,0.981,307,0.884,308,0.932,309,0.981,310,0.932,311,0.981,312,0.884,313,0.981,314,0.838,315,0.981,316,0.981,317,0.015,318,0.015,324,2.455,742,4.035,911,3.133,962,2.758,1487,4.343,1802,4.877,1803,4.877,1804,3.815,1805,5.688,1806,5.688,1807,4.449]],["title/components/MusicComponent.html",[0,0.068,295,0.725]],["body/components/MusicComponent.html",[0,0.086,1,0.503,2,0.761,3,0.183,4,0.121,5,0.558,7,0.558,8,0.558,9,0.091,15,1.188,23,1.976,25,0.503,26,1.616,27,1.307,28,0.427,29,0.543,30,1.334,31,1.145,32,0.889,34,1.61,35,0.503,38,0.845,40,0.153,41,0.543,51,0.576,61,0.38,66,0.657,70,0.929,71,0.02,72,0.544,73,0.399,74,0.877,80,0.53,85,0.938,92,0.775,100,0.358,118,0.568,121,3.964,130,0.845,133,0.756,134,0.965,135,0.807,153,0.215,156,0.106,158,1.305,163,0.837,165,0.106,166,0.121,177,1.285,191,1.195,197,1.035,207,1.857,213,1.857,214,2.112,243,1.754,254,0.558,255,0.845,256,0.558,257,1.137,258,0.558,259,0.558,260,0.503,261,0.558,262,0.503,263,0.558,264,0.503,265,0.558,266,0.503,267,0.558,268,0.503,269,0.558,270,0.558,271,0.503,272,0.53,273,0.845,274,0.503,275,0.683,276,0.503,277,0.558,278,0.503,279,0.558,280,0.476,281,0.53,282,0.558,283,0.503,284,0.558,285,0.503,286,0.558,287,0.558,288,0.503,289,0.558,290,0.503,291,0.558,292,0.53,293,0.53,294,0.558,295,1.024,296,0.558,297,0.503,298,0.558,299,0.503,300,0.53,301,0.558,302,0.503,303,1.22,304,0.558,305,0.503,306,0.558,307,0.503,308,0.53,309,0.558,310,0.53,311,0.558,312,0.503,313,0.558,314,0.476,315,0.558,316,0.558,317,0.013,318,0.01,320,3.046,321,3.205,324,1.653,328,2.947,338,1.929,354,1.613,427,2.84,475,2.656,523,3.841,533,1.495,596,1.888,600,1.033,759,2.925,769,3.531,775,3.964,776,2.169,787,3.937,794,2.169,834,2.11,875,2.442,896,2.263,901,1.754,921,0.719,1010,2.169,1011,1.932,1035,3.715,1046,3.53,1051,1.613,1052,4.968,1059,2.925,1062,2.925,1066,3.53,1075,1.613,1101,2.925,1102,3.937,1115,1.754,1116,2.656,1119,3.53,1127,1.754,1430,3.205,1736,2.169,1808,2.169,1809,4.623,1810,3.83,1811,3.83,1812,5.828,1813,3.964,1814,3.83,1815,3.83,1816,5.156,1817,3.83,1818,5.539,1819,3.83,1820,5.156,1821,3.83,1822,2.53,1823,3.83,1824,3.83,1825,2.53,1826,2.53,1827,3.83,1828,2.53,1829,2.53,1830,3.83,1831,2.53,1832,2.53,1833,3.83,1834,2.53,1835,2.53,1836,3.83,1837,2.53,1838,3.83,1839,3.83,1840,2.53,1841,2.53,1842,5.156,1843,2.53,1844,2.53,1845,2.53,1846,4.623,1847,2.53,1848,2.53,1849,2.53,1850,2.53,1851,3.83,1852,2.53,1853,2.53,1854,2.53,1855,2.53,1856,2.53,1857,2.53,1858,5.156,1859,2.53,1860,2.53,1861,3.83,1862,2.53,1863,2.53,1864,3.83,1865,2.53,1866,4.623,1867,2.53,1868,2.53,1869,2.53,1870,2.53,1871,2.53,1872,2.53,1873,4.623,1874,2.53,1875,3.83,1876,3.83,1877,3.83,1878,4.623,1879,4.623,1880,2.53,1881,2.53,1882,3.284,1883,3.83,1884,2.53,1885,2.53,1886,5.156,1887,2.53,1888,3.83,1889,2.53,1890,2.53,1891,2.53,1892,2.53,1893,3.83,1894,2.53,1895,2.53,1896,2.169,1897,2.53,1898,2.53,1899,2.53,1900,2.53,1901,2.53,1902,3.83,1903,2.53,1904,2.53,1905,2.53,1906,3.83,1907,2.169,1908,2.53,1909,2.53,1910,2.53,1911,2.53,1912,2.53,1913,3.83,1914,2.53,1915,2.53,1916,3.83,1917,2.53,1918,2.53,1919,2.53,1920,2.53,1921,2.53,1922,2.53,1923,2.53,1924,2.53,1925,2.53,1926,2.53,1927,2.53,1928,2.53,1929,2.53,1930,2.53,1931,2.53,1932,3.83,1933,3.83,1934,4.421,1935,3.83,1936,3.83,1937,3.83,1938,3.83,1939,3.83]],["title/components/NavbarComponent.html",[0,0.068,297,0.725]],["body/components/NavbarComponent.html",[0,0.114,1,0.826,2,1.081,3,0.26,4,0.199,5,0.917,6,1.9,7,0.917,8,0.917,9,0.149,25,0.826,26,1.685,27,1.362,28,0.701,29,0.913,32,1.264,34,2.114,35,0.826,36,2.488,38,1.201,40,0.251,41,0.771,51,0.819,61,0.625,66,0.573,70,0.868,71,0.02,72,0.517,73,0.328,74,0.819,80,0.87,85,0.625,92,0.625,100,0.589,118,0.53,130,1.201,134,0.663,135,0.554,148,1.801,153,0.269,156,0.173,163,1.375,165,0.173,166,0.199,254,0.917,255,1.201,256,0.917,257,1.42,258,0.917,259,0.917,260,0.826,261,0.917,262,0.826,263,0.917,264,0.826,265,0.917,266,0.826,267,0.917,268,0.826,269,0.917,270,0.917,271,0.826,272,0.87,273,1.201,274,0.826,275,0.741,276,0.826,277,0.917,278,0.826,279,0.917,280,0.783,281,0.87,282,0.917,283,0.826,284,0.917,285,1.279,286,1.201,287,0.917,288,0.826,289,0.917,290,0.826,291,0.917,292,0.87,293,0.87,294,0.917,295,0.826,296,0.917,297,1.279,298,0.917,299,0.826,300,0.87,301,0.917,302,0.826,303,0.87,304,0.917,305,0.826,306,0.917,307,0.826,308,0.87,309,0.917,310,0.87,311,0.917,312,0.826,313,0.917,314,0.783,315,0.917,316,0.917,317,0.014,318,0.014,375,3.216,400,3.778,427,3.778,460,2.65,507,2.883,514,2.883,921,1.182,1666,3.174,1672,4.157,1675,3.174,1678,4.157,1691,2.883,1692,3.174,1940,3.565,1941,5.444,1942,6.07,1943,5.444,1944,6.07,1945,5.444,1946,4.157,1947,4.157,1948,4.157,1949,4.668]],["title/components/PieChartComponent.html",[0,0.068,299,0.725]],["body/components/PieChartComponent.html",[0,0.08,1,0.445,2,0.693,3,0.167,4,0.107,5,0.494,6,1.024,7,0.494,8,0.494,9,0.08,15,0.576,16,1.418,23,1.801,24,2.533,25,0.445,26,1.595,27,1.29,28,0.378,29,0.743,30,1.216,31,1.447,35,0.445,36,1.595,38,0.77,40,0.135,41,0.495,51,0.525,54,2.497,61,0.525,64,2.65,66,0.657,70,0.683,71,0.02,72,0.421,73,0.432,74,0.645,80,0.469,85,0.902,92,1.015,100,0.686,106,1.751,107,1.429,115,1.216,118,0.583,125,2.973,126,1.324,129,1.658,130,0.77,133,1.733,134,0.924,135,0.799,147,1.324,148,1.838,153,0.202,155,1.554,156,0.094,159,1.429,165,0.094,166,0.107,168,0.723,177,1.067,191,1.242,196,1.712,197,1.417,207,1.087,213,1.087,214,1.595,219,1.554,254,0.77,255,0.77,256,0.494,257,1.067,258,0.494,259,0.494,260,0.445,261,0.494,262,0.445,263,0.494,264,0.445,265,0.494,266,0.445,267,0.494,268,0.445,269,0.494,270,0.494,271,0.445,272,0.469,273,0.77,274,0.445,275,0.4,276,0.445,277,0.494,278,0.445,279,0.494,280,0.422,281,0.469,282,0.494,283,0.445,284,0.494,285,0.445,286,0.494,287,0.494,288,0.445,289,0.494,290,0.445,291,0.494,292,0.469,293,0.469,294,0.494,295,0.445,296,0.494,297,0.445,298,0.494,299,0.961,300,1.256,301,0.494,302,0.445,303,0.469,304,0.494,305,0.445,306,0.494,307,0.445,308,0.469,309,0.494,310,0.469,311,0.494,312,0.445,313,0.494,314,0.422,315,0.494,316,0.494,317,0.009,318,0.009,338,1.216,390,2.243,423,1.087,432,1.922,440,2.141,466,1.155,504,1.324,541,1.554,542,1.235,566,1.425,596,1.751,600,0.915,601,1.573,634,1.959,636,3.676,682,3.098,684,4.972,687,3.355,688,1.554,691,4.149,734,1.85,783,1.235,791,2.533,812,2.665,813,3.695,832,4.021,834,3.194,875,3.696,920,3.281,924,1.658,930,2.706,962,1.693,968,1.922,1001,1.922,1003,1.922,1015,1.922,1029,2.665,1165,1.712,1167,1.554,1357,1.712,1429,2.225,1472,2.973,1475,3.676,1487,1.712,1488,4.149,1489,4.149,1490,4.149,1491,4.149,1492,2.993,1494,3.273,1495,3.273,1515,2.993,1516,4.149,1540,1.922,1545,1.922,1554,3.273,1566,2.993,1568,2.993,1569,1.922,1570,1.922,1571,3.273,1576,3.273,1577,2.993,1578,1.922,1580,2.993,1581,2.665,1583,1.922,1585,3.676,1616,2.993,1617,1.922,1618,1.922,1630,1.922,1642,1.922,1643,1.922,1747,1.922,1759,4.856,1950,5.347,1951,1.712,1952,3.676,1953,4.287,1954,3.491,1955,4.287,1956,4.287,1957,4.287,1958,4.149,1959,3.491,1960,3.491,1961,2.242,1962,2.242,1963,2.242,1964,2.242,1965,2.242,1966,2.242,1967,2.242,1968,2.242,1969,3.491,1970,2.242,1971,3.491,1972,2.665,1973,2.242,1974,2.242,1975,2.242,1976,2.242,1977,2.242,1978,2.242,1979,2.242,1980,2.242,1981,2.242,1982,2.242,1983,2.242,1984,2.242,1985,2.242,1986,2.242,1987,2.242,1988,2.242,1989,4.287,1990,2.242,1991,2.242,1992,2.242,1993,2.242,1994,2.242,1995,4.287,1996,3.491,1997,4.287,1998,4.287,1999,5.554,2000,4.287,2001,4.287,2002,4.287,2003,4.287,2004,5.554,2005,4.287,2006,4.287,2007,4.287,2008,2.242,2009,4.287,2010,3.491,2011,2.242,2012,4.287,2013,2.242,2014,3.491,2015,2.242,2016,2.242,2017,2.242,2018,2.242,2019,2.242,2020,2.242,2021,2.242,2022,1.922,2023,1.922,2024,2.242,2025,2.242,2026,2.993,2027,2.242,2028,2.242,2029,2.242,2030,4.287,2031,2.242,2032,3.491,2033,2.242,2034,2.242,2035,2.242,2036,2.242,2037,2.242,2038,3.491,2039,3.491,2040,2.242,2041,2.242,2042,2.242]],["title/injectables/PostApiService.html",[403,2.532,567,0.371]],["body/injectables/PostApiService.html",[3,0.168,4,0.168,9,0.126,13,2.36,15,1.251,16,2.216,40,0.212,51,0.732,61,0.732,66,0.527,70,0.561,71,0.02,72,0.283,73,0.212,74,0.529,76,3.375,77,4.595,78,2.511,79,2.511,83,3.375,85,0.839,92,0.732,100,0.79,115,1.226,133,2.118,138,2.247,153,0.273,156,0.147,165,0.147,166,0.168,167,3.315,168,1.015,177,1.073,191,1.264,192,2.441,211,2.688,214,1.608,248,3.716,317,0.013,318,0.013,338,1.226,340,2.244,368,0.86,370,4.173,390,2.641,401,2.504,403,4.173,405,2.681,417,3.375,418,3.375,419,4.595,420,3.556,421,4.173,423,2.705,482,2.441,509,4.595,517,3.375,523,3.868,547,4.259,548,2.244,567,0.495,569,1.165,577,2.224,587,0.905,590,3.061,601,2.047,605,2.688,758,3.018,759,3.716,760,5.602,895,3.102,896,2.08,913,3.86,923,2.244,924,2.328,925,2.244,1030,4.531,1043,4.381,1051,2.244,1103,3.716,1135,4.733,1139,3.375,1141,4.173,1330,2.441,1334,2.688,1368,4.783,1435,4.595,1518,4.173,1530,4.824,1896,3.018,2043,4.867,2044,6.018,2045,4.173,2046,4.867,2047,4.867,2048,4.173,2049,6.317,2050,6.018,2051,6.018,2052,3.52,2053,4.867,2054,4.173,2055,4.867,2056,3.556,2057,3.52,2058,4.867,2059,4.867,2060,4.867,2061,3.868,2062,5.578,2063,3.52,2064,4.867,2065,3.375,2066,4.867,2067,4.867,2068,6.018,2069,4.867,2070,5.578,2071,4.867,2072,3.52,2073,3.52,2074,3.52,2075,3.52,2076,4.867,2077,3.52,2078,4.867,2079,3.52,2080,4.867,2081,3.52,2082,3.52,2083,3.52,2084,3.52,2085,5.578,2086,3.52,2087,3.52,2088,3.52,2089,3.52,2090,3.52,2091,3.52,2092,3.52,2093,3.52,2094,3.52,2095,3.52,2096,3.52,2097,3.52,2098,3.52,2099,3.52,2100,2.688]],["title/injectables/SaavnService.html",[567,0.371,1035,2.327]],["body/injectables/SaavnService.html",[3,0.164,4,0.164,9,0.123,15,0.884,25,0.683,40,0.207,41,0.679,51,0.72,61,0.517,66,0.628,70,0.878,71,0.02,72,0.534,73,0.391,74,0.829,78,1.774,85,0.829,114,2.572,118,0.609,134,0.878,135,0.904,138,1.874,153,0.271,156,0.143,165,0.2,166,0.164,168,1.178,177,1.468,191,1.229,197,0.929,207,1.668,213,1.668,214,1.572,252,2.032,275,0.613,317,0.012,318,0.012,328,3.512,338,1.198,340,2.192,351,3.321,354,2.192,360,2.192,368,0.84,399,3.227,405,1.894,475,2.385,482,2.385,488,1.774,505,2.192,506,2.032,567,0.487,569,1.138,573,3.657,577,1.572,586,2.192,587,0.884,589,0.929,601,1.262,769,2.192,834,1.894,877,3.232,895,3.053,896,2.032,916,2.032,921,0.977,1024,3.993,1025,5.182,1026,2.626,1027,4.55,1028,4.207,1030,4.132,1031,3.657,1032,4.106,1033,2.626,1034,2.192,1035,3.053,1036,4.207,1037,4.724,1038,4.106,1039,4.207,1040,3.657,1041,3.657,1042,3.657,1043,3.321,1044,4.106,1045,2.949,1046,2.626,1047,2.949,1048,2.626,1049,4.106,1050,2.949,1051,3.798,1052,5.081,1053,2.949,1054,5.109,1055,2.949,1056,2.949,1057,4.106,1058,4.106,1059,3.657,1060,2.949,1061,2.949,1062,2.626,1063,2.949,1064,2.949,1065,2.949,1066,4.207,1067,2.949,1068,2.949,1069,2.949,1070,2.949,1071,2.626,1072,4.207,1073,2.949,1074,2.949,1075,2.192,1076,2.949,1077,2.949,1078,2.949,1079,3.657,1080,5.109,1081,3.821,1082,4.106,1083,4.106,1084,4.106,1085,2.949,1086,2.949,1087,2.192,1088,4.106,1089,4.106,1090,2.949,1091,2.949,1092,2.949,1093,2.949,1094,2.949,1095,2.949,1096,2.949,1097,2.949,1098,2.949,1099,2.626,1100,2.949,1101,2.626,1102,2.626,1103,2.626,1104,2.949,1105,2.949,1106,2.626,1107,2.949,1108,2.385,1109,2.949,1110,2.949,1111,2.949,1112,2.385,1113,2.949,1114,4.106,1115,3.821,1116,2.385,1117,2.949,1118,2.949,1119,2.626,1120,3.657,1121,3.657,1122,2.626,1123,2.626,1124,3.657,1125,2.626,1126,3.657,1127,2.385,1128,2.626,1129,2.626,1130,4.207,1131,2.626,1132,2.626,1133,2.626,1134,4.55,1334,2.626,1430,2.385,1813,2.949,1934,2.949,2101,4.789,2102,4.789,2103,4.789,2104,3.439,2105,3.439,2106,3.439,2107,3.439,2108,3.439]],["title/interfaces/Schema.html",[378,2.327,589,0.987]],["body/interfaces/Schema.html",[3,0.176,4,0.176,9,0.132,16,1.662,21,1.788,66,0.348,71,0.02,72,0.403,91,1.788,115,1.284,116,1.685,118,0.618,129,1.943,138,1.58,148,1.22,153,0.238,156,0.154,165,0.154,166,0.176,168,1.083,177,1.623,181,2.436,182,2.031,186,2.031,191,1.284,197,1.545,317,0.013,318,0.013,342,2.178,368,0.901,378,4.691,379,2.815,401,1.353,417,4.255,423,1.788,424,2.35,440,1.505,466,1.22,542,2.031,567,0.511,568,3.376,571,2.35,577,2.296,579,4.255,587,0.947,589,0.996,590,2.296,591,2.031,593,2.556,594,1.902,595,1.788,599,1.685,600,2.051,601,1.843,602,1.685,619,1.788,634,1.685,734,1.591,911,2.031,912,2.767,913,2.178,921,1.048,924,2.374,930,3.166,1167,2.556,1174,2.556,1321,2.815,1323,2.815,1972,2.815,2056,2.35,2061,3.483,2109,2.815,2110,3.686,2111,3.686,2112,3.161,2113,3.161,2114,3.161,2115,3.161,2116,3.161,2117,3.161,2118,3.161,2119,3.161,2120,4.307,2121,3.161,2122,3.161,2123,4.307,2124,3.161,2125,3.161,2126,4.307,2127,2.556,2128,2.556,2129,2.556,2130,2.556,2131,2.556,2132,2.556,2133,2.556,2134,3.161,2135,3.161,2136,4.307,2137,3.161,2138,3.161,2139,3.161,2140,4.307,2141,4.307,2142,4.307,2143,4.307,2144,4.307,2145,3.161,2146,4.307,2147,3.161,2148,4.307,2149,4.307,2150,3.161,2151,3.161,2152,4.307,2153,4.307,2154,3.161,2155,3.161,2156,4.307,2157,4.307,2158,3.161,2159,3.161,2160,4.307,2161,3.161,2162,3.161,2163,3.161,2164,4.307,2165,3.161,2166,3.161,2167,3.161,2168,3.161,2169,3.161,2170,3.161,2171,3.161,2172,3.161,2173,3.161,2174,3.161,2175,3.161,2176,3.161,2177,3.161,2178,3.161,2179,3.161,2180,3.161,2181,3.161,2182,3.161,2183,3.161,2184,3.161]],["title/components/SearchButtonComponent.html",[0,0.068,302,0.725]],["body/components/SearchButtonComponent.html",[0,0.12,1,0.599,2,0.866,3,0.208,4,0.144,5,1.13,6,1.378,7,0.665,8,0.665,9,0.108,13,2.115,15,0.775,25,0.599,26,1.644,27,1.329,28,0.509,29,0.618,30,1.519,31,1.304,32,1.013,34,1.785,35,0.599,36,1.993,38,0.962,40,0.182,41,0.618,51,0.656,61,0.656,66,0.619,70,0.481,71,0.02,72,0.411,73,0.339,74,0.656,76,3.025,79,2.25,80,0.631,83,3.025,85,0.771,92,0.934,99,3.025,100,0.427,106,2.886,107,2.78,114,2.424,118,0.263,125,3.554,126,1.781,128,3.025,130,0.962,134,0.695,135,0.748,138,1.766,147,1.781,148,1.858,151,3.025,153,0.234,155,2.091,156,0.126,158,1.556,163,0.997,165,0.126,166,0.144,167,1.661,168,0.509,171,2.78,173,1.781,249,3.33,254,0.665,255,0.962,256,0.665,257,1.239,258,0.665,259,0.665,260,0.599,261,0.665,262,0.599,263,0.665,264,0.599,265,0.665,266,0.599,267,0.665,268,0.599,269,0.665,270,0.665,271,0.599,272,0.631,273,0.962,274,0.599,275,0.538,276,0.599,277,0.665,278,0.599,279,0.665,280,0.568,281,1.341,282,0.665,283,0.599,284,0.665,285,0.599,286,0.665,287,0.665,288,0.599,289,0.665,290,0.599,291,0.665,292,0.631,293,0.631,294,0.665,295,0.599,296,0.665,297,0.599,298,0.665,299,0.599,300,0.631,301,0.665,302,1.303,303,1.566,304,0.665,305,0.599,306,0.665,307,0.599,308,0.631,309,0.665,310,0.631,311,0.665,312,0.599,313,0.665,314,0.568,315,0.665,316,0.665,317,0.011,318,0.011,321,3.554,398,4.288,399,2.723,455,3.74,468,3.33,488,1.556,505,1.922,506,1.781,533,1.781,555,2.585,585,3.74,769,2.78,897,3.025,917,4.181,952,5.326,953,5.326,965,3.025,980,3.554,996,3.74,1000,3.025,1382,4.816,1430,4.901,1470,3.025,1685,4.816,1707,4.816,1788,3.74,1798,2.585,2185,5.731,2186,5.731,2187,2.585,2188,4.362,2189,5.616,2190,4.362,2191,4.362,2192,5.125,2193,4.362,2194,5.125,2195,5.125,2196,5.616,2197,5.616,2198,3.015,2199,4.362,2200,5.125,2201,3.74,2202,3.015,2203,4.362,2204,4.362,2205,4.362,2206,4.362,2207,4.362,2208,4.816,2209,3.015,2210,4.362,2211,4.362,2212,4.362,2213,4.362,2214,3.015,2215,4.362,2216,4.362,2217,4.362,2218,4.362,2219,3.015,2220,4.362,2221,3.74,2222,4.362,2223,4.362,2224,3.015,2225,4.362,2226,4.362,2227,3.015,2228,5.125,2229,3.015,2230,3.015,2231,3.015,2232,4.362,2233,3.015,2234,3.015,2235,3.015,2236,3.015,2237,3.015,2238,3.015,2239,3.015,2240,3.015,2241,3.015,2242,3.015]],["title/components/SearchComponent.html",[0,0.068,305,0.725]],["body/components/SearchComponent.html",[0,0.119,1,0.918,2,1.157,3,0.278,4,0.221,5,1.019,7,1.019,8,1.019,9,0.165,16,1.528,25,0.918,26,1.696,27,1.371,28,0.779,29,0.825,32,1.072,35,0.918,38,1.285,71,0.02,72,0.468,80,0.967,100,0.655,130,1.285,153,0.193,156,0.193,165,0.193,166,0.221,254,1.019,255,1.285,256,1.019,257,1.478,258,1.019,259,1.019,260,0.918,261,1.019,262,0.918,263,1.019,264,0.918,265,1.019,266,0.918,267,1.019,268,0.918,269,1.019,270,1.019,271,0.918,272,0.967,273,1.285,274,0.918,275,0.824,276,0.918,277,1.019,278,0.918,279,1.019,280,0.87,281,0.967,282,1.019,283,0.918,284,1.019,285,0.918,286,1.019,287,1.019,288,0.918,289,1.019,290,0.918,291,1.019,292,0.967,293,0.967,294,1.019,295,0.918,296,1.019,297,0.918,298,1.019,299,0.918,300,0.967,301,1.019,302,0.918,303,1.477,304,1.019,305,1.331,306,1.019,307,0.918,308,0.967,309,1.019,310,0.967,311,1.019,312,0.918,313,1.019,314,0.87,315,1.019,316,1.019,317,0.015,318,0.015,324,2.514,366,4.995,2243,3.961,2244,5.825,2245,5.825,2246,4.619]],["title/injectables/SectionService.html",[400,2.011,567,0.371]],["body/injectables/SectionService.html",[3,0.255,4,0.255,9,0.191,15,1.636,40,0.322,41,0.902,51,0.957,66,0.642,70,0.851,71,0.02,72,0.429,73,0.322,74,0.803,85,0.803,92,0.803,118,0.594,134,1.015,135,0.848,153,0.266,156,0.223,165,0.223,166,0.255,168,1.148,317,0.017,318,0.017,368,1.304,375,3.154,385,5.833,400,3.507,567,0.648,569,1.766,587,1.372,1034,3.402,2247,4.577,2248,6.802,2249,6.366,2250,6.366,2251,5.338,2252,6.366,2253,5.338,2254,6.366,2255,5.338,2256,5.338,2257,5.338]],["title/components/SettingItemComponent.html",[0,0.068,307,0.725]],["body/components/SettingItemComponent.html",[0,0.118,1,0.894,2,1.139,3,0.274,4,0.215,5,0.993,7,0.993,8,0.993,9,0.161,25,0.894,26,1.693,27,1.369,28,0.76,29,0.812,30,1.996,31,1.713,32,1.045,35,0.894,38,1.264,40,0.272,66,0.425,71,0.02,72,0.46,73,0.272,80,0.943,100,0.638,106,2.34,118,0.5,130,1.264,153,0.188,156,0.188,165,0.188,166,0.215,254,0.993,255,1.264,256,0.993,257,1.464,258,0.993,259,0.993,260,0.894,261,0.993,262,0.894,263,0.993,264,0.894,265,0.993,266,0.894,267,0.993,268,0.894,269,0.993,270,0.993,271,0.894,272,0.943,273,1.264,274,0.894,275,0.803,276,0.894,277,0.993,278,0.894,279,0.993,280,0.848,281,0.943,282,0.993,283,0.894,284,0.993,285,0.894,286,0.993,287,0.993,288,0.894,289,0.993,290,0.894,291,0.993,292,0.943,293,0.943,294,0.993,295,0.894,296,0.993,297,0.894,298,0.993,299,0.894,300,0.943,301,0.993,302,0.894,303,0.943,304,0.993,305,0.894,306,0.993,307,1.319,308,1.435,309,0.993,310,0.943,311,0.993,312,0.894,313,0.993,314,0.848,315,0.993,316,0.993,317,0.015,318,0.015,619,2.779,875,4.369,962,2.779,2258,4.915,2259,4.915,2260,3.861,2261,5.732,2262,4.503]],["title/components/SidebarComponent.html",[0,0.068,312,0.725]],["body/components/SidebarComponent.html",[0,0.112,1,0.803,2,1.062,3,0.256,4,0.193,5,0.892,6,1.848,7,0.892,8,0.892,9,0.145,25,0.803,26,1.682,27,1.36,28,1.01,29,0.903,30,1.862,31,1.598,32,1.241,34,2.086,35,0.803,36,2.443,38,1.179,40,0.244,41,0.758,51,0.804,61,0.608,66,0.565,70,0.852,71,0.02,72,0.512,73,0.361,74,0.804,80,0.847,85,0.608,92,0.608,100,0.573,118,0.578,130,1.179,134,0.645,135,0.539,153,0.25,156,0.169,163,1.338,165,0.169,166,0.193,254,0.892,255,1.179,256,0.892,257,1.405,258,0.892,259,0.892,260,0.803,261,0.892,262,0.803,263,0.892,264,0.803,265,0.892,266,0.803,267,0.892,268,0.803,269,0.892,270,0.892,271,0.803,272,0.847,273,1.179,274,0.803,275,0.721,276,0.803,277,0.892,278,0.803,279,0.892,280,0.762,281,0.847,282,0.892,283,0.803,284,0.892,285,0.803,286,0.892,287,0.892,288,0.803,289,0.892,290,0.803,291,0.892,292,0.847,293,1.254,294,0.892,295,0.803,296,0.892,297,0.803,298,0.892,299,0.803,300,0.847,301,0.892,302,0.803,303,0.847,304,0.892,305,0.803,306,0.892,307,0.803,308,0.847,309,0.892,310,0.847,311,0.892,312,1.266,313,0.892,314,0.762,315,0.892,316,0.892,317,0.014,318,0.014,320,3.159,360,3.408,375,3.159,400,3.75,427,3.75,460,3.408,464,3.408,507,2.805,514,2.805,590,2.443,807,3.708,921,1.15,1672,4.082,1675,3.089,1678,4.082,1691,2.805,1692,3.089,2263,3.468,2264,5.347,2265,5.989,2266,5.347,2267,5.989,2268,5.347,2269,4.045,2270,4.045]],["title/injectables/StorageService.html",[401,1.34,567,0.371]],["body/injectables/StorageService.html",[3,0.145,4,0.145,9,0.109,16,1.703,21,1.474,40,0.183,41,0.622,51,0.66,61,0.457,66,0.689,70,0.821,71,0.02,72,0.48,73,0.387,74,0.774,85,1.072,91,1.474,92,0.937,115,1.059,116,1.389,118,0.639,129,1.697,134,0.899,135,0.751,138,1.619,148,1.006,153,0.215,156,0.127,165,0.127,166,0.145,168,1.202,177,1.581,181,2.127,182,1.674,186,1.674,191,1.241,197,1.392,317,0.011,318,0.011,342,1.796,368,0.743,378,4.636,379,2.321,401,1.61,417,3.909,423,1.474,424,1.937,440,1.241,466,1.452,542,1.674,567,0.446,568,3.68,569,1.006,571,1.937,577,2.005,579,4.826,587,0.781,589,0.821,590,2.353,593,2.108,594,1.568,595,1.474,599,2.576,600,1.791,601,1.61,602,1.389,619,1.474,634,1.389,734,1.312,911,1.674,912,2.417,913,1.796,921,0.864,924,2.313,930,2.656,1167,2.108,1174,2.108,1318,2.606,1321,2.321,1323,2.321,1972,3.931,2056,1.937,2061,3.042,2109,2.321,2112,2.606,2113,2.606,2114,4.415,2115,4.415,2116,4.415,2117,4.415,2118,2.606,2119,4.834,2120,3.762,2121,2.606,2122,4.834,2123,3.762,2124,2.606,2125,4.834,2126,3.762,2127,2.108,2128,2.108,2129,2.108,2130,2.108,2131,2.108,2132,2.108,2133,2.108,2134,2.606,2135,4.834,2136,3.762,2137,2.606,2138,2.606,2139,3.762,2140,5.341,2141,3.762,2142,3.762,2143,3.762,2144,3.762,2145,4.415,2146,3.762,2147,2.606,2148,3.762,2149,3.762,2150,2.606,2151,2.606,2152,3.762,2153,3.762,2154,2.606,2155,2.606,2156,3.762,2157,3.762,2158,2.606,2159,2.606,2160,3.762,2161,2.606,2162,2.606,2163,3.762,2164,3.762,2165,2.606,2166,2.606,2167,2.606,2168,2.606,2169,2.606,2170,2.606,2171,4.834,2172,4.834,2173,2.606,2174,4.834,2175,2.606,2176,4.834,2177,2.606,2178,4.834,2179,4.834,2180,2.606,2181,4.834,2182,2.606,2183,4.834,2184,2.606,2271,4.387,2272,4.387,2273,3.039,2274,3.039,2275,3.039,2276,3.039,2277,3.039,2278,3.039,2279,3.039,2280,3.039,2281,3.039,2282,3.039,2283,3.039,2284,3.039,2285,3.039,2286,3.039,2287,3.039,2288,3.039,2289,3.039,2290,3.039,2291,3.039,2292,3.039]],["title/components/ToastComponent.html",[0,0.068,314,0.687]],["body/components/ToastComponent.html",[0,0.109,1,0.761,2,1.024,3,0.32,4,0.183,5,0.845,7,0.845,8,0.845,9,0.137,23,2.66,25,0.761,26,1.675,27,1.355,28,0.646,29,0.73,32,0.889,35,0.761,38,1.137,40,0.231,51,0.775,61,0.576,65,3.959,66,0.55,70,0.822,71,0.02,72,0.5,73,0.393,74,0.775,80,1.305,85,0.775,92,0.877,100,0.543,118,0.508,130,1.137,134,0.61,135,0.51,153,0.243,156,0.215,164,2.924,165,0.16,166,0.183,171,2.441,191,1.039,212,4.647,214,2.849,254,0.845,255,1.137,256,0.845,257,1.375,258,0.845,259,0.845,260,0.761,261,0.845,262,0.761,263,0.845,264,0.761,265,0.845,266,0.761,267,0.845,268,0.761,269,0.845,270,0.845,271,0.761,272,0.802,273,1.137,274,0.761,275,0.683,276,0.761,277,0.845,278,0.761,279,0.845,280,0.721,281,0.802,282,0.845,283,0.761,284,0.845,285,0.761,286,0.845,287,0.845,288,0.761,289,0.845,290,0.761,291,0.845,292,0.802,293,0.802,294,0.845,295,0.761,296,0.845,297,0.761,298,0.845,299,0.761,300,0.802,301,0.845,302,0.761,303,0.802,304,0.845,305,0.761,306,0.845,307,0.761,308,0.802,309,0.845,310,0.802,311,0.845,312,0.761,313,0.845,314,1.174,315,0.845,316,0.845,317,0.013,318,0.013,324,2.225,533,3.683,664,4.76,665,2.924,738,2.924,739,2.924,741,2.924,742,3.046,750,2.656,796,2.441,877,2.66,921,1.089,972,3.284,1423,4.76,1457,3.284,1611,3.284,1690,3.284,1952,4.997,1958,5.345,2293,3.284,2294,5.155,2295,5.155,2296,5.155,2297,3.83,2298,3.83,2299,3.83,2300,5.155,2301,3.83,2302,3.83,2303,5.155,2304,3.83,2305,3.83,2306,3.83,2307,3.83,2308,3.83,2309,3.83,2310,3.83,2311,3.83,2312,3.83,2313,5.155,2314,3.83,2315,3.83,2316,3.83,2317,2.924,2318,3.83,2319,3.83,2320,3.83,2321,5.155,2322,3.83,2323,3.83,2324,3.83,2325,3.83,2326,3.83,2327,3.83,2328,3.83,2329,3.83]],["title/injectables/ToastService.html",[65,2.157,567,0.371]],["body/injectables/ToastService.html",[3,0.331,4,0.242,9,0.181,40,0.306,41,0.874,51,0.927,65,3.643,66,0.628,70,0.983,71,0.02,72,0.495,73,0.441,74,0.927,80,1.291,85,0.927,92,0.927,118,0.58,134,0.807,135,0.675,153,0.257,156,0.211,165,0.211,166,0.242,168,1.122,212,4.919,214,3.039,314,1.398,317,0.016,318,0.016,368,1.237,486,4.341,567,0.627,569,1.675,587,1.301,742,2.991,1423,5.077,1444,3.931,1460,5.287,2330,4.341,2331,6.166,2332,5.063,2333,6.166,2334,5.063,2335,5.063,2336,5.063,2337,5.063]],["title/interfaces/User.html",[138,1.148,589,0.987]],["body/interfaces/User.html",[3,0.216,4,0.216,9,0.162,40,0.273,41,0.815,71,0.02,72,0.534,73,0.448,92,0.681,118,0.675,135,0.766,138,1.808,153,0.24,156,0.189,165,0.24,166,0.216,168,0.763,177,1.514,191,1.025,317,0.015,318,0.015,338,2.002,368,1.105,390,1.75,401,2.319,423,3.224,440,1.847,466,1.497,567,0.585,587,1.163,589,1.223,591,2.492,597,2.334,599,2.068,600,2.348,601,2.109,602,2.068,604,2.966,634,3.039,912,3.663,921,1.286,930,2.334,1358,3.455,2056,4.239,2100,3.455,2127,4.611,2128,4.611,2129,4.611,2130,4.611,2131,4.611,2132,4.611,2133,4.611,2338,3.455,2339,3.879,2340,3.879,2341,5.419,2342,4.93,2343,4.93,2344,3.879,2345,3.879,2346,3.879]],["title/injectables/UserService.html",[390,1.412,567,0.371]],["body/injectables/UserService.html",[3,0.221,4,0.221,9,0.165,40,0.279,51,0.876,61,0.695,66,0.652,70,1.068,71,0.02,72,0.538,73,0.404,74,0.96,85,1.008,92,0.876,118,0.662,135,0.893,138,1.452,153,0.243,156,0.193,165,0.243,166,0.221,168,1.077,177,1.523,191,1.039,317,0.015,318,0.015,338,2.222,368,1.129,381,3.209,390,2.254,401,2.588,423,2.24,440,1.886,466,1.927,567,0.593,569,1.528,587,1.187,589,1.249,597,2.383,599,3.062,600,2.379,601,2.137,602,2.111,604,3.006,634,2.111,799,3.203,912,2.545,921,1.313,930,3.292,1358,4.872,2056,2.944,2100,3.527,2127,3.203,2128,3.203,2129,3.203,2130,3.203,2131,3.203,2132,3.203,2133,3.203,2338,3.527,2339,4.995,2340,4.995,2341,5.471,2342,4.995,2343,4.995,2344,3.961,2345,3.961,2346,4.995,2347,5.825,2348,4.619,2349,4.619,2350,4.619,2351,4.619,2352,4.619]],["title/injectables/UtilsService.html",[567,0.371,2353,2.788]],["body/injectables/UtilsService.html",[3,0.275,4,0.275,9,0.206,61,1.056,66,0.543,71,0.02,153,0.24,156,0.24,165,0.24,166,0.275,317,0.017,318,0.017,368,1.406,567,0.677,569,1.905,587,1.479,2353,5.081,2354,4.936,2355,5.756]],["title/coverage.html",[2356,4.279]],["body/coverage.html",[0,0.141,1,0.714,9,0.129,10,3.082,11,2.744,12,3.082,15,0.924,27,0.641,29,0.509,35,0.714,64,1.642,65,2.123,71,0.02,73,0.298,100,0.509,138,1.13,161,2.492,197,2.079,250,3.501,260,0.714,262,0.714,264,0.714,266,0.714,268,0.714,271,0.714,274,0.714,275,0.881,276,0.714,278,0.714,280,0.677,283,0.714,285,0.714,288,0.714,290,0.714,292,0.753,295,0.714,297,0.714,299,0.714,302,0.714,305,0.714,307,0.714,310,0.753,312,0.714,314,0.677,317,0.013,318,0.013,319,3.082,331,2.492,345,2.744,362,3.082,367,3.082,378,2.291,390,1.39,399,1.743,400,1.98,401,1.319,403,2.492,488,2.547,495,3.082,509,2.744,567,0.743,568,2.123,570,3.082,571,2.291,572,3.082,577,1.642,589,1.777,590,1.642,592,3.77,598,2.291,623,3.77,679,2.744,682,2.123,806,3.082,909,3.77,919,2.291,920,2.123,924,1.39,949,3.082,950,3.082,1024,2.291,1025,3.77,1026,3.77,1035,2.291,1135,2.492,1136,3.082,1158,3.082,1159,3.082,1160,3.77,1170,3.77,1213,3.77,1214,3.77,1215,3.082,1268,3.082,1269,3.082,1313,3.082,1329,3.082,1330,3.911,1434,2.744,1435,3.77,1436,3.082,1438,3.082,1439,3.082,1458,3.082,1459,3.082,1469,3.082,1665,3.082,1666,2.744,1667,3.082,1693,3.082,1759,3.424,1802,3.082,1803,3.082,1804,3.082,1808,3.082,1940,3.082,1950,3.77,1951,3.77,2109,3.77,2185,3.082,2186,3.082,2187,3.082,2243,3.082,2247,3.082,2258,3.082,2259,3.082,2260,3.082,2263,3.082,2293,3.082,2330,3.082,2338,3.77,2353,2.744,2354,3.082,2356,3.082,2357,3.082,2358,3.594,2359,3.594,2360,3.594,2361,4.234,2362,7.221,2363,3.082,2364,7.303,2365,3.082,2366,3.082,2367,3.082,2368,3.082,2369,3.082,2370,3.594,2371,6.576,2372,3.594,2373,6.072,2374,4.937,2375,6.365,2376,3.594,2377,3.594,2378,3.594,2379,5.64,2380,3.594,2381,3.594,2382,3.594,2383,3.594,2384,3.594,2385,3.594,2386,3.594,2387,3.594,2388,3.594,2389,5.64,2390,5.64,2391,3.594,2392,3.082,2393,3.594,2394,4.937,2395,3.594,2396,4.937,2397,3.082,2398,4.937,2399,3.082,2400,3.082,2401,5.457,2402,3.082,2403,3.082,2404,3.082,2405,3.082,2406,3.594]],["title/dependencies.html",[69,3.046,2407,2.611]],["body/dependencies.html",[69,3.771,71,0.02,156,0.227,158,2.806,163,1.799,317,0.017,318,0.017,341,5.879,342,3.803,343,4.663,480,4.663,511,4.663,1034,3.467,1472,3.771,1537,5.519,1565,4.663,2065,3.771,2408,7.509,2409,5.439,2410,5.439,2411,5.439,2412,5.439,2413,5.439,2414,5.439,2415,5.439,2416,5.439,2417,4.663,2418,5.439,2419,5.439,2420,5.439,2421,5.439,2422,5.439,2423,5.439,2424,5.439,2425,5.439,2426,5.439,2427,5.439]],["title/index.html",[40,0.184,2428,3.045,2429,3.045]],["body/index.html",[2,0.701,15,0.907,16,2.382,19,3.027,21,1.712,27,0.996,28,1.017,29,0.982,69,2.448,71,0.02,77,4.601,78,1.821,90,3.027,91,2.365,100,0.95,102,2.695,106,1.441,115,2.278,116,2.228,129,1.886,133,2.073,138,2.056,141,3.874,147,2.085,150,3.027,153,0.147,165,0.147,221,2.448,244,3.874,245,3.319,252,2.881,253,3.874,272,0.739,275,0.629,293,1.262,300,0.739,303,1.021,317,0.013,318,0.013,369,4.168,372,4.79,373,4.867,377,2.695,381,2.686,414,2.695,416,4.181,418,3.381,419,3.723,420,2.085,463,2.695,464,3.108,474,3.027,481,3.381,517,2.448,542,1.944,566,1.441,583,3.027,590,3.063,682,2.085,690,2.448,727,3.027,729,3.027,735,3.027,748,3.027,750,3.381,783,3.078,787,2.695,789,3.027,791,2.085,807,3.874,873,2.448,885,4.601,924,2.161,951,3.027,976,4.181,977,3.027,1075,2.25,1087,2.25,1112,2.448,1153,2.448,1161,3.723,1223,4.181,1363,3.027,1365,3.027,1366,3.027,1383,3.027,1393,4.181,1396,2.695,1402,4.181,1403,3.027,1408,2.695,1411,3.027,1422,4.79,1429,2.25,1443,2.695,1470,3.381,1473,3.027,1476,4.266,1504,4.79,1505,4.181,1550,4.181,1554,2.695,1647,3.027,1684,4.266,1694,3.027,1949,4.181,2022,4.79,2023,4.79,2026,3.027,2045,3.027,2048,3.027,2054,3.027,2061,2.448,2065,2.448,2201,4.181,2221,4.181,2317,2.695,2357,4.79,2430,3.53,2431,3.53,2432,3.53,2433,3.53,2434,3.53,2435,2.695,2436,4.876,2437,4.876,2438,4.876,2439,6.831,2440,3.53,2441,3.53,2442,3.53,2443,3.53,2444,4.876,2445,3.53,2446,3.53,2447,3.53,2448,3.53,2449,3.53,2450,3.53,2451,4.876,2452,3.53,2453,4.876,2454,3.53,2455,5.587,2456,3.53,2457,3.53,2458,3.53,2459,3.53,2460,3.53,2461,3.53,2462,3.53,2463,4.876,2464,3.53,2465,3.53,2466,4.876,2467,3.53,2468,3.53,2469,3.53,2470,4.876,2471,3.53,2472,3.53,2473,3.53,2474,3.53,2475,3.53,2476,3.027,2477,3.027,2478,3.027,2479,3.53,2480,3.53,2481,3.53,2482,3.53,2483,3.53,2484,3.53,2485,3.53,2486,3.53,2487,3.027,2488,3.53,2489,3.53,2490,4.876,2491,3.53,2492,3.53,2493,4.876,2494,3.53,2495,3.53,2496,3.53,2497,3.53,2498,3.53,2499,3.53,2500,4.876,2501,3.53,2502,3.53,2503,3.027,2504,3.53,2505,3.53,2506,3.53,2507,3.53,2508,3.53,2509,3.53,2510,4.876,2511,3.53,2512,3.53,2513,3.53,2514,3.53,2515,3.53,2516,3.53,2517,2.695,2518,4.876,2519,3.53,2520,3.53,2521,3.53,2522,3.53,2523,3.53,2524,3.53,2525,3.53,2526,3.53,2527,3.53,2528,3.027,2529,3.53,2530,3.53,2531,3.53,2532,3.53,2533,3.53,2534,3.53,2535,3.53,2536,3.53,2537,3.53,2538,3.53,2539,3.53,2540,3.53,2541,3.53,2542,3.53,2543,3.53,2544,3.53,2545,3.53,2546,3.53,2547,3.53,2548,3.53,2549,3.53,2550,3.53,2551,3.53,2552,4.876,2553,3.53,2554,3.53,2555,3.53,2556,3.53,2557,3.53,2558,3.53]],["title/modules.html",[2559,4.279]],["body/modules.html",[71,0.018,317,0.018,318,0.018,2559,5.142]],["title/overview.html",[2435,3.811]],["body/overview.html",[2,1.18,71,0.018,317,0.018,318,0.018,569,1.965,591,3.272,2435,4.535,2517,4.535,2560,5.939,2561,5.093]],["title/properties.html",[41,0.622,2407,2.611]],["body/properties.html",[41,0.846,71,0.018,317,0.018,318,0.018,574,4.557,2562,5.968]],["title/miscellaneous/typealiases.html",[2563,2.111,2564,4.393]],["body/miscellaneous/typealiases.html",[40,0.357,71,0.018,73,0.408,317,0.018,318,0.018,623,4.513,679,5.159,1029,4.513,2563,4.099,2565,5.911,2566,5.911]],["title/miscellaneous/variables.html",[2563,2.111,2567,3.767]],["body/miscellaneous/variables.html",[9,0.113,15,0.814,27,0.94,31,2.193,40,0.191,71,0.02,72,0.585,73,0.392,114,1.951,132,2.419,134,1.118,135,0.934,148,1.048,181,3.531,197,1.968,221,2.197,245,2.49,247,2.419,317,0.012,318,0.012,320,1.872,342,1.872,369,3.662,405,1.745,414,2.419,415,4.023,418,2.197,420,2.67,425,2.716,460,2.019,566,1.294,574,3.451,577,2.776,578,2.197,665,4.023,682,2.67,690,3.134,705,2.197,734,3.143,738,3.451,739,2.419,741,3.451,856,2.716,911,4.011,912,4.011,913,4.302,924,1.749,930,2.332,1071,3.451,1108,2.197,1139,2.197,1143,4.518,1144,2.716,1149,4.518,1151,2.716,1152,2.197,1290,2.716,1295,2.716,1408,2.419,1429,2.019,1498,2.716,1528,2.716,1755,2.716,1759,2.197,1882,2.716,1907,4.518,1950,2.419,1951,3.451,2065,2.197,2208,2.716,2317,2.419,2361,2.716,2363,4.518,2365,4.518,2366,2.716,2367,3.876,2368,2.716,2369,3.876,2392,2.716,2397,2.716,2399,2.716,2400,3.876,2401,2.716,2402,3.876,2403,3.876,2404,3.876,2405,3.876,2417,2.716,2476,2.716,2477,2.716,2478,2.716,2487,2.716,2503,2.716,2517,2.419,2528,2.716,2561,2.716,2563,3.134,2567,2.716,2568,6.075,2569,3.168,2570,3.168,2571,3.168,2572,3.168,2573,4.52,2574,3.168,2575,3.168,2576,3.168,2577,3.168,2578,3.168,2579,3.168,2580,3.168,2581,3.168,2582,3.168,2583,3.168,2584,3.168,2585,3.168,2586,3.168,2587,4.52,2588,4.52,2589,3.168,2590,3.168,2591,3.168,2592,3.168,2593,3.168,2594,3.168,2595,3.168,2596,3.168,2597,3.168,2598,3.168,2599,3.168,2600,3.168,2601,3.168,2602,3.168,2603,3.168,2604,3.168,2605,3.168,2606,4.52,2607,3.168,2608,3.168,2609,3.168,2610,3.168,2611,3.168,2612,3.168,2613,3.168,2614,3.168,2615,3.168,2616,3.168,2617,3.168,2618,4.52,2619,3.168,2620,3.168,2621,4.52,2622,3.168,2623,3.168,2624,3.168,2625,3.168,2626,3.168,2627,4.52,2628,3.168,2629,3.168,2630,4.52,2631,3.168,2632,3.168,2633,3.168,2634,3.168,2635,3.168,2636,3.168,2637,3.168,2638,3.168,2639,3.168,2640,3.168,2641,3.168,2642,3.168,2643,3.168,2644,3.168,2645,3.168,2646,3.168,2647,3.168,2648,3.168,2649,3.168,2650,3.168,2651,3.168,2652,3.168,2653,3.168,2654,3.168,2655,3.168,2656,6.075,2657,3.168,2658,3.168,2659,3.168,2660,3.168,2661,3.168,2662,3.168,2663,3.168,2664,3.168,2665,3.168,2666,3.168,2667,3.168,2668,3.168,2669,3.168,2670,3.168,2671,3.168,2672,3.168]]],"invertedIndex":[["",{"_index":71,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":197,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0')}:${now.getminutes().tostring().padstart(2",{"_index":201,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0')}:${now.getseconds().tostring().padstart(2",{"_index":202,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["0).getdate",{"_index":863,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0.0.0",{"_index":2562,"title":{},"body":{"properties.html":{}}}],["0.15.0",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":2019,"title":{},"body":{"components/PieChartComponent.html":{}}}],["0.3s",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2382,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2379,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2375,"title":{},"body":{"coverage.html":{}}}],["009688",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00bcd4",{"_index":2613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01",{"_index":871,"title":{},"body":{"components/CalendarComponent.html":{}}}],["0x0000ff",{"_index":1297,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["0x00ff",{"_index":1296,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["1",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["1).getday",{"_index":861,"title":{},"body":{"components/CalendarComponent.html":{}}}],["1).padstart(2",{"_index":867,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["1).tostring().padstart(2",{"_index":196,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["1.15.0",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2208,"title":{},"body":{"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":250,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["1000",{"_index":758,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["100px",{"_index":1799,"title":{},"body":{"components/HomeComponent.html":{}}}],["10rem",{"_index":978,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["11",{"_index":856,"title":{},"body":{"components/CalendarComponent.html":{},"miscellaneous/variables.html":{}}}],["111",{"_index":2030,"title":{},"body":{"components/PieChartComponent.html":{}}}],["12",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13/13",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15",{"_index":2561,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["15.0.11",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1290,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["16/16",{"_index":2383,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2.0",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["19.2.6",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1429,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["2.0",{"_index":1041,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["2.3.0",{"_index":2425,"title":{},"body":{"dependencies.html":{}}}],["20/20",{"_index":2378,"title":{},"body":{"coverage.html":{}}}],["2025",{"_index":1324,"title":{},"body":{"components/FooterComponent.html":{}}}],["2196f3",{"_index":2611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/22",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["23px",{"_index":1801,"title":{},"body":{"components/HomeComponent.html":{}}}],["24",{"_index":760,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["25.8.24",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":2560,"title":{},"body":{"overview.html":{}}}],["29",{"_index":1353,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["29/29",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":2487,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":740,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{}}}],["3000",{"_index":1457,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"components/ToastComponent.html":{}}}],["320kbps')?.url",{"_index":1857,"title":{},"body":{"components/MusicComponent.html":{}}}],["350",{"_index":1525,"title":{},"body":{"components/GraphsComponent.html":{}}}],["37/37",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["3f51b5",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":2317,"title":{},"body":{"components/ToastComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["4.18.2",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["4.4.9",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":772,"title":{},"body":{"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["4caf50",{"_index":2604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":2503,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":173,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["500",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["59",{"_index":1211,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["6",{"_index":2517,"title":{},"body":{"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["60",{"_index":759,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["607d8b",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["673ab7",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":2615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.8.0",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1295,"title":{},"body":{"components/ExpenseListComponent.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":736,"title":{},"body":{"components/BudgetComponent.html":{}}}],["800",{"_index":770,"title":{},"body":{"components/BudgetComponent.html":{}}}],["8bc34a",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9/9",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":1212,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["9c27b0",{"_index":2617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9e9e9e",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_value",{"_index":1651,"title":{},"body":{"components/GraphsComponent.html":{}}}],["a.expense_count",{"_index":936,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.name.localecompare(b.name",{"_index":937,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["a.time.split(\":\").map(number",{"_index":1624,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ability",{"_index":2515,"title":{},"body":{"index.html":{}}}],["acc",{"_index":892,"title":{},"body":{"components/CalendarComponent.html":{}}}],["accesses",{"_index":2055,"title":{},"body":{"injectables/PostApiService.html":{}}}],["accessing",{"_index":1498,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1744,"title":{},"body":{"components/HomeComponent.html":{}}}],["accurate",{"_index":1084,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["action",{"_index":2189,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["activation",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["active",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["activepath",{"_index":2267,"title":{},"body":{"components/SidebarComponent.html":{}}}],["actual_component",{"_index":316,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["actually",{"_index":942,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["add",{"_index":28,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["add(data",{"_index":606,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["added",{"_index":210,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["addexpensecomponent",{"_index":1,"title":{"components/AddExpenseComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["adding",{"_index":14,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["additional",{"_index":916,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/SaavnService.html":{}}}],["adds",{"_index":111,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["advice",{"_index":1409,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["afterviewinit",{"_index":1952,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ahours",{"_index":1621,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ai",{"_index":320,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["ai'},{'name",{"_index":261,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["ai.component.css",{"_index":325,"title":{},"body":{"components/AiComponent.html":{}}}],["ai.component.html",{"_index":323,"title":{},"body":{"components/AiComponent.html":{}}}],["aicomponent",{"_index":260,"title":{"components/AiComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["aizasyazt2myolb9grwra6nran8ndfsvmmwzz04",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["album",{"_index":1059,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["albumname",{"_index":1060,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["albumname)}${formatfield('artist",{"_index":1098,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["alias",{"_index":2381,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":2565,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1610,"title":{},"body":{"components/GraphsComponent.html":{}}}],["all.filter(c",{"_index":947,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["all.filter(item",{"_index":622,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.map(item",{"_index":617,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.push",{"_index":610,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["all.some(c",{"_index":944,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["allexpenses",{"_index":218,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["allowed",{"_index":790,"title":{},"body":{"components/BudgetComponent.html":{}}}],["allowed/day",{"_index":2512,"title":{},"body":{"index.html":{}}}],["allowing",{"_index":2446,"title":{},"body":{"index.html":{}}}],["allows",{"_index":2479,"title":{},"body":{"index.html":{}}}],["amber",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aminutes",{"_index":1622,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amount",{"_index":129,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["amountinput",{"_index":42,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["amounts",{"_index":1590,"title":{},"body":{"components/GraphsComponent.html":{}}}],["amt",{"_index":1291,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["analysis",{"_index":363,"title":{},"body":{"components/AnalysisComponent.html":{},"injectables/GeminiApiService.html":{}}}],["analysis'},{'name",{"_index":263,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["analysis.component.css",{"_index":365,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysis.component.html",{"_index":364,"title":{},"body":{"components/AnalysisComponent.html":{}}}],["analysiscomponent",{"_index":262,"title":{"components/AnalysisComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["analyze",{"_index":1079,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["analyzing",{"_index":1347,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["angular",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/common",{"_index":163,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":340,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["angular/compiler",{"_index":2409,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":156,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":158,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":341,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/service",{"_index":2411,"title":{},"body":{"dependencies.html":{}}}],["angular/ssr",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["angularapp",{"_index":2402,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angularnodeappengine",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animate",{"_index":2325,"title":{},"body":{"components/ToastComponent.html":{}}}],["animatedbudgetprogress",{"_index":626,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animatepercentage",{"_index":642,"title":{},"body":{"components/BudgetComponent.html":{}}}],["animation",{"_index":555,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["animations",{"_index":1532,"title":{},"body":{"components/GraphsComponent.html":{}}}],["answer",{"_index":1387,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["answers",{"_index":1370,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["any).chart",{"_index":1989,"title":{},"body":{"components/PieChartComponent.html":{}}}],["any).chart(ctx",{"_index":2020,"title":{},"body":{"components/PieChartComponent.html":{}}}],["apexaxischartseries",{"_index":1535,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexchart",{"_index":683,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["apexcharts",{"_index":1537,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["apexdatalabels",{"_index":1546,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexgrid",{"_index":1548,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexnonaxischartseries",{"_index":681,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexplotoptions",{"_index":686,"title":{},"body":{"components/BudgetComponent.html":{}}}],["apexstroke",{"_index":1551,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextheme",{"_index":1556,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextitlesubtitle",{"_index":1558,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apextooltip",{"_index":1560,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexxaxis",{"_index":1538,"title":{},"body":{"components/GraphsComponent.html":{}}}],["apexyaxis",{"_index":1543,"title":{},"body":{"components/GraphsComponent.html":{}}}],["api",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.service",{"_index":346,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{}}}],["api.service.ts",{"_index":1330,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api.service.ts:12",{"_index":1335,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:15",{"_index":2052,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:16",{"_index":1343,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:35",{"_index":2063,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api.service.ts:40",{"_index":1341,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:58",{"_index":1339,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["api.service.ts:6",{"_index":1437,"title":{},"body":{"injectables/GetApiService.html":{}}}],["api.service.ts:66",{"_index":2057,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/gemini",{"_index":345,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["api/get/get",{"_index":1436,"title":{},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["api/post",{"_index":2070,"title":{},"body":{"injectables/PostApiService.html":{}}}],["api/post/post",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["api/saavan.service",{"_index":1850,"title":{},"body":{"components/MusicComponent.html":{}}}],["api/saavan.service.ts",{"_index":1026,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["api/saavan.service.ts:16",{"_index":2108,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:17",{"_index":2107,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:18",{"_index":2103,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:22",{"_index":2105,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:32",{"_index":2106,"title":{},"body":{"injectables/SaavnService.html":{}}}],["api/saavan.service.ts:94",{"_index":2104,"title":{},"body":{"injectables/SaavnService.html":{}}}],["apiurl",{"_index":1039,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component.css",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["app_version",{"_index":2133,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["appcomponent",{"_index":264,"title":{"components/AppComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2367,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appealing",{"_index":1403,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["application",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1123,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["applicationconfig",{"_index":2587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationversion",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applies",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["apply",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["appropriate",{"_index":1148,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{}}}],["appversion",{"_index":1317,"title":{},"body":{"components/FooterComponent.html":{}}}],["appversionservice",{"_index":568,"title":{"injectables/AppVersionService.html":{}},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["apr",{"_index":1599,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["april",{"_index":1656,"title":{},"body":{"components/GraphsComponent.html":{}}}],["area",{"_index":1471,"title":{},"body":{"components/GraphsComponent.html":{}}}],["arguments",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["array.from(dayamountmap.keys()).sort((a",{"_index":1589,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(monthamountmap.keys()).reverse",{"_index":1648,"title":{},"body":{"components/GraphsComponent.html":{}}}],["array.from(timeamountmap.keys",{"_index":1637,"title":{},"body":{"components/GraphsComponent.html":{}}}],["artist",{"_index":1102,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artist.name",{"_index":1931,"title":{},"body":{"components/MusicComponent.html":{}}}],["artist.name).join",{"_index":1070,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["artists",{"_index":1062,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname",{"_index":1066,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["artistsname.split(\",\")[0].trim",{"_index":1894,"title":{},"body":{"components/MusicComponent.html":{}}}],["aseconds",{"_index":1623,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ask",{"_index":1413,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asking",{"_index":1426,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["asks",{"_index":1384,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assist",{"_index":1421,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["assistant",{"_index":360,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"components/SidebarComponent.html":{}}}],["async",{"_index":328,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["audio",{"_index":1812,"title":{},"body":{"components/MusicComponent.html":{}}}],["aug",{"_index":1602,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["august",{"_index":1659,"title":{},"body":{"components/GraphsComponent.html":{}}}],["automatically",{"_index":2216,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["available",{"_index":2061,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["average",{"_index":753,"title":{},"body":{"components/BudgetComponent.html":{}}}],["averages",{"_index":1376,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["avg",{"_index":789,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["avgallowedperday",{"_index":627,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgallowedperday.tofixed(2",{"_index":792,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday",{"_index":628,"title":{},"body":{"components/BudgetComponent.html":{}}}],["avgspentperday.tofixed(2",{"_index":793,"title":{},"body":{"components/BudgetComponent.html":{}}}],["await",{"_index":354,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["axis",{"_index":1541,"title":{},"body":{"components/GraphsComponent.html":{}}}],["b",{"_index":934,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{}}}],["b.expense_count",{"_index":935,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["b.time.split(\":\").map(number",{"_index":1628,"title":{},"body":{"components/GraphsComponent.html":{}}}],["backend",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["background",{"_index":1530,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{}}}],["backgroundcolor",{"_index":2015,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backgroundcolors",{"_index":2004,"title":{},"body":{"components/PieChartComponent.html":{}}}],["backspace",{"_index":1783,"title":{},"body":{"components/HomeComponent.html":{}}}],["backspace/delete",{"_index":1714,"title":{},"body":{"components/HomeComponent.html":{}}}],["backticks",{"_index":1117,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["backup",{"_index":2068,"title":{},"body":{"injectables/PostApiService.html":{}}}],["backup_frequency",{"_index":2127,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bar",{"_index":2026,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["base",{"_index":1141,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{}}}],["based",{"_index":78,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["baseinstructions",{"_index":1360,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["baseurl",{"_index":1037,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["before",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beginatzero",{"_index":2040,"title":{},"body":{"components/PieChartComponent.html":{}}}],["beginning",{"_index":1404,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["behaviorsubject",{"_index":2256,"title":{},"body":{"injectables/SectionService.html":{}}}],["behaviorsubject('home",{"_index":2254,"title":{},"body":{"injectables/SectionService.html":{}}}],["being",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1111,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["better",{"_index":1422,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["between",{"_index":750,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["bg",{"_index":664,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ToastComponent.html":{}}}],["bhours",{"_index":1625,"title":{},"body":{"components/GraphsComponent.html":{}}}],["bills",{"_index":2607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":2307,"title":{},"body":{"components/ToastComponent.html":{}}}],["block",{"_index":2242,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["blockkey",{"_index":1701,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockkey(event",{"_index":1710,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocks",{"_index":1394,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["blue",{"_index":741,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["bminutes",{"_index":1626,"title":{},"body":{"components/GraphsComponent.html":{}}}],["body",{"_index":1124,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["boolean",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":2400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["border",{"_index":1793,"title":{},"body":{"components/HomeComponent.html":{}}}],["bordercolor",{"_index":2009,"title":{},"body":{"components/PieChartComponent.html":{}}}],["borderwidth",{"_index":2016,"title":{},"body":{"components/PieChartComponent.html":{}}}],["bottom",{"_index":2028,"title":{},"body":{"components/PieChartComponent.html":{}}}],["boxes",{"_index":2511,"title":{},"body":{"index.html":{}}}],["browser",{"_index":342,"title":{},"body":{"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserdistfolder",{"_index":2403,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browser’s",{"_index":2539,"title":{},"body":{"index.html":{}}}],["bseconds",{"_index":1627,"title":{},"body":{"components/GraphsComponent.html":{}}}],["budget",{"_index":590,"title":{"interfaces/Budget.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{}}}],["budget'},{'name",{"_index":267,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["budget.component.css",{"_index":625,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget.component.html",{"_index":624,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budget_id",{"_index":593,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetcolorclass",{"_index":629,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetcomponent",{"_index":266,"title":{"components/BudgetComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["budgetform",{"_index":630,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetkey",{"_index":2116,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetmessage",{"_index":631,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetprogress",{"_index":632,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgets",{"_index":633,"title":{},"body":{"components/BudgetComponent.html":{}}}],["budgetschema",{"_index":2136,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["budgetservice",{"_index":598,"title":{"injectables/BudgetService.html":{}},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["build",{"_index":1071,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["bullet",{"_index":1397,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["button",{"_index":1685,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/SearchButtonComponent.html":{}}}],["button'},{'name",{"_index":304,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["button.component.css",{"_index":2192,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.html",{"_index":2193,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts",{"_index":2187,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:25",{"_index":2219,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:30",{"_index":2224,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:35",{"_index":2227,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:40",{"_index":2199,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:54",{"_index":2214,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:70",{"_index":2209,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button.component.ts:84",{"_index":2202,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["button/search",{"_index":2186,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["c.category_id",{"_index":945,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["calculatebudgetprogress",{"_index":643,"title":{},"body":{"components/BudgetComponent.html":{}}}],["calculatetotalexpenses",{"_index":818,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calculatetotalexpenses(fromdate",{"_index":822,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar",{"_index":807,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["calendar'},{'name",{"_index":269,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["calendar.component.css",{"_index":809,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendar.component.html",{"_index":808,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendarcomponent",{"_index":268,"title":{"components/CalendarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["calendardays",{"_index":810,"title":{},"body":{"components/CalendarComponent.html":{}}}],["calendartitle",{"_index":811,"title":{},"body":{"components/CalendarComponent.html":{}}}],["callbacks",{"_index":2031,"title":{},"body":{"components/PieChartComponent.html":{}}}],["called",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["cancel",{"_index":797,"title":{},"body":{"components/BudgetComponent.html":{}}}],["canvasref",{"_index":1955,"title":{},"body":{"components/PieChartComponent.html":{}}}],["care",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":246,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cat",{"_index":1185,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat.color",{"_index":1988,"title":{},"body":{"components/PieChartComponent.html":{}}}],["cat.icon",{"_index":1016,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["cat.name",{"_index":1015,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["cat?.color",{"_index":1190,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.icon",{"_index":1189,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["cat?.name",{"_index":1188,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["catch",{"_index":213,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["categories",{"_index":924,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categories.find(c",{"_index":1186,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category",{"_index":100,"title":{"interfaces/Category.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["category.category_id",{"_index":188,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["category.name",{"_index":190,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["category.service",{"_index":1175,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category.user_id",{"_index":1007,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["category_color",{"_index":1171,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_icon",{"_index":1172,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["category_id",{"_index":181,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["category_name",{"_index":1173,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{}}}],["categorycolors",{"_index":1956,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorydropdowncomponent",{"_index":35,"title":{"components/CategoryDropdownComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["categoryexists",{"_index":943,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["categorykey",{"_index":2114,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categorymap",{"_index":1957,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categoryref",{"_index":956,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryschema",{"_index":2120,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["categoryselected",{"_index":966,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["categoryservice",{"_index":920,"title":{"injectables/CategoryService.html":{}},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["categorytotals",{"_index":1995,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytotals[catname",{"_index":1999,"title":{},"body":{"components/PieChartComponent.html":{}}}],["categorytype",{"_index":963,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["catname",{"_index":1997,"title":{},"body":{"components/PieChartComponent.html":{}}}],["ccc",{"_index":2007,"title":{},"body":{"components/PieChartComponent.html":{}}}],["center",{"_index":1611,"title":{},"body":{"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["certain",{"_index":1716,"title":{},"body":{"components/HomeComponent.html":{}}}],["change",{"_index":1152,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["changed",{"_index":1519,"title":{},"body":{"components/GraphsComponent.html":{}}}],["changemonth",{"_index":819,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changemonth(offset",{"_index":824,"title":{},"body":{"components/CalendarComponent.html":{}}}],["changes",{"_index":107,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["changes['currentdate",{"_index":1570,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["changes['viewtype",{"_index":1569,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["characters",{"_index":249,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/SearchButtonComponent.html":{}}}],["chart",{"_index":682,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["chart'},{'name",{"_index":301,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["chart.component",{"_index":1760,"title":{},"body":{"components/HomeComponent.html":{}}}],["chart.component.css",{"_index":1953,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.html",{"_index":1954,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts",{"_index":1951,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chart.component.ts:114",{"_index":1965,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:137",{"_index":1970,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:15",{"_index":1980,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:16",{"_index":1976,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:17",{"_index":1974,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:18",{"_index":1979,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:19",{"_index":1977,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:20",{"_index":1975,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:21",{"_index":1978,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:23",{"_index":1973,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:24",{"_index":1961,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:25",{"_index":1960,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:35",{"_index":1968,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:48",{"_index":1966,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:52",{"_index":1967,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:58",{"_index":1962,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:72",{"_index":1964,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.component.ts:95",{"_index":1963,"title":{},"body":{"components/PieChartComponent.html":{}}}],["chart.js",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["chart/pie",{"_index":1759,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chartdetails",{"_index":1480,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartoptions",{"_index":679,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["charts",{"_index":1472,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"dependencies.html":{}}}],["chartseries",{"_index":1481,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartxaxis",{"_index":1482,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chartyaxis",{"_index":1483,"title":{},"body":{"components/GraphsComponent.html":{}}}],["chat",{"_index":1432,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["chatmessage",{"_index":1024,"title":{"interfaces/ChatMessage.html":{}},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["check",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["chosen",{"_index":2482,"title":{},"body":{"index.html":{}}}],["class",{"_index":166,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["classes",{"_index":876,"title":{},"body":{"components/CalendarComponent.html":{}}}],["cleanedsong",{"_index":1879,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace",{"_index":1885,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.replace(/^```json",{"_index":1881,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith",{"_index":1884,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanedsong.startswith(\"```json",{"_index":1880,"title":{},"body":{"components/MusicComponent.html":{}}}],["cleanup",{"_index":1910,"title":{},"body":{"components/MusicComponent.html":{}}}],["clearinterval(interval",{"_index":779,"title":{},"body":{"components/BudgetComponent.html":{}}}],["clearinterval(this.interval",{"_index":1866,"title":{},"body":{"components/MusicComponent.html":{}}}],["cli",{"_index":2581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["click",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["clicked",{"_index":1686,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clickedinside",{"_index":1688,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["clicks",{"_index":985,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["close",{"_index":987,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["closed",{"_index":2222,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["closemodal",{"_index":644,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["cloud",{"_index":2584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code",{"_index":1393,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["color",{"_index":734,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["color2",{"_index":1790,"title":{},"body":{"components/HomeComponent.html":{}}}],["combining",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["comma",{"_index":1064,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["commonmodule",{"_index":34,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["complete",{"_index":2502,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["component/category",{"_index":160,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["component/graphs/graphs.component",{"_index":1757,"title":{},"body":{"components/HomeComponent.html":{}}}],["component/pie",{"_index":1758,"title":{},"body":{"components/HomeComponent.html":{}}}],["component_template",{"_index":258,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{},"overview.html":{}}}],["concatenating",{"_index":1073,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["config",{"_index":2363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice",{"_index":1135,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["configuration",{"_index":578,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":87,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["configures",{"_index":84,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["confirm(\"are",{"_index":780,"title":{},"body":{"components/BudgetComponent.html":{}}}],["console.error(\"chart.js",{"_index":1993,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"error",{"_index":2041,"title":{},"body":{"components/PieChartComponent.html":{}}}],["console.error(\"failed",{"_index":883,"title":{},"body":{"components/CalendarComponent.html":{}}}],["console.error('error",{"_index":896,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["console.error('failed",{"_index":1889,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.error('gemini",{"_index":1351,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["console.error('localstorage",{"_index":2142,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["console.error('submit",{"_index":215,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["console.log('backup",{"_index":2095,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('child",{"_index":2230,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["console.log('posting",{"_index":2083,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.log('user",{"_index":2089,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn('incomplete",{"_index":1895,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('no",{"_index":1876,"title":{},"body":{"components/MusicComponent.html":{}}}],["console.warn('user",{"_index":2098,"title":{},"body":{"injectables/PostApiService.html":{}}}],["console.warn(`category",{"_index":946,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["const",{"_index":191,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":61,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["constructor(appversionservice",{"_index":1318,"title":{},"body":{"components/FooterComponent.html":{},"injectables/StorageService.html":{}}}],["constructor(categoryservice",{"_index":968,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["constructor(expenseservice",{"_index":649,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["constructor(fb",{"_index":62,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["constructor(geminiapi",{"_index":330,"title":{},"body":{"components/AiComponent.html":{}}}],["constructor(globalloader",{"_index":2198,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["constructor(globalloaderservice",{"_index":1445,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["constructor(http",{"_index":1334,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["constructor(private",{"_index":921,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["constructor(saavnservice",{"_index":1822,"title":{},"body":{"components/MusicComponent.html":{}}}],["constructor(sectionservice",{"_index":1675,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["constructor(storageservice",{"_index":799,"title":{},"body":{"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{}}}],["constructor(toastservice",{"_index":2297,"title":{},"body":{"components/ToastComponent.html":{}}}],["constructor(userservice",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["constructs",{"_index":1497,"title":{},"body":{"components/GraphsComponent.html":{}}}],["container",{"_index":1690,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/ToastComponent.html":{}}}],["containing",{"_index":1518,"title":{},"body":{"components/GraphsComponent.html":{},"injectables/PostApiService.html":{}}}],["content",{"_index":1122,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["contents",{"_index":1125,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["context",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/PieChartComponent.html":{}}}],["context.dataset.label}${value.tolocalestring(\"en",{"_index":2034,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed",{"_index":2033,"title":{},"body":{"components/PieChartComponent.html":{}}}],["context.parsed.y",{"_index":2032,"title":{},"body":{"components/PieChartComponent.html":{}}}],["continues",{"_index":1425,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["contributors",{"_index":2556,"title":{},"body":{"index.html":{}}}],["control",{"_index":2201,"title":{},"body":{"components/SearchButtonComponent.html":{},"index.html":{}}}],["controls",{"_index":150,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["copyright",{"_index":1839,"title":{},"body":{"components/MusicComponent.html":{}}}],["coverage",{"_index":2356,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createform",{"_index":52,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["createnoderequesthandler(app",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{}}}],["crypto.randomuuid",{"_index":609,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["css",{"_index":2453,"title":{},"body":{"index.html":{}}}],["ctx",{"_index":2010,"title":{},"body":{"components/PieChartComponent.html":{}}}],["currency",{"_index":634,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["current",{"_index":114,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["currentdate",{"_index":1494,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["currently",{"_index":146,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["currentmonth",{"_index":812,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses",{"_index":1578,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentmonthexpenses.foreach(item",{"_index":1583,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentsection",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"injectables/SectionService.html":{}}}],["currentsettings",{"_index":2341,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsettings[key",{"_index":2343,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["currentsong",{"_index":1813,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["currentsong.album?.name",{"_index":1061,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.length",{"_index":1068,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.all.map((artist",{"_index":1069,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.artists.primary[0]?.name",{"_index":1937,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.artists?.all",{"_index":1067,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.copyright)}${formatfield('album",{"_index":1097,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.duration)}${formatfield('label",{"_index":1094,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.label)}${formatfield('language",{"_index":1095,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.language)}${formatfield('copyright",{"_index":1096,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.name",{"_index":1936,"title":{},"body":{"components/MusicComponent.html":{}}}],["currentsong.name)}${formatfield('type",{"_index":1091,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.type)}${formatfield('year",{"_index":1092,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentsong.year)}${formatfield('duration",{"_index":1093,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["currentstep",{"_index":774,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentstep).tofixed(1",{"_index":777,"title":{},"body":{"components/BudgetComponent.html":{}}}],["currentyear",{"_index":813,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses",{"_index":1642,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["currentyearexpenses.foreach(item",{"_index":1643,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["cursor",{"_index":1791,"title":{},"body":{"components/HomeComponent.html":{}}}],["curve",{"_index":1552,"title":{},"body":{"components/GraphsComponent.html":{}}}],["custom",{"_index":272,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["customization",{"_index":2518,"title":{},"body":{"index.html":{}}}],["custommodalcomponent",{"_index":271,"title":{"components/CustomModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["cyan",{"_index":2614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d.quality",{"_index":1856,"title":{},"body":{"components/MusicComponent.html":{}}}],["daily",{"_index":1504,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["dark",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["dark:text",{"_index":2322,"title":{},"body":{"components/ToastComponent.html":{}}}],["darkencolor",{"_index":1272,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["darkencolor(color",{"_index":1279,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["dashboard",{"_index":1694,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["data",{"_index":133,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["data.album?.name",{"_index":1928,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.artists?.primary",{"_index":1929,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.copyright",{"_index":1927,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.duration",{"_index":1923,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.label",{"_index":1924,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.language",{"_index":1926,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.name",{"_index":1920,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.playcount",{"_index":1925,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.type",{"_index":1921,"title":{},"body":{"components/MusicComponent.html":{}}}],["data.year",{"_index":1922,"title":{},"body":{"components/MusicComponent.html":{}}}],["data/categories",{"_index":2112,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["datablock",{"_index":1427,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["datalabels",{"_index":1484,"title":{},"body":{"components/GraphsComponent.html":{}}}],["datasetconfig",{"_index":2014,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.fill",{"_index":2017,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasetconfig.tension",{"_index":2018,"title":{},"body":{"components/PieChartComponent.html":{}}}],["datasets",{"_index":2021,"title":{},"body":{"components/PieChartComponent.html":{}}}],["date",{"_index":115,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["date().getfullyear",{"_index":840,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date().getmonth",{"_index":838,"title":{},"body":{"components/CalendarComponent.html":{}}}],["date(`${a.date}t${a.time",{"_index":1192,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(`${b.date}t${b.time",{"_index":1194,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(exp.date",{"_index":722,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseListComponent.html":{}}}],["date(fromdate",{"_index":1204,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(item.date",{"_index":1207,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(lastbackupstr",{"_index":2079,"title":{},"body":{"injectables/PostApiService.html":{}}}],["date(this.currentdate",{"_index":1767,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(this.latestbudget.fromdate",{"_index":718,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(this.latestbudget.todate",{"_index":719,"title":{},"body":{"components/BudgetComponent.html":{}}}],["date(todate",{"_index":1205,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["date(value",{"_index":1774,"title":{},"body":{"components/HomeComponent.html":{}}}],["date(year",{"_index":860,"title":{},"body":{"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["date.getfullyear",{"_index":1781,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.toisostring().split('t')[0",{"_index":1780,"title":{},"body":{"components/HomeComponent.html":{}}}],["date.tolocaledatestring",{"_index":1287,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["datea",{"_index":1191,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["datea.gettime",{"_index":1196,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb",{"_index":1193,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dateb.gettime",{"_index":1195,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["dates",{"_index":2489,"title":{},"body":{"index.html":{}}}],["datestr",{"_index":193,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{}}}],["day",{"_index":791,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["day.label",{"_index":900,"title":{},"body":{"components/CalendarComponent.html":{}}}],["day.tostring",{"_index":1613,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap",{"_index":1575,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.get(day",{"_index":1588,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.has(day",{"_index":1586,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dayamountmap.set(day",{"_index":1587,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days",{"_index":873,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["days.map(day",{"_index":1591,"title":{},"body":{"components/GraphsComponent.html":{}}}],["days[value",{"_index":1594,"title":{},"body":{"components/GraphsComponent.html":{}}}],["daysinmonth",{"_index":862,"title":{},"body":{"components/CalendarComponent.html":{}}}],["dd",{"_index":1723,"title":{},"body":{"components/HomeComponent.html":{}}}],["ddd",{"_index":2039,"title":{},"body":{"components/PieChartComponent.html":{}}}],["dec",{"_index":1606,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["december",{"_index":1663,"title":{},"body":{"components/GraphsComponent.html":{}}}],["declare",{"_index":1981,"title":{},"body":{"components/PieChartComponent.html":{}}}],["decorators",{"_index":126,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["deep",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":134,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":2223,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["defaultschema",{"_index":2140,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultschema[key",{"_index":2160,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["defaultviewtype",{"_index":1697,"title":{},"body":{"components/HomeComponent.html":{}}}],["define",{"_index":2504,"title":{},"body":{"index.html":{}}}],["defined",{"_index":66,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["delay",{"_index":2218,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["delete",{"_index":783,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["delete'].includes(event.key",{"_index":1784,"title":{},"body":{"components/HomeComponent.html":{}}}],["delete(budget_id",{"_index":621,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["delete(category_id",{"_index":941,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["delete(expense_id",{"_index":1202,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["deletebudget",{"_index":645,"title":{},"body":{"components/BudgetComponent.html":{}}}],["deleted",{"_index":786,"title":{},"body":{"components/BudgetComponent.html":{}}}],["dependencies",{"_index":69,"title":{"dependencies.html":{}},"body":{"components/AddExpenseComponent.html":{},"dependencies.html":{},"index.html":{}}}],["depending",{"_index":1732,"title":{},"body":{"components/HomeComponent.html":{}}}],["deploying",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{}}}],["design",{"_index":2529,"title":{},"body":{"index.html":{}}}],["designed",{"_index":2438,"title":{},"body":{"index.html":{}}}],["desktop",{"_index":2537,"title":{},"body":{"index.html":{}}}],["detailed",{"_index":2552,"title":{},"body":{"index.html":{}}}],["details",{"_index":275,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["details(name",{"_index":1100,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["detect",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["detection",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["determines",{"_index":1503,"title":{},"body":{"components/GraphsComponent.html":{}}}],["dev",{"_index":2582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developers",{"_index":2555,"title":{},"body":{"index.html":{}}}],["development",{"_index":1149,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["developmentenvironment",{"_index":1144,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["device's",{"_index":2483,"title":{},"body":{"index.html":{}}}],["devices",{"_index":2530,"title":{},"body":{"index.html":{}}}],["different",{"_index":2475,"title":{},"body":{"index.html":{}}}],["differentiation",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directive",{"_index":256,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":315,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dirname(fileurltopath(import.meta.url",{"_index":2586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disables",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":147,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["displayedpercentage",{"_index":635,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displayedpercentage.tofixed(1",{"_index":788,"title":{},"body":{"components/BudgetComponent.html":{}}}],["displaying",{"_index":2492,"title":{},"body":{"index.html":{}}}],["displays",{"_index":1470,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{},"index.html":{}}}],["distinct",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distributed",{"_index":2474,"title":{},"body":{"index.html":{}}}],["document.createelement('div",{"_index":2308,"title":{},"body":{"components/ToastComponent.html":{}}}],["document.documentelement.classlist.add('dark",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["document.documentelement.classlist.remove('dark",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('toast",{"_index":2304,"title":{},"body":{"components/ToastComponent.html":{}}}],["document:click",{"_index":967,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:click(event",{"_index":982,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["document:contextmenu",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["document:contextmenu(event",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":2357,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["domsanitizer",{"_index":333,"title":{},"body":{"components/AiComponent.html":{}}}],["doughnut",{"_index":2001,"title":{},"body":{"components/PieChartComponent.html":{}}}],["download",{"_index":2521,"title":{},"body":{"index.html":{}}}],["drinks",{"_index":2600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dropdown",{"_index":102,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["dropdown'},{'name",{"_index":270,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["dropdown.component",{"_index":162,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["dropdown.component.css",{"_index":954,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":955,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":950,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["dropdown.component.ts:104",{"_index":994,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:115",{"_index":983,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:30",{"_index":981,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:36",{"_index":979,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:43",{"_index":974,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:52",{"_index":971,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:55",{"_index":997,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:58",{"_index":999,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:61",{"_index":969,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:73",{"_index":990,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:78",{"_index":988,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown.component.ts:96",{"_index":995,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["dropdown/category",{"_index":161,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["dropdownmaxheightclass",{"_index":964,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["duration",{"_index":769,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["during",{"_index":1907,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["dynamic",{"_index":2410,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":882,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.category_id",{"_index":1187,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["e.g",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["each",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ease",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["easily",{"_index":2440,"title":{},"body":{"index.html":{}}}],["edit",{"_index":1223,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["editform",{"_index":1216,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["education",{"_index":2616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["effect",{"_index":1848,"title":{},"body":{"components/MusicComponent.html":{}}}],["elapseddays",{"_index":762,"title":{},"body":{"components/BudgetComponent.html":{}}}],["element",{"_index":130,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["email",{"_index":2128,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["emits",{"_index":952,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["emitting",{"_index":2231,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["emojis",{"_index":1392,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["emphasizes",{"_index":2441,"title":{},"body":{"index.html":{}}}],["enabled",{"_index":1528,"title":{},"body":{"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":2506,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":2071,"title":{},"body":{"injectables/PostApiService.html":{}}}],["endpoints",{"_index":1154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["enhances",{"_index":1086,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["ensure",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["ensuring",{"_index":2540,"title":{},"body":{"index.html":{}}}],["enter",{"_index":2211,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entered",{"_index":2225,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["entertainment",{"_index":2610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entries",{"_index":2480,"title":{},"body":{"index.html":{}}}],["entry",{"_index":2501,"title":{},"body":{"index.html":{}}}],["environment",{"_index":577,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.applicationversion",{"_index":584,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["environment.developmentenvironment",{"_index":1150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["environment.prod.ts",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environments",{"_index":586,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["err",{"_index":895,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["error",{"_index":214,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["etc",{"_index":1103,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["event",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.preventdefault",{"_index":1691,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["event.target",{"_index":1011,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/MusicComponent.html":{}}}],["event.target.closest('.hamburger",{"_index":1689,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["event.target.innerwidth",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["event.target.value",{"_index":1769,"title":{},"body":{"components/HomeComponent.html":{}}}],["event.url",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["event.urlafterredirects",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventemitter",{"_index":980,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["exceeded",{"_index":744,"title":{},"body":{"components/BudgetComponent.html":{}}}],["exists",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["exp",{"_index":891,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{}}}],["exp.amount",{"_index":902,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.category_icon",{"_index":1301,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["exp.category_name",{"_index":903,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.date",{"_index":1357,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["exp.isextraspending",{"_index":1359,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["exp.location",{"_index":907,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.note",{"_index":906,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.payment_mode",{"_index":908,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["exp.time",{"_index":905,"title":{},"body":{"components/CalendarComponent.html":{},"injectables/GeminiApiService.html":{}}}],["expands",{"_index":2190,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["expense",{"_index":29,"title":{"interfaces/Expense.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["expense'},{'name",{"_index":259,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expense.component",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["expense.component.css",{"_index":37,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.html",{"_index":39,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts",{"_index":12,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["expense.component.ts:101",{"_index":112,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:122",{"_index":109,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:141",{"_index":88,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:162",{"_index":104,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:198",{"_index":119,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:207",{"_index":124,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:24",{"_index":131,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:27",{"_index":145,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:30",{"_index":140,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:33",{"_index":136,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:36",{"_index":149,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:39",{"_index":143,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:42",{"_index":139,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:45",{"_index":152,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:48",{"_index":67,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:65",{"_index":93,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:78",{"_index":82,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.component.ts:95",{"_index":98,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expense.service",{"_index":914,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense/add",{"_index":11,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"coverage.html":{}}}],["expense_count",{"_index":910,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expense_id",{"_index":1174,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expensecountmap",{"_index":926,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensecountmap[category.category_id",{"_index":932,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expensedetailsmodalcomponent",{"_index":274,"title":{"components/ExpenseDetailsModalComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenseform",{"_index":43,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["expensekey",{"_index":2115,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenselistcomponent",{"_index":276,"title":{"components/ExpenseListComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["expenses",{"_index":16,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"components/SearchComponent.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["expenses'},{'name",{"_index":294,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["expenses.component",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["expenses.component.ts",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["expenses.filter((exp",{"_index":721,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expenses.filter(exp",{"_index":1619,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.filter(item",{"_index":1579,"title":{},"body":{"components/GraphsComponent.html":{}}}],["expenses.map(item",{"_index":1183,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["expenses.reduce((map",{"_index":927,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["expenses/expense",{"_index":1214,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["expenses/list",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["expenseschema",{"_index":2123,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["expenseselected",{"_index":1275,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["expenseservice",{"_index":64,"title":{"injectables/ExpenseService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"coverage.html":{}}}],["expensesinrange",{"_index":720,"title":{},"body":{"components/BudgetComponent.html":{}}}],["expensessearch",{"_index":2246,"title":{},"body":{"components/SearchComponent.html":{}}}],["experience",{"_index":1088,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explanation",{"_index":1113,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["explore",{"_index":2488,"title":{},"body":{"index.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["express",{"_index":2417,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["extra",{"_index":252,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["extract",{"_index":1058,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["exwise",{"_index":1325,"title":{},"body":{"components/FooterComponent.html":{}}}],["f44336",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fade",{"_index":2326,"title":{},"body":{"components/ToastComponent.html":{}}}],["failed",{"_index":216,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["fails",{"_index":1892,"title":{},"body":{"components/MusicComponent.html":{}}}],["false",{"_index":148,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fast",{"_index":2542,"title":{},"body":{"index.html":{}}}],["fb",{"_index":75,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["features",{"_index":2463,"title":{},"body":{"index.html":{}}}],["features/add",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["features/ai/ai.component",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["features/analysis/analysis.component",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["features/budget/budget.component",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["features/calendar/calendar.component",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["features/home/home.component",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["features/list",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["features/music/music.component",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["features/search/search.component",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["features/settings/settings.component",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["feb",{"_index":1597,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["february",{"_index":1654,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fetch",{"_index":884,"title":{},"body":{"components/CalendarComponent.html":{}}}],["fetching",{"_index":1133,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["ff4081",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5722",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff6347",{"_index":2601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff9800",{"_index":2605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffc107",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffeb3b",{"_index":2609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fff",{"_index":2029,"title":{},"body":{"components/PieChartComponent.html":{}}}],["field",{"_index":917,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/SearchButtonComponent.html":{}}}],["fieldname",{"_index":1054,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["fields",{"_index":1075,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fills",{"_index":122,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["filter(loc",{"_index":224,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filter(note",{"_index":228,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filtered",{"_index":137,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredlocationsuggestions",{"_index":44,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filterednotesuggestions",{"_index":45,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["filteredpastdata",{"_index":2149,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["filtering",{"_index":1501,"title":{},"body":{"components/GraphsComponent.html":{}}}],["filters",{"_index":108,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["finalize",{"_index":1032,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["finally",{"_index":1908,"title":{},"body":{"components/MusicComponent.html":{}}}],["finance",{"_index":2448,"title":{},"body":{"index.html":{}}}],["financial",{"_index":1363,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["firebase",{"_index":2583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":2436,"title":{},"body":{"index.html":{}}}],["firstday",{"_index":859,"title":{},"body":{"components/CalendarComponent.html":{}}}],["firstsong",{"_index":1902,"title":{},"body":{"components/MusicComponent.html":{}}}],["firstvaluefrom",{"_index":1033,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["firstvaluefrom(this.http.post(this.apiurl",{"_index":1128,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["fits",{"_index":1085,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["flag",{"_index":1755,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["flags",{"_index":1743,"title":{},"body":{"components/HomeComponent.html":{}}}],["flash:generatecontent?key=${environment.geminiapikey",{"_index":1042,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["flex",{"_index":2310,"title":{},"body":{"components/ToastComponent.html":{}}}],["flexibility",{"_index":2516,"title":{},"body":{"index.html":{}}}],["floating",{"_index":2188,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["flow",{"_index":2547,"title":{},"body":{"index.html":{}}}],["focus",{"_index":2213,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["focused",{"_index":1420,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["focuses",{"_index":2217,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["food",{"_index":2476,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":1314,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":279,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["footer.component.css",{"_index":1316,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":1315,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":278,"title":{"components/FooterComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["force",{"_index":1750,"title":{},"body":{"components/HomeComponent.html":{}}}],["forceinputreset",{"_index":1698,"title":{},"body":{"components/HomeComponent.html":{}}}],["forecolor",{"_index":1529,"title":{},"body":{"components/GraphsComponent.html":{}}}],["form",{"_index":19,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["format",{"_index":1388,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{}}}],["formatdateforinput",{"_index":1702,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatdateforinput(date",{"_index":1718,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatfield",{"_index":1053,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatfield('name",{"_index":1090,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formatmonthforinput",{"_index":1703,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatmonthforinput(date",{"_index":1726,"title":{},"body":{"components/HomeComponent.html":{}}}],["formats",{"_index":1720,"title":{},"body":{"components/HomeComponent.html":{}}}],["formatted",{"_index":1725,"title":{},"body":{"components/HomeComponent.html":{}}}],["formattedexpense",{"_index":1182,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["formatter",{"_index":1593,"title":{},"body":{"components/GraphsComponent.html":{}}}],["formattime",{"_index":1814,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(duration",{"_index":1939,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(progress",{"_index":1938,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(seconds",{"_index":1824,"title":{},"body":{"components/MusicComponent.html":{}}}],["formattime(song.duration",{"_index":1935,"title":{},"body":{"components/MusicComponent.html":{}}}],["formatting",{"_index":1114,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["formbuilder",{"_index":63,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formgroup",{"_index":86,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["formsmodule",{"_index":321,"title":{},"body":{"components/AiComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/SearchButtonComponent.html":{}}}],["forwards",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["found",{"_index":901,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/MusicComponent.html":{}}}],["framework",{"_index":2452,"title":{},"body":{"index.html":{}}}],["fri",{"_index":852,"title":{},"body":{"components/CalendarComponent.html":{}}}],["friendly",{"_index":1383,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["friends",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["from.sethours(0",{"_index":1209,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["fromdate",{"_index":594,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["fromdate.gettime",{"_index":757,"title":{},"body":{"components/BudgetComponent.html":{}}}],["fromdate.setdate(todate.getdate",{"_index":1352,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["frontend",{"_index":2451,"title":{},"body":{"index.html":{}}}],["full",{"_index":2315,"title":{},"body":{"components/ToastComponent.html":{}}}],["fullnames",{"_index":1652,"title":{},"body":{"components/GraphsComponent.html":{}}}],["fullnames[_value",{"_index":1664,"title":{},"body":{"components/GraphsComponent.html":{}}}],["function",{"_index":1167,"title":{},"body":{"components/CustomModalComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["functionality",{"_index":2464,"title":{},"body":{"index.html":{}}}],["functions",{"_index":2585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["future",{"_index":2495,"title":{},"body":{"index.html":{}}}],["g",{"_index":1294,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gathers",{"_index":2058,"title":{},"body":{"injectables/PostApiService.html":{}}}],["gemini",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapi",{"_index":335,"title":{},"body":{"components/AiComponent.html":{}}}],["geminiapikey",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["geminiapiservice",{"_index":331,"title":{"injectables/GeminiApiService.html":{}},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["generated",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["generateexpenseanalysisprompt",{"_index":1331,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generateexpenseanalysisprompt(userquery",{"_index":1336,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["generates",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["generateuserid",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["getall",{"_index":603,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getallbudgets",{"_index":2172,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallcategories",{"_index":2171,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getallexpenses",{"_index":2176,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getapiservice",{"_index":1434,"title":{"injectables/GetApiService.html":{}},"body":{"injectables/GetApiService.html":{},"coverage.html":{}}}],["getapiurl",{"_index":1145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getbudgetkey",{"_index":2181,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getbyexpenseid",{"_index":1302,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["getbyexpenseid(expense_id",{"_index":1200,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getcategorykey",{"_index":2178,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getdisplaydate",{"_index":1704,"title":{},"body":{"components/HomeComponent.html":{}}}],["getexpensekey",{"_index":2179,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getformatteddate",{"_index":1273,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["getformatteddate(exp",{"_index":1282,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["gethistory",{"_index":1134,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["getlast30daysexpenses",{"_index":1332,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getlocalisostring",{"_index":1176,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["getresponse",{"_index":1333,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getresponse(prompt",{"_index":1342,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["getsongurl",{"_index":1815,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsongurl(song",{"_index":1827,"title":{},"body":{"components/MusicComponent.html":{}}}],["getsortedcategoriesbyexpensecount",{"_index":922,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["getting",{"_index":2428,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":2174,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getuserdatafromlocalstorage",{"_index":2050,"title":{},"body":{"injectables/PostApiService.html":{}}}],["getuserkey",{"_index":2183,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["getvalue",{"_index":2347,"title":{},"body":{"injectables/UserService.html":{}}}],["getvalue(key",{"_index":2346,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["getversion",{"_index":580,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["gifts",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["given",{"_index":1089,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["global",{"_index":281,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["globalloader",{"_index":2200,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["globalloadercomponent",{"_index":280,"title":{"components/GlobalLoaderComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["globalloaderservice",{"_index":399,"title":{"injectables/GlobalLoaderService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["go",{"_index":2449,"title":{},"body":{"index.html":{}}}],["gonext",{"_index":1705,"title":{},"body":{"components/HomeComponent.html":{}}}],["goprevious",{"_index":1706,"title":{},"body":{"components/HomeComponent.html":{}}}],["graph",{"_index":2470,"title":{},"body":{"index.html":{}}}],["graphs",{"_index":1476,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["graphs'},{'name",{"_index":284,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["graphs.component.css",{"_index":1478,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphs.component.html",{"_index":1479,"title":{},"body":{"components/GraphsComponent.html":{}}}],["graphscomponent",{"_index":283,"title":{"components/GraphsComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["gray",{"_index":878,"title":{},"body":{"components/CalendarComponent.html":{}}}],["green",{"_index":665,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["greeted",{"_index":2467,"title":{},"body":{"index.html":{}}}],["greetings",{"_index":1379,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["grey",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1485,"title":{},"body":{"components/GraphsComponent.html":{}}}],["groceries",{"_index":2603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grouped",{"_index":1510,"title":{},"body":{"components/GraphsComponent.html":{}}}],["gt",{"_index":899,"title":{},"body":{"components/CalendarComponent.html":{}}}],["h",{"_index":973,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["hamburger",{"_index":286,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["hamburgermenucomponent",{"_index":285,"title":{"components/HamburgerMenuComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["handle",{"_index":2043,"title":{},"body":{"injectables/PostApiService.html":{}}}],["handler",{"_index":2580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handles",{"_index":99,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["headers",{"_index":1121,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["health",{"_index":2612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":975,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["hello",{"_index":1381,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["help",{"_index":1366,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["helper",{"_index":2138,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["helpful",{"_index":1362,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["here",{"_index":1411,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["hi",{"_index":1380,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hiddeninput",{"_index":1796,"title":{},"body":{"components/HomeComponent.html":{}}}],["hiddeninputdiv",{"_index":1800,"title":{},"body":{"components/HomeComponent.html":{}}}],["hide",{"_index":1443,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"index.html":{}}}],["history",{"_index":1036,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["home",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":289,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["home.component.css",{"_index":1695,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1696,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":288,"title":{"components/HomeComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["hook",{"_index":95,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["host",{"_index":2241,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["hostlistener",{"_index":154,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:click",{"_index":992,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hostlistener('document:contextmenu",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('window:resize",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["hour",{"_index":1631,"title":{},"body":{"components/GraphsComponent.html":{}}}],["hours",{"_index":2049,"title":{},"body":{"injectables/PostApiService.html":{}}}],["hour}:${minute}:${second",{"_index":1635,"title":{},"body":{"components/GraphsComponent.html":{}}}],["html",{"_index":255,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["htmlelement",{"_index":1012,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["htmlinputelement",{"_index":1736,"title":{},"body":{"components/HomeComponent.html":{},"components/MusicComponent.html":{}}}],["http",{"_index":1043,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["http://localhost:8000",{"_index":1156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["httpclient",{"_index":1030,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["httpclientmodule",{"_index":322,"title":{},"body":{"components/AiComponent.html":{}}}],["httpheaders",{"_index":1031,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://exwiseapi.onrender.com",{"_index":1157,"title":{},"body":{"injectables/ConfigService.html":{}}}],["https://generativelanguage.googleapis.com/v1beta/models/gemini",{"_index":1040,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["https://saavn.dev/api/search/songs",{"_index":1038,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["human",{"_index":1390,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["hygiene",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["i'm",{"_index":1410,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["icon",{"_index":911,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["icon'},{'name",{"_index":291,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["icon.component.css",{"_index":1806,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.html",{"_index":1805,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon.component.ts",{"_index":1804,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["icon.component.ts:10",{"_index":1807,"title":{},"body":{"components/InfoIconComponent.html":{}}}],["icon/info",{"_index":1803,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["id",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1373,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["immediately",{"_index":2485,"title":{},"body":{"index.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":153,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["imports",{"_index":32,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["include",{"_index":1112,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["includes",{"_index":17,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["including",{"_index":1542,"title":{},"body":{"components/GraphsComponent.html":{}}}],["incorrect",{"_index":2526,"title":{},"body":{"index.html":{}}}],["increment",{"_index":773,"title":{},"body":{"components/BudgetComponent.html":{}}}],["independent",{"_index":2458,"title":{},"body":{"index.html":{}}}],["index",{"_index":40,"title":{"index.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":2110,"title":{},"body":{"interfaces/Schema.html":{}}}],["indicate",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicating",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["indicator",{"_index":1788,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["indigo",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["infer",{"_index":1110,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["infoiconcomponent",{"_index":290,"title":{"components/InfoIconComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["informative",{"_index":2509,"title":{},"body":{"index.html":{}}}],["init",{"_index":1748,"title":{},"body":{"components/HomeComponent.html":{}}}],["initform",{"_index":1217,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["initialization",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["initializes",{"_index":96,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject",{"_index":68,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["inject(platform_id",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["injectable",{"_index":567,"title":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":569,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["injected",{"_index":576,"title":{},"body":{"injectables/AppVersionService.html":{},"components/GraphsComponent.html":{}}}],["input",{"_index":106,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"index.html":{}}}],["input[type=\"date",{"_index":1786,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=\"month",{"_index":1789,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=date",{"_index":1724,"title":{},"body":{"components/HomeComponent.html":{}}}],["input[type=month",{"_index":1728,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref",{"_index":1735,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputref.value",{"_index":1771,"title":{},"body":{"components/HomeComponent.html":{}}}],["inputs",{"_index":962,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["insights",{"_index":754,"title":{},"body":{"components/BudgetComponent.html":{}}}],["instance",{"_index":76,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/ConfigService.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{}}}],["instanceof",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["intended",{"_index":2045,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["interactive",{"_index":2469,"title":{},"body":{"index.html":{}}}],["interface",{"_index":589,"title":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{}},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["interfaces",{"_index":591,"title":{},"body":{"interfaces/Budget.html":{},"interfaces/Category.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"interfaces/Schema.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intersect",{"_index":1562,"title":{},"body":{"components/GraphsComponent.html":{}}}],["interval",{"_index":775,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["intuitive",{"_index":2531,"title":{},"body":{"index.html":{}}}],["is_active",{"_index":912,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["is_backup",{"_index":2129,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["isbrowser",{"_index":599,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["iscategorydropdownopen",{"_index":957,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["iscurrentmonth",{"_index":880,"title":{},"body":{"components/CalendarComponent.html":{}}}],["isdarkmode",{"_index":636,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["isdevmode",{"_index":2595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":637,"title":{},"body":{"components/BudgetComponent.html":{}}}],["iseditopen",{"_index":1221,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["isexpenseroute",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["isextraspending",{"_index":186,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["ismenuopen",{"_index":1670,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["ismobile",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["ismusicroute",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["isnan(month",{"_index":1779,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(parsed.gettime",{"_index":1775,"title":{},"body":{"components/HomeComponent.html":{}}}],["isnan(year",{"_index":1778,"title":{},"body":{"components/HomeComponent.html":{}}}],["isopen",{"_index":2194,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["isplatformbrowser",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser(this.platformid",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["isvisible",{"_index":1442,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["item",{"_index":619,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"components/SettingItemComponent.html":{},"injectables/StorageService.html":{}}}],["item'},{'name",{"_index":309,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["item.amount",{"_index":1585,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.budget_id",{"_index":618,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["item.category_id",{"_index":940,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["item.component.html",{"_index":2261,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.component.ts",{"_index":2260,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:10",{"_index":2262,"title":{},"body":{"components/SettingItemComponent.html":{}}}],["item.date.split",{"_index":1580,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["item.expense_id",{"_index":1199,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["item.location?.trim",{"_index":223,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.note?.trim",{"_index":227,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["item.time.split",{"_index":1634,"title":{},"body":{"components/GraphsComponent.html":{}}}],["item.user_id",{"_index":2151,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["item/setting",{"_index":2259,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["item[key",{"_index":2159,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["itemdate",{"_index":1206,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["itemdate.sethours(0",{"_index":1208,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["items",{"_index":2311,"title":{},"body":{"components/ToastComponent.html":{}}}],["jan",{"_index":1596,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["january",{"_index":1653,"title":{},"body":{"components/GraphsComponent.html":{}}}],["job",{"_index":1078,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["json",{"_index":1116,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["json.parse(cleanedsong",{"_index":1887,"title":{},"body":{"components/MusicComponent.html":{}}}],["json.parse(localstorage.getitem(storagekey",{"_index":2144,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.budgetkey",{"_index":2173,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.categorykey",{"_index":2148,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.expensekey",{"_index":2177,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.parse(localstorage.getitem(this.userkey",{"_index":2175,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(all",{"_index":613,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["json.stringify(currentsettings",{"_index":2345,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["json.stringify(last15daysexpenses",{"_index":1428,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["json.stringify(syncedsettings",{"_index":2170,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["json.stringify(updated",{"_index":948,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["json.stringify(updateddata",{"_index":2162,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["jsonerror",{"_index":1888,"title":{},"body":{"components/MusicComponent.html":{}}}],["jul",{"_index":1601,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["july",{"_index":1658,"title":{},"body":{"components/GraphsComponent.html":{}}}],["jun",{"_index":1600,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["june",{"_index":1657,"title":{},"body":{"components/GraphsComponent.html":{}}}],["justify",{"_index":2312,"title":{},"body":{"components/ToastComponent.html":{}}}],["keep",{"_index":1419,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["key",{"_index":930,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["keyboard",{"_index":1717,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyboardevent",{"_index":1711,"title":{},"body":{"components/HomeComponent.html":{}}}],["keyframes",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["keys",{"_index":1715,"title":{},"body":{"components/HomeComponent.html":{}}}],["keywords",{"_index":2499,"title":{},"body":{"index.html":{}}}],["label",{"_index":875,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SettingItemComponent.html":{}}}],["labels",{"_index":684,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["language",{"_index":1101,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["laptop",{"_index":2536,"title":{},"body":{"index.html":{}}}],["last",{"_index":1368,"title":{},"body":{"injectables/GeminiApiService.html":{},"injectables/PostApiService.html":{}}}],["last15daysexpenses",{"_index":1337,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["last_backup",{"_index":2056,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["lastbackup",{"_index":2078,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackup.gettime",{"_index":2082,"title":{},"body":{"injectables/PostApiService.html":{}}}],["lastbackupstr",{"_index":2076,"title":{},"body":{"injectables/PostApiService.html":{}}}],["latest",{"_index":2527,"title":{},"body":{"index.html":{}}}],["latestbudget",{"_index":638,"title":{},"body":{"components/BudgetComponent.html":{}}}],["launch",{"_index":2466,"title":{},"body":{"index.html":{}}}],["legend",{"_index":254,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["length",{"_index":2206,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["let’s",{"_index":1418,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["level",{"_index":2557,"title":{},"body":{"index.html":{}}}],["leverages",{"_index":2450,"title":{},"body":{"index.html":{}}}],["lg",{"_index":2320,"title":{},"body":{"components/ToastComponent.html":{}}}],["lifecycle",{"_index":94,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{}}}],["light",{"_index":690,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["lightweight",{"_index":2457,"title":{},"body":{"index.html":{}}}],["limit",{"_index":749,"title":{},"body":{"components/BudgetComponent.html":{}}}],["line",{"_index":1554,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"index.html":{}}}],["list",{"_index":293,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["list'},{'name",{"_index":277,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["list.component.css",{"_index":1271,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.html",{"_index":1270,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts",{"_index":1269,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["list.component.ts:13",{"_index":1278,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:14",{"_index":1277,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:15",{"_index":1276,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:23",{"_index":1285,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:27",{"_index":1283,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list.component.ts:32",{"_index":1281,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["list/expense",{"_index":1268,"title":{},"body":{"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["listener",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["listening",{"_index":1082,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["listens",{"_index":984,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["listexpensescomponent",{"_index":292,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["listings",{"_index":2486,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1029,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/PieChartComponent.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":1143,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["loadbudgets",{"_index":646,"title":{},"body":{"components/BudgetComponent.html":{}}}],["loadcategories",{"_index":958,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["loaddata",{"_index":1488,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata",{"_index":1489,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loaddaydata(expenses",{"_index":1507,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loaded",{"_index":1747,"title":{},"body":{"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["loader",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/SearchButtonComponent.html":{}}}],["loader'},{'name",{"_index":282,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["loader.component",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["loader.component.css",{"_index":1441,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.html",{"_index":1440,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts",{"_index":1439,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:12",{"_index":1450,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:13",{"_index":1446,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:19",{"_index":1449,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1447,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loader.service",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["loader.service.ts",{"_index":1459,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:11",{"_index":1463,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:15",{"_index":1464,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:19",{"_index":1461,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader.service.ts:9",{"_index":1465,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["loader/global",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["loaderservice",{"_index":1454,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loading",{"_index":897,"title":{},"body":{"components/CalendarComponent.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/SearchButtonComponent.html":{}}}],["loadmonthdata",{"_index":1490,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadmonthdata(expenses",{"_index":1511,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loads",{"_index":89,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["loadsomething",{"_index":1455,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["loadsuggestionsfromlocalstorage",{"_index":53,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loadyeardata",{"_index":1491,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["loadyeardata(expenses",{"_index":1513,"title":{},"body":{"components/GraphsComponent.html":{}}}],["loc",{"_index":225,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["loc.tolowercase().includes(input",{"_index":234,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["local",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":77,"title":{},"body":{"components/AddExpenseComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["localstorage.setitem(storagekey",{"_index":2161,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage.setitem(this.storageservice.getbudgetkey",{"_index":612,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["localstorage.setitem(this.storageservice.getcategorykey",{"_index":938,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["localstorage.setitem(this.storageservice.getexpensekey",{"_index":1197,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["localstorage.setitem(this.storageservice.getuserkey",{"_index":2344,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem(this.userkey",{"_index":2169,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["localstorage/expense.service",{"_index":1345,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["localstorage/storage.service",{"_index":2074,"title":{},"body":{"injectables/PostApiService.html":{}}}],["localstorage/user.service",{"_index":2075,"title":{},"body":{"injectables/PostApiService.html":{}}}],["location",{"_index":21,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["locationsuggestions",{"_index":46,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["log",{"_index":2553,"title":{},"body":{"index.html":{}}}],["logic",{"_index":735,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["long",{"_index":870,"title":{},"body":{"components/CalendarComponent.html":{}}}],["lt",{"_index":898,"title":{},"body":{"components/CalendarComponent.html":{}}}],["main",{"_index":1534,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["mainartist",{"_index":1893,"title":{},"body":{"components/MusicComponent.html":{}}}],["mainartist}`).subscribe",{"_index":1899,"title":{},"body":{"components/MusicComponent.html":{}}}],["making",{"_index":2456,"title":{},"body":{"index.html":{}}}],["manage",{"_index":970,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["management",{"_index":2437,"title":{},"body":{"index.html":{}}}],["manager",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["manages",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["managing",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["map",{"_index":929,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{}}}],["map((artist",{"_index":1930,"title":{},"body":{"components/MusicComponent.html":{}}}],["map((category",{"_index":931,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["map(e",{"_index":1184,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["map(item",{"_index":222,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["map(number",{"_index":1581,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["map[expense.category_id",{"_index":928,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["mapped",{"_index":359,"title":{},"body":{"components/AiComponent.html":{}}}],["mar",{"_index":1598,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["march",{"_index":1655,"title":{},"body":{"components/GraphsComponent.html":{}}}],["mark",{"_index":251,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["markdown",{"_index":1118,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["marked",{"_index":343,"title":{},"body":{"components/AiComponent.html":{},"dependencies.html":{}}}],["marked.parse(raw",{"_index":355,"title":{},"body":{"components/AiComponent.html":{}}}],["match",{"_index":1104,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["matching",{"_index":318,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil((todate.gettime",{"_index":756,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.floor(seconds",{"_index":1913,"title":{},"body":{"components/MusicComponent.html":{}}}],["math.max(b",{"_index":1300,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(g",{"_index":1299,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.max(math.ceil((today.gettime",{"_index":763,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totalbudget",{"_index":728,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.max(totaldays",{"_index":765,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.min((spent",{"_index":726,"title":{},"body":{"components/BudgetComponent.html":{}}}],["math.round(2.55",{"_index":1292,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["math.round(data.amount",{"_index":611,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["math.round(item.amount",{"_index":620,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["max",{"_index":972,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ToastComponent.html":{}}}],["maximum",{"_index":2207,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["maximumfractiondigits",{"_index":2036,"title":{},"body":{"components/PieChartComponent.html":{}}}],["menu",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["menu'},{'name",{"_index":287,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["menu.component",{"_index":1947,"title":{},"body":{"components/NavbarComponent.html":{}}}],["menu.component.css",{"_index":1668,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.html",{"_index":1669,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts",{"_index":1667,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:13",{"_index":1676,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":1682,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1681,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1677,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":1679,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["menu/hamburger",{"_index":1666,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":742,"title":{},"body":{"components/BudgetComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["messages",{"_index":1424,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":51,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["min",{"_index":1912,"title":{},"body":{"components/MusicComponent.html":{}}}],["minimumfractiondigits",{"_index":2035,"title":{},"body":{"components/PieChartComponent.html":{}}}],["minute",{"_index":1632,"title":{},"body":{"components/GraphsComponent.html":{}}}],["min}:${sec.tostring().padstart(2",{"_index":1915,"title":{},"body":{"components/MusicComponent.html":{}}}],["miscellaneous",{"_index":2563,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1896,"title":{},"body":{"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["mm",{"_index":1722,"title":{},"body":{"components/HomeComponent.html":{}}}],["mobile",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["modal",{"_index":1161,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["modal'},{'name",{"_index":273,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component.html",{"_index":1162,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts",{"_index":1160,"title":{},"body":{"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:10",{"_index":1166,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:11",{"_index":1169,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:12",{"_index":1168,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modal.component.ts:14",{"_index":1227,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:15",{"_index":1225,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:16",{"_index":1226,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:17",{"_index":1228,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1229,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1230,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:20",{"_index":1238,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1224,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1233,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1232,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1234,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:48",{"_index":1237,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:56",{"_index":1236,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:67",{"_index":1231,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal.component.ts:71",{"_index":1235,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["modal/custom",{"_index":1159,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["modal/expense",{"_index":1215,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"coverage.html":{}}}],["modalexpenses",{"_index":814,"title":{},"body":{"components/CalendarComponent.html":{}}}],["modalid",{"_index":1163,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["modaltitle",{"_index":815,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mode",{"_index":245,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":351,"title":{},"body":{"components/AiComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modelreply",{"_index":1130,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["modern",{"_index":2454,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2559,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["mon",{"_index":848,"title":{},"body":{"components/CalendarComponent.html":{}}}],["money",{"_index":2431,"title":{},"body":{"index.html":{}}}],["monitor",{"_index":2554,"title":{},"body":{"index.html":{}}}],["month",{"_index":832,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["month).tolocalestring('default",{"_index":869,"title":{},"body":{"components/CalendarComponent.html":{}}}],["month/day",{"_index":2548,"title":{},"body":{"index.html":{}}}],["month/day/year",{"_index":1474,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap",{"_index":1641,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(month",{"_index":1650,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.get(monthname",{"_index":1646,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthamountmap.set(monthname",{"_index":1645,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthly",{"_index":885,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["monthname",{"_index":1607,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames",{"_index":1595,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["monthnames[month",{"_index":1644,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthnames[this.currentdate.getmonth",{"_index":1608,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["months",{"_index":1647,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["months.map(month",{"_index":1649,"title":{},"body":{"components/GraphsComponent.html":{}}}],["monthstr",{"_index":865,"title":{},"body":{"components/CalendarComponent.html":{}}}],["mood",{"_index":1080,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["more",{"_index":248,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/PostApiService.html":{}}}],["mouse",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["mouseevent",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HamburgerMenuComponent.html":{}}}],["msg",{"_index":356,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.parts[0].text",{"_index":353,"title":{},"body":{"components/AiComponent.html":{}}}],["msg.role",{"_index":350,"title":{},"body":{"components/AiComponent.html":{}}}],["much",{"_index":2508,"title":{},"body":{"index.html":{}}}],["music",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["music'},{'name",{"_index":296,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["music.component.css",{"_index":1811,"title":{},"body":{"components/MusicComponent.html":{}}}],["music.component.html",{"_index":1810,"title":{},"body":{"components/MusicComponent.html":{}}}],["musiccomponent",{"_index":295,"title":{"components/MusicComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["n",{"_index":1178,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["n.tostring().padstart(2",{"_index":1179,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["name",{"_index":72,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":1063,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["navbar",{"_index":1941,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":298,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["navbar.component.css",{"_index":1942,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1943,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":297,"title":{"components/NavbarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":2493,"title":{},"body":{"index.html":{}}}],["navigateandclose",{"_index":1672,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigateandclose(section",{"_index":1678,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["navigates",{"_index":1731,"title":{},"body":{"components/HomeComponent.html":{}}}],["navigationend",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["need",{"_index":2541,"title":{},"body":{"index.html":{}}}],["negative",{"_index":242,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["new",{"_index":15,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newdata",{"_index":615,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["next",{"_index":1051,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["nextsong",{"_index":1873,"title":{},"body":{"components/MusicComponent.html":{}}}],["nextsong.trim",{"_index":1875,"title":{},"body":{"components/MusicComponent.html":{}}}],["ng",{"_index":1565,"title":{},"body":{"components/GraphsComponent.html":{},"dependencies.html":{}}}],["ng2",{"_index":2421,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1958,"title":{},"body":{"components/PieChartComponent.html":{},"components/ToastComponent.html":{}}}],["ngapexchartsmodule",{"_index":1477,"title":{},"body":{"components/GraphsComponent.html":{}}}],["ngonchanges",{"_index":1492,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngonchanges(changes",{"_index":1515,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["ngondestroy",{"_index":1816,"title":{},"body":{"components/MusicComponent.html":{}}}],["ngoninit",{"_index":54,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["none",{"_index":1794,"title":{},"body":{"components/HomeComponent.html":{}}}],["note",{"_index":91,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["note.tolowercase().includes(input",{"_index":240,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notes",{"_index":22,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notesuggestions",{"_index":47,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notification",{"_index":81,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["notifications",{"_index":2130,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["nov",{"_index":1605,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["november",{"_index":1662,"title":{},"body":{"components/GraphsComponent.html":{}}}],["now",{"_index":192,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["now.getdate().tostring().padstart(2",{"_index":198,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getfullyear",{"_index":194,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["now.gethours().tostring().padstart(2",{"_index":200,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.getmonth",{"_index":195,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["now.gettime",{"_index":2081,"title":{},"body":{"injectables/PostApiService.html":{}}}],["now.toisostring",{"_index":2093,"title":{},"body":{"injectables/PostApiService.html":{}}}],["null",{"_index":338,"title":{},"body":{"components/AiComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["num",{"_index":1288,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["number",{"_index":596,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{}}}],["number(item.amount",{"_index":881,"title":{},"body":{"components/CalendarComponent.html":{}}}],["number(target.value",{"_index":1917,"title":{},"body":{"components/MusicComponent.html":{}}}],["object",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(categorytotals",{"_index":2002,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(categorytotals).map(cat",{"_index":2005,"title":{},"body":{"components/PieChartComponent.html":{}}}],["object.keys(defaultschema",{"_index":2153,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["object.values(categorytotals",{"_index":2003,"title":{},"body":{"components/PieChartComponent.html":{}}}],["oct",{"_index":1604,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["october",{"_index":1661,"title":{},"body":{"components/GraphsComponent.html":{}}}],["offset",{"_index":826,"title":{},"body":{"components/CalendarComponent.html":{}}}],["omit",{"_index":607,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["oncategoryselected",{"_index":55,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["oncategoryselected(category",{"_index":97,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["once",{"_index":2048,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["onchanges",{"_index":1475,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["onclick",{"_index":1673,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclick(event",{"_index":1680,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["onclose",{"_index":1164,"title":{},"body":{"components/CustomModalComponent.html":{}}}],["ondelete",{"_index":1218,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["ondestroy",{"_index":1809,"title":{},"body":{"components/MusicComponent.html":{}}}],["ondocumentclick",{"_index":959,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["ondocumentclick(event",{"_index":991,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["oninputchange",{"_index":1707,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["oninputchange(event",{"_index":1734,"title":{},"body":{"components/HomeComponent.html":{}}}],["oninputchanges",{"_index":56,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["onmonthchange",{"_index":1708,"title":{},"body":{"components/HomeComponent.html":{}}}],["onmonthchange(event",{"_index":1739,"title":{},"body":{"components/HomeComponent.html":{}}}],["onresize",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["onresize(event",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["onrightclick(event",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["onsearch",{"_index":2196,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["onseek",{"_index":1817,"title":{},"body":{"components/MusicComponent.html":{}}}],["onseek(event",{"_index":1830,"title":{},"body":{"components/MusicComponent.html":{}}}],["onselect",{"_index":1274,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onselect(expense",{"_index":1284,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["onsongfinished",{"_index":1818,"title":{},"body":{"components/MusicComponent.html":{}}}],["onsubmit",{"_index":57,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["opacity",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{}}}],["open",{"_index":2221,"title":{},"body":{"components/SearchButtonComponent.html":{},"index.html":{}}}],["opened",{"_index":2215,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["openeditmodal",{"_index":647,"title":{},"body":{"components/BudgetComponent.html":{}}}],["openmodal",{"_index":648,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["openmodal(datestr",{"_index":829,"title":{},"body":{"components/CalendarComponent.html":{}}}],["operations",{"_index":2544,"title":{},"body":{"index.html":{}}}],["optimized",{"_index":2533,"title":{},"body":{"index.html":{}}}],["optional",{"_index":74,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["options",{"_index":2022,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["orange",{"_index":2606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":2523,"title":{},"body":{"index.html":{}}}],["others",{"_index":247,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["outline",{"_index":1795,"title":{},"body":{"components/HomeComponent.html":{}}}],["output",{"_index":1000,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outputs",{"_index":965,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/SearchButtonComponent.html":{}}}],["outside",{"_index":986,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"injectables/GeminiApiService.html":{},"components/HamburgerMenuComponent.html":{}}}],["over",{"_index":748,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["overlay",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["overview",{"_index":2435,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":2316,"title":{},"body":{"components/ToastComponent.html":{}}}],["p.text).join('\\n\\n",{"_index":1132,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["package",{"_index":2407,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pad",{"_index":1177,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getdate())}t${pad(now.gethours())}:${pad(now.getminutes())}:${pad(now.getseconds",{"_index":1181,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["pad(now.getmonth",{"_index":1180,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["page",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["paragraph",{"_index":1400,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["param",{"_index":167,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["parent",{"_index":953,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["parse",{"_index":1890,"title":{},"body":{"components/MusicComponent.html":{}}}],["parsed",{"_index":1773,"title":{},"body":{"components/HomeComponent.html":{}}}],["parsefloat(exp.amount",{"_index":724,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parsefloat(this.latestbudget.amount.tostring",{"_index":717,"title":{},"body":{"components/BudgetComponent.html":{}}}],["parseint(color.replace",{"_index":1289,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["parseint(exp.amount",{"_index":893,"title":{},"body":{"components/CalendarComponent.html":{}}}],["parseint(item.date.split",{"_index":1584,"title":{},"body":{"components/GraphsComponent.html":{}}}],["parsing",{"_index":1891,"title":{},"body":{"components/MusicComponent.html":{}}}],["part",{"_index":918,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["partial",{"_index":616,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["parts",{"_index":1027,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["parts?.map((p",{"_index":1131,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["party",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passed",{"_index":2066,"title":{},"body":{"injectables/PostApiService.html":{}}}],["past",{"_index":90,"title":{},"body":{"components/AddExpenseComponent.html":{},"index.html":{}}}],["pastdata",{"_index":2147,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["pastdata.filter((item",{"_index":2150,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["path",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patterns",{"_index":1375,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["payment",{"_index":244,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"index.html":{}}}],["payment_mode",{"_index":182,"title":{},"body":{"components/AddExpenseComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["per",{"_index":2551,"title":{},"body":{"index.html":{}}}],["percent",{"_index":1280,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["percentage",{"_index":725,"title":{},"body":{"components/BudgetComponent.html":{}}}],["perform",{"_index":2053,"title":{},"body":{"injectables/PostApiService.html":{}}}],["persistent",{"_index":2462,"title":{},"body":{"index.html":{}}}],["personal",{"_index":1408,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["personalization",{"_index":2520,"title":{},"body":{"index.html":{}}}],["pick",{"_index":1338,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["picker",{"_index":1738,"title":{},"body":{"components/HomeComponent.html":{}}}],["pie",{"_index":300,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["piechartcomponent",{"_index":299,"title":{"components/PieChartComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["pink",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(filter(event",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["platform",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["platform_id",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["platformid",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["play",{"_index":1897,"title":{},"body":{"components/MusicComponent.html":{}}}],["playcount",{"_index":1838,"title":{},"body":{"components/MusicComponent.html":{}}}],["playing",{"_index":2433,"title":{},"body":{"index.html":{}}}],["playsong",{"_index":1819,"title":{},"body":{"components/MusicComponent.html":{}}}],["playsong(url",{"_index":1833,"title":{},"body":{"components/MusicComponent.html":{}}}],["please",{"_index":1412,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["plotoptions",{"_index":685,"title":{},"body":{"components/BudgetComponent.html":{}}}],["plugins",{"_index":2024,"title":{},"body":{"components/PieChartComponent.html":{}}}],["pointer",{"_index":1792,"title":{},"body":{"components/HomeComponent.html":{}}}],["points",{"_index":1398,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["polite",{"_index":1361,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politely",{"_index":1377,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["politics",{"_index":1407,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["popup",{"_index":2491,"title":{},"body":{"index.html":{}}}],["position",{"_index":2025,"title":{},"body":{"components/PieChartComponent.html":{}}}],["positive",{"_index":1107,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["possible",{"_index":1151,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{}}}],["postapiservice",{"_index":403,"title":{"injectables/PostApiService.html":{}},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["posted",{"_index":2090,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posting",{"_index":2094,"title":{},"body":{"injectables/PostApiService.html":{}}}],["posts",{"_index":2064,"title":{},"body":{"injectables/PostApiService.html":{}}}],["postuserdata",{"_index":2051,"title":{},"body":{"injectables/PostApiService.html":{}}}],["predict",{"_index":1367,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["predictions",{"_index":1371,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["preferences",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["presses",{"_index":2210,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["prevents",{"_index":1713,"title":{},"body":{"components/HomeComponent.html":{}}}],["previous",{"_index":142,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"components/HomeComponent.html":{}}}],["prevmonthdays",{"_index":864,"title":{},"body":{"components/CalendarComponent.html":{}}}],["privacy",{"_index":2546,"title":{},"body":{"index.html":{}}}],["private",{"_index":168,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["process",{"_index":1416,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["processes",{"_index":1509,"title":{},"body":{"components/GraphsComponent.html":{}}}],["processing",{"_index":2191,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["production",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progress",{"_index":787,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{},"index.html":{}}}],["promise",{"_index":1344,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["prompt",{"_index":1072,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["prompt.trim",{"_index":1431,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["properly",{"_index":1994,"title":{},"body":{"components/PieChartComponent.html":{}}}],["properties",{"_index":41,"title":{"properties.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"properties.html":{}}}],["provide",{"_index":573,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["provideclienthydration(witheventreplay",{"_index":2592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1369,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["providedin",{"_index":587,"title":{},"body":{"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["providehttpclient",{"_index":2598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provides",{"_index":2054,"title":{},"body":{"injectables/PostApiService.html":{},"index.html":{}}}],["provideserverrendering",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrouting(serverroutes",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserviceworker('ngsw",{"_index":2593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providing",{"_index":1138,"title":{},"body":{"injectables/ConfigService.html":{}}}],["public",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["purple",{"_index":2618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purpose",{"_index":1365,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["pwa",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["q",{"_index":1851,"title":{},"body":{"components/MusicComponent.html":{}}}],["query",{"_index":1430,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["question",{"_index":1385,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["questions",{"_index":1417,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["quickly",{"_index":2497,"title":{},"body":{"index.html":{}}}],["r",{"_index":1293,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["random",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["range",{"_index":1473,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["raw",{"_index":352,"title":{},"body":{"components/AiComponent.html":{},"injectables/GeminiApiService.html":{}}}],["reactive",{"_index":18,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["reactiveformsmodule",{"_index":33,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["read/write",{"_index":2543,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":579,"title":{},"body":{"injectables/AppVersionService.html":{},"injectables/ConfigService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["received",{"_index":1877,"title":{},"body":{"components/MusicComponent.html":{}}}],["recent",{"_index":1415,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["recharge",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommendation",{"_index":1077,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["record",{"_index":2339,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["red",{"_index":738,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["reference",{"_index":128,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["reflected",{"_index":2484,"title":{},"body":{"index.html":{}}}],["register",{"_index":1460,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"injectables/ToastService.html":{}}}],["register(component",{"_index":1462,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["register(toast",{"_index":2331,"title":{},"body":{"injectables/ToastService.html":{}}}],["registerwhenstable:30000",{"_index":2597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registrationstrategy",{"_index":2596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":1414,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["release",{"_index":2528,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":2059,"title":{},"body":{"injectables/PostApiService.html":{}}}],["reloads",{"_index":1524,"title":{},"body":{"components/GraphsComponent.html":{}}}],["remaining",{"_index":727,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["remainingdays",{"_index":764,"title":{},"body":{"components/BudgetComponent.html":{}}}],["remove",{"_index":2524,"title":{},"body":{"index.html":{}}}],["removes",{"_index":2212,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["rendercalendar",{"_index":820,"title":{},"body":{"components/CalendarComponent.html":{}}}],["rendercalendar(year",{"_index":831,"title":{},"body":{"components/CalendarComponent.html":{}}}],["renderchart",{"_index":1959,"title":{},"body":{"components/PieChartComponent.html":{}}}],["renderchart(id",{"_index":1969,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendering",{"_index":2042,"title":{},"body":{"components/PieChartComponent.html":{}}}],["rendermode",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rendermode.prerender",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rent",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace",{"_index":1882,"title":{},"body":{"components/MusicComponent.html":{},"miscellaneous/variables.html":{}}}],["replaced",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":1389,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["representing",{"_index":583,"title":{},"body":{"injectables/AppVersionService.html":{},"index.html":{}}}],["represents",{"_index":2507,"title":{},"body":{"index.html":{}}}],["reqhandler",{"_index":2404,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":2044,"title":{},"body":{"injectables/PostApiService.html":{}}}],["required",{"_index":243,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/MusicComponent.html":{}}}],["res",{"_index":1127,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["res.data?.results",{"_index":1900,"title":{},"body":{"components/MusicComponent.html":{}}}],["res?.candidates?.[0]?.content?.parts",{"_index":1129,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["reserved",{"_index":1327,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":1909,"title":{},"body":{"components/MusicComponent.html":{}}}],["resetformwithcurrentdatetime",{"_index":58,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["resets",{"_index":113,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/HomeComponent.html":{}}}],["resetting",{"_index":1751,"title":{},"body":{"components/HomeComponent.html":{}}}],["resize",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["resolve(serverdistfolder",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["respond",{"_index":1378,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["response",{"_index":1115,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["responsehtml",{"_index":326,"title":{},"body":{"components/AiComponent.html":{}}}],["responsibilities",{"_index":1099,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["responsible",{"_index":1137,"title":{},"body":{"injectables/ConfigService.html":{}}}],["responsive",{"_index":2023,"title":{},"body":{"components/PieChartComponent.html":{},"index.html":{}}}],["restricts",{"_index":2205,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["results",{"_index":317,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.length",{"_index":1901,"title":{},"body":{"components/MusicComponent.html":{}}}],["results.map(exp",{"_index":1356,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["results[0",{"_index":1903,"title":{},"body":{"components/MusicComponent.html":{}}}],["retrieving",{"_index":1499,"title":{},"body":{"components/GraphsComponent.html":{}}}],["return",{"_index":177,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":85,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/ConfigService.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"injectables/UserService.html":{}}}],["rgb(${math.max(r",{"_index":1298,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["right",{"_index":434,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["rights",{"_index":1326,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":1028,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["root",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"injectables/GlobalLoaderService.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/SectionService.html":{},"injectables/StorageService.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":265,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["root/expenses",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["rounded",{"_index":2318,"title":{},"body":{"components/ToastComponent.html":{}}}],["route",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":2046,"title":{},"body":{"injectables/PostApiService.html":{}}}],["running",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1034,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"injectables/SectionService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":482,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{}}}],["saavnservice",{"_index":1035,"title":{"injectables/SaavnService.html":{}},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["safehtml",{"_index":337,"title":{},"body":{"components/AiComponent.html":{}}}],["safely",{"_index":1057,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sanitizer",{"_index":332,"title":{},"body":{"components/AiComponent.html":{}}}],["sat",{"_index":853,"title":{},"body":{"components/CalendarComponent.html":{}}}],["save",{"_index":798,"title":{},"body":{"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["saved",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["saveddata",{"_index":2143,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["saveddata.map((item",{"_index":2155,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings",{"_index":2164,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedsettings[key",{"_index":2167,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["savedtheme",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{}}}],["saving",{"_index":708,"title":{},"body":{"components/BudgetComponent.html":{}}}],["scales",{"_index":2037,"title":{},"body":{"components/PieChartComponent.html":{}}}],["schema",{"_index":378,"title":{"interfaces/Schema.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["schemakeys",{"_index":2152,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["schemakeys.foreach((key",{"_index":2157,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["screens",{"_index":2535,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":2558,"title":{},"body":{"index.html":{}}}],["scrollable",{"_index":977,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["seamless",{"_index":2447,"title":{},"body":{"index.html":{}}}],["search",{"_index":303,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["search'},{'name",{"_index":306,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["search.component.css",{"_index":2245,"title":{},"body":{"components/SearchComponent.html":{}}}],["search.component.html",{"_index":2244,"title":{},"body":{"components/SearchComponent.html":{}}}],["searchbuttoncomponent",{"_index":302,"title":{"components/SearchButtonComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searchbydaterange",{"_index":1303,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["searchbydaterange(fromdate",{"_index":1203,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["searchcomponent",{"_index":305,"title":{"components/SearchComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["searcherror",{"_index":1906,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchinput",{"_index":2195,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["searchsong",{"_index":1820,"title":{},"body":{"components/MusicComponent.html":{}}}],["searchsongs",{"_index":2101,"title":{},"body":{"injectables/SaavnService.html":{}}}],["searchsongs(query",{"_index":1044,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sec",{"_index":1914,"title":{},"body":{"components/MusicComponent.html":{}}}],["second",{"_index":1633,"title":{},"body":{"components/GraphsComponent.html":{}}}],["seconds",{"_index":1826,"title":{},"body":{"components/MusicComponent.html":{}}}],["seconds\\n",{"_index":1055,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["section",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{}}}],["sectionservice",{"_index":400,"title":{"injectables/SectionService.html":{}},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["sectionsource",{"_index":2248,"title":{},"body":{"injectables/SectionService.html":{}}}],["secure",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["seek",{"_index":2434,"title":{},"body":{"index.html":{}}}],["seektime",{"_index":1916,"title":{},"body":{"components/MusicComponent.html":{}}}],["select",{"_index":144,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectcategory",{"_index":960,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selectcategory(category",{"_index":993,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["selected",{"_index":103,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["selectedcategoryname",{"_index":48,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense",{"_index":1222,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.amount",{"_index":1260,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.category_name",{"_index":1261,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.date",{"_index":1262,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.location",{"_index":1266,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.note",{"_index":1264,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.payment_mode",{"_index":1265,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selectedexpense.time",{"_index":1263,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["selecting",{"_index":951,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["selection",{"_index":101,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{}}}],["selectlocationsuggestion",{"_index":59,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectlocationsuggestion(suggestion",{"_index":117,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion",{"_index":60,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selectnotesuggestion(suggestion",{"_index":123,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["selects",{"_index":120,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["send",{"_index":329,"title":{},"body":{"components/AiComponent.html":{}}}],["sendmessage(message",{"_index":1433,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sent",{"_index":2060,"title":{},"body":{"injectables/PostApiService.html":{}}}],["sentences",{"_index":1399,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["sep",{"_index":1603,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["separated",{"_index":1065,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["september",{"_index":1660,"title":{},"body":{"components/GraphsComponent.html":{}}}],["series",{"_index":680,"title":{},"body":{"components/BudgetComponent.html":{},"components/GraphsComponent.html":{}}}],["server",{"_index":2065,"title":{},"body":{"injectables/PostApiService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":2365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverdistfolder",{"_index":2405,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverroute",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serverroutes",{"_index":2369,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":79,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{}}}],["service/backend",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["service/gemini",{"_index":344,"title":{},"body":{"components/AiComponent.html":{}}}],["service/global",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ChatMessage.html":{},"components/GlobalLoaderComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{}}}],["service/localstorage/budget.service",{"_index":678,"title":{},"body":{"components/BudgetComponent.html":{}}}],["service/localstorage/category.service",{"_index":1001,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/expense.service",{"_index":159,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/localstorage/storage.service",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["service/localstorage/user.service",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["service/saavan",{"_index":1849,"title":{},"body":{"components/MusicComponent.html":{}}}],["service/section/section.service",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["service/toast/toast.service",{"_index":164,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{}}}],["service/util/app",{"_index":1320,"title":{},"body":{"components/FooterComponent.html":{}}}],["services",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{}}}],["set",{"_index":221,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setinterval",{"_index":776,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["sets",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{}}}],["setsection",{"_index":2249,"title":{},"body":{"injectables/SectionService.html":{}}}],["setsection(section",{"_index":2250,"title":{},"body":{"injectables/SectionService.html":{}}}],["settimeout",{"_index":171,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/SearchButtonComponent.html":{},"components/ToastComponent.html":{}}}],["setting",{"_index":308,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingitemcomponent",{"_index":307,"title":{"components/SettingItemComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["settings",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["settings'},{'name",{"_index":311,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["settingscomponent",{"_index":310,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["setviewtype",{"_index":1709,"title":{},"body":{"components/HomeComponent.html":{}}}],["setviewtype(view",{"_index":1741,"title":{},"body":{"components/HomeComponent.html":{}}}],["shadow",{"_index":2319,"title":{},"body":{"components/ToastComponent.html":{}}}],["shared",{"_index":1561,"title":{},"body":{"components/GraphsComponent.html":{}}}],["shared/footer/footer.component",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/global",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["shared/navbar/navbar.component",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/sidebar/sidebar.component",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["shared/toast/toast.component",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"injectables/ToastService.html":{}}}],["shopping",{"_index":2478,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["short",{"_index":1382,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/SearchButtonComponent.html":{}}}],["shouldbackup",{"_index":2080,"title":{},"body":{"injectables/PostApiService.html":{}}}],["show",{"_index":1444,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/ToastService.html":{}}}],["show(message",{"_index":2333,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(text",{"_index":1448,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{}}}],["showaibutton",{"_index":1671,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["showbackbutton",{"_index":1944,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showbudgetsection",{"_index":639,"title":{},"body":{"components/BudgetComponent.html":{}}}],["showlocationsuggestions",{"_index":49,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["showmodal",{"_index":640,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["shownotesuggestions",{"_index":50,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["shows",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/SearchButtonComponent.html":{}}}],["showtoast",{"_index":2296,"title":{},"body":{"components/ToastComponent.html":{}}}],["showtoast(message",{"_index":2300,"title":{},"body":{"components/ToastComponent.html":{}}}],["sidebar",{"_index":2264,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":313,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["sidebar.component.css",{"_index":2265,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.html",{"_index":2266,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":312,"title":{"components/SidebarComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["signal",{"_index":1846,"title":{},"body":{"components/MusicComponent.html":{}}}],["signal(0",{"_index":1842,"title":{},"body":{"components/MusicComponent.html":{}}}],["silently",{"_index":2047,"title":{},"body":{"injectables/PostApiService.html":{}}}],["simplechanges",{"_index":1516,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["skipped",{"_index":2096,"title":{},"body":{"injectables/PostApiService.html":{}}}],["skipping",{"_index":2099,"title":{},"body":{"injectables/PostApiService.html":{}}}],["slide",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["slideup",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":2534,"title":{},"body":{"index.html":{}}}],["smart",{"_index":1076,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["smartphones",{"_index":2445,"title":{},"body":{"index.html":{}}}],["smooth",{"_index":1106,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["smoother",{"_index":2239,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["smoothing",{"_index":1555,"title":{},"body":{"components/GraphsComponent.html":{}}}],["sole",{"_index":1364,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["something",{"_index":1405,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["song",{"_index":1052,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song.artists.primary[0]?.name",{"_index":1933,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.downloadurl?.find((d",{"_index":1855,"title":{},"body":{"components/MusicComponent.html":{}}}],["song.name",{"_index":1932,"title":{},"body":{"components/MusicComponent.html":{}}}],["songdetails",{"_index":1886,"title":{},"body":{"components/MusicComponent.html":{}}}],["songname",{"_index":1119,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["songs",{"_index":1046,"title":{},"body":{"interfaces/ChatMessage.html":{},"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["song’s",{"_index":1109,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sort",{"_index":2500,"title":{},"body":{"index.html":{}}}],["sort((a",{"_index":933,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["sortable",{"_index":2496,"title":{},"body":{"index.html":{}}}],["sorted",{"_index":989,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"injectables/GetApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"injectables/UtilsService.html":{}}}],["specific",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"index.html":{}}}],["specifically",{"_index":2444,"title":{},"body":{"index.html":{}}}],["spending",{"_index":253,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/GeminiApiService.html":{},"index.html":{}}}],["spent",{"_index":729,"title":{},"body":{"components/BudgetComponent.html":{},"index.html":{}}}],["spent/day",{"_index":2513,"title":{},"body":{"index.html":{}}}],["src/.../app.config.server.ts",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.routes.server.ts",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../budget.component.ts",{"_index":2566,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../categories.ts",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environments.ts",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pie",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":367,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:110",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:149",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:160",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:168",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:56",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:61",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:66",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:82",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2361,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2366,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routes.server.ts",{"_index":2368,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/category",{"_index":949,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"coverage.html":{}}}],["src/app/component/custom",{"_index":1158,"title":{},"body":{"components/CustomModalComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts",{"_index":1469,"title":{},"body":{"components/GraphsComponent.html":{},"coverage.html":{}}}],["src/app/component/graphs/graphs.component.ts:105",{"_index":1559,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:110",{"_index":1557,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:117",{"_index":1563,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:122",{"_index":1496,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:130",{"_index":1564,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:137",{"_index":1520,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:147",{"_index":1517,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:157",{"_index":1522,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:165",{"_index":1506,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:181",{"_index":1512,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:253",{"_index":1508,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:26",{"_index":1502,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:32",{"_index":1500,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:323",{"_index":1514,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:37",{"_index":1536,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:47",{"_index":1544,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:54",{"_index":1549,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:61",{"_index":1533,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:80",{"_index":1539,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:91",{"_index":1547,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/graphs/graphs.component.ts:98",{"_index":1553,"title":{},"body":{"components/GraphsComponent.html":{}}}],["src/app/component/info",{"_index":1802,"title":{},"body":{"components/InfoIconComponent.html":{},"coverage.html":{}}}],["src/app/component/list",{"_index":1213,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"coverage.html":{}}}],["src/app/component/pie",{"_index":1950,"title":{},"body":{"components/PieChartComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/component/search",{"_index":2185,"title":{},"body":{"components/SearchButtonComponent.html":{},"coverage.html":{}}}],["src/app/component/setting",{"_index":2258,"title":{},"body":{"components/SettingItemComponent.html":{},"coverage.html":{}}}],["src/app/features/add",{"_index":10,"title":{},"body":{"components/AddExpenseComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts",{"_index":319,"title":{},"body":{"components/AiComponent.html":{},"coverage.html":{}}}],["src/app/features/ai/ai.component.ts:17",{"_index":339,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:18",{"_index":334,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/ai/ai.component.ts:25",{"_index":336,"title":{},"body":{"components/AiComponent.html":{}}}],["src/app/features/analysis/analysis.component.ts",{"_index":362,"title":{},"body":{"components/AnalysisComponent.html":{},"coverage.html":{}}}],["src/app/features/budget/budget.component.ts",{"_index":623,"title":{},"body":{"components/BudgetComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/features/budget/budget.component.ts:117",{"_index":656,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:127",{"_index":652,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:175",{"_index":651,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:192",{"_index":655,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:24",{"_index":667,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:25",{"_index":670,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:26",{"_index":676,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:27",{"_index":675,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:28",{"_index":674,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:29",{"_index":669,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:30",{"_index":666,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:31",{"_index":668,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:32",{"_index":662,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:33",{"_index":663,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:34",{"_index":677,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:35",{"_index":673,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:36",{"_index":671,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:37",{"_index":672,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:38",{"_index":661,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:39",{"_index":650,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:60",{"_index":657,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:64",{"_index":654,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:72",{"_index":660,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:78",{"_index":659,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:88",{"_index":653,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/budget/budget.component.ts:92",{"_index":658,"title":{},"body":{"components/BudgetComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts",{"_index":806,"title":{},"body":{"components/CalendarComponent.html":{},"coverage.html":{}}}],["src/app/features/calendar/calendar.component.ts:100",{"_index":830,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:112",{"_index":827,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:15",{"_index":841,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:16",{"_index":839,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:17",{"_index":836,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:18",{"_index":845,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:19",{"_index":835,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:20",{"_index":844,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:21",{"_index":843,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:22",{"_index":842,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:23",{"_index":837,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:24",{"_index":821,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:28",{"_index":846,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:33",{"_index":828,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:37",{"_index":825,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:49",{"_index":833,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/calendar/calendar.component.ts:90",{"_index":823,"title":{},"body":{"components/CalendarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1693,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:104",{"_index":1729,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:121",{"_index":1737,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:141",{"_index":1740,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:161",{"_index":1719,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:170",{"_index":1727,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":1712,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:23",{"_index":1746,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":1753,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:33",{"_index":1754,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:38",{"_index":1756,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1745,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:48",{"_index":1749,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:54",{"_index":1742,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:75",{"_index":1733,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:89",{"_index":1730,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/list",{"_index":2384,"title":{},"body":{"coverage.html":{}}}],["src/app/features/music/music.component.ts",{"_index":1808,"title":{},"body":{"components/MusicComponent.html":{},"coverage.html":{}}}],["src/app/features/music/music.component.ts:129",{"_index":1825,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:135",{"_index":1829,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:139",{"_index":1831,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:14",{"_index":1845,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:148",{"_index":1837,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:15",{"_index":1847,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:16",{"_index":1840,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:17",{"_index":1841,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:18",{"_index":1844,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:19",{"_index":1843,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:20",{"_index":1823,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:24",{"_index":1835,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:33",{"_index":1828,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:37",{"_index":1834,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/music/music.component.ts:67",{"_index":1832,"title":{},"body":{"components/MusicComponent.html":{}}}],["src/app/features/search/search.component.ts",{"_index":2243,"title":{},"body":{"components/SearchComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["src/app/service/backend",{"_index":1435,"title":{},"body":{"injectables/GetApiService.html":{},"injectables/PostApiService.html":{},"coverage.html":{}}}],["src/app/service/gemini",{"_index":1329,"title":{},"body":{"injectables/GeminiApiService.html":{},"coverage.html":{}}}],["src/app/service/global",{"_index":1458,"title":{},"body":{"injectables/GlobalLoaderService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts",{"_index":592,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/budget.service.ts:12",{"_index":800,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:18",{"_index":804,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:22",{"_index":803,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:27",{"_index":801,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:35",{"_index":805,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/budget.service.ts:48",{"_index":802,"title":{},"body":{"injectables/BudgetService.html":{}}}],["src/app/service/localstorage/category.service.ts",{"_index":909,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/category.service.ts:21",{"_index":1022,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:23",{"_index":1017,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:27",{"_index":1021,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:44",{"_index":1020,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:49",{"_index":1018,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:59",{"_index":1023,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/category.service.ts:66",{"_index":1019,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/service/localstorage/data/categories.ts",{"_index":2392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/service/localstorage/expense.service.ts",{"_index":1170,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/expense.service.ts:24",{"_index":1304,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:28",{"_index":1310,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:32",{"_index":1309,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:39",{"_index":1307,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:64",{"_index":1305,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:72",{"_index":1312,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:80",{"_index":1308,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:85",{"_index":1306,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/expense.service.ts:92",{"_index":1311,"title":{},"body":{"injectables/ExpenseService.html":{}}}],["src/app/service/localstorage/storage.service.ts",{"_index":2109,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/storage.service.ts:117",{"_index":2286,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:12",{"_index":2273,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:136",{"_index":2275,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:140",{"_index":2274,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:144",{"_index":2280,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:148",{"_index":2276,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:152",{"_index":2278,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:156",{"_index":2279,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:16",{"_index":2290,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:160",{"_index":2277,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:164",{"_index":2281,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:17",{"_index":2291,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:18",{"_index":2289,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:19",{"_index":2292,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:22",{"_index":2282,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:27",{"_index":2284,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:41",{"_index":2285,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:5",{"_index":2111,"title":{},"body":{"interfaces/Schema.html":{}}}],["src/app/service/localstorage/storage.service.ts:58",{"_index":2287,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:78",{"_index":2283,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/storage.service.ts:90",{"_index":2288,"title":{},"body":{"injectables/StorageService.html":{}}}],["src/app/service/localstorage/user.service.ts",{"_index":2338,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/service/localstorage/user.service.ts:20",{"_index":2348,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:24",{"_index":2351,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:28",{"_index":2349,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:33",{"_index":2352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/localstorage/user.service.ts:40",{"_index":2350,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/service/saavan",{"_index":1025,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts",{"_index":2247,"title":{},"body":{"injectables/SectionService.html":{},"coverage.html":{}}}],["src/app/service/section/section.service.ts:10",{"_index":2253,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:12",{"_index":2251,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/section/section.service.ts:9",{"_index":2255,"title":{},"body":{"injectables/SectionService.html":{}}}],["src/app/service/toast/toast.service.ts",{"_index":2330,"title":{},"body":{"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/service/toast/toast.service.ts:10",{"_index":2332,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:14",{"_index":2334,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/toast/toast.service.ts:8",{"_index":2335,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/service/util/app",{"_index":570,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts",{"_index":1136,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/app/service/util/config/config.service.ts:18",{"_index":1146,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/config/config.service.ts:29",{"_index":1147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/app/service/util/utils.service.ts",{"_index":2354,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/service/util/utils.service.ts:6",{"_index":2355,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/shared/footer/footer.component.ts",{"_index":1313,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/shared/footer/footer.component.ts:10",{"_index":1319,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/shared/global",{"_index":1438,"title":{},"body":{"components/GlobalLoaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/hamburger",{"_index":1665,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts",{"_index":1940,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/shared/navbar/navbar.component.ts:14",{"_index":1945,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/navbar/navbar.component.ts:22",{"_index":1946,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts",{"_index":2263,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:13",{"_index":2268,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/sidebar/sidebar.component.ts:21",{"_index":2269,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/shared/toast/toast.component.ts",{"_index":2293,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/shared/toast/toast.component.ts:12",{"_index":2298,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:15",{"_index":2299,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/shared/toast/toast.component.ts:18",{"_index":2301,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/environments/environments.ts",{"_index":2397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":2399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/server.ts",{"_index":2401,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":2460,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":30,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{}}}],["start",{"_index":2505,"title":{},"body":{"index.html":{}}}],["started",{"_index":2429,"title":{"index.html":{}},"body":{}}],["state",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{}}}],["statements",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1972,"title":{},"body":{"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stays",{"_index":2545,"title":{},"body":{"index.html":{}}}],["steps",{"_index":771,"title":{},"body":{"components/BudgetComponent.html":{}}}],["stop",{"_index":1878,"title":{},"body":{"components/MusicComponent.html":{}}}],["stops",{"_index":2432,"title":{},"body":{"index.html":{}}}],["storage",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["storage.service",{"_index":597,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["storagekey",{"_index":2145,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["storageservice",{"_index":401,"title":{"injectables/StorageService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["storageservice.isbrowser",{"_index":2141,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["stored",{"_index":141,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["stores",{"_index":585,"title":{},"body":{"injectables/AppVersionService.html":{},"components/SearchButtonComponent.html":{}}}],["string",{"_index":118,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["string(date.getmonth",{"_index":1782,"title":{},"body":{"components/HomeComponent.html":{}}}],["string(month",{"_index":866,"title":{},"body":{"components/CalendarComponent.html":{}}}],["stroke",{"_index":1486,"title":{},"body":{"components/GraphsComponent.html":{}}}],["structure",{"_index":1395,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["style",{"_index":1081,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":324,"title":{},"body":{"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/SearchComponent.html":{},"components/ToastComponent.html":{}}}],["styleurls",{"_index":36,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SidebarComponent.html":{}}}],["styling",{"_index":1550,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["submitedit",{"_index":1219,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["submits",{"_index":110,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscribe((event",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribes",{"_index":105,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["subscriptions",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":212,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successful",{"_index":2067,"title":{},"body":{"injectables/PostApiService.html":{}}}],["successfully",{"_index":211,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"injectables/PostApiService.html":{}}}],["such",{"_index":1140,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{}}}],["suggest",{"_index":1083,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["suggested",{"_index":794,"title":{},"body":{"components/BudgetComponent.html":{},"components/MusicComponent.html":{}}}],["suggested/day",{"_index":2514,"title":{},"body":{"index.html":{}}}],["suggestedperday",{"_index":641,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestedperday.tofixed(2",{"_index":795,"title":{},"body":{"components/BudgetComponent.html":{}}}],["suggestion",{"_index":121,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/MusicComponent.html":{}}}],["suggestions",{"_index":20,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["suggestnextsong",{"_index":2102,"title":{},"body":{"injectables/SaavnService.html":{}}}],["suggestnextsong(currentsong",{"_index":1049,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["sum",{"_index":723,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["summary",{"_index":2510,"title":{},"body":{"index.html":{}}}],["sun",{"_index":847,"title":{},"body":{"components/CalendarComponent.html":{}}}],["sure",{"_index":781,"title":{},"body":{"components/BudgetComponent.html":{}}}],["surface",{"_index":879,"title":{},"body":{"components/CalendarComponent.html":{}}}],["switch",{"_index":1153,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["switches",{"_index":1523,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview",{"_index":1493,"title":{},"body":{"components/GraphsComponent.html":{}}}],["switchview(viewtype",{"_index":1521,"title":{},"body":{"components/GraphsComponent.html":{}}}],["swupdate",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["sync",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncbudgetwithschema",{"_index":2135,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synccategorieswithschema",{"_index":2119,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced",{"_index":2156,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["synced[key",{"_index":2158,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings",{"_index":2165,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings['app_version",{"_index":2168,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncedsettings[key",{"_index":2166,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncexpenseswithschema",{"_index":2122,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncing",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncs",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["syncuser",{"_index":2271,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncuser(storagekey",{"_index":2163,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncuserwithschema",{"_index":2125,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["syncwithschema",{"_index":2272,"title":{},"body":{"injectables/StorageService.html":{}}}],["syncwithschema(storagekey",{"_index":2139,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["t",{"_index":1358,"title":{},"body":{"injectables/GeminiApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["tab",{"_index":2550,"title":{},"body":{"index.html":{}}}],["table",{"_index":919,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["tailored",{"_index":2443,"title":{},"body":{"index.html":{}}}],["tailwind",{"_index":976,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"index.html":{}}}],["take",{"_index":2072,"title":{},"body":{"injectables/PostApiService.html":{}}}],["tap",{"_index":2490,"title":{},"body":{"index.html":{}}}],["target",{"_index":1010,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/MusicComponent.html":{}}}],["teal",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tech",{"_index":2459,"title":{},"body":{"index.html":{}}}],["technology",{"_index":2461,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":38,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["text",{"_index":877,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"injectables/SaavnService.html":{},"components/ToastComponent.html":{}}}],["that's",{"_index":1401,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["theme",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"index.html":{}}}],["theme_mode",{"_index":2132,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["thinking",{"_index":361,"title":{},"body":{"components/AiComponent.html":{}}}],["this.activepath",{"_index":2270,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.amountinput?.nativeelement.focus",{"_index":172,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.animatedbudgetprogress",{"_index":731,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.animatepercentage",{"_index":733,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.appversion",{"_index":1322,"title":{},"body":{"components/FooterComponent.html":{}}}],["this.appversionservice.getversion",{"_index":1323,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.audio",{"_index":1858,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.currenttime",{"_index":1918,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.onended",{"_index":1869,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.pause",{"_index":1862,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.paused",{"_index":1860,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.play",{"_index":1861,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.audio.src",{"_index":1863,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.avgallowedperday",{"_index":766,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.avgspentperday",{"_index":767,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetcolorclass",{"_index":737,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform",{"_index":689,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.invalid",{"_index":700,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.markallastouched",{"_index":701,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.patchvalue",{"_index":696,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.reset",{"_index":693,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetform.value",{"_index":702,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetkey",{"_index":2182,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.budgetmessage",{"_index":743,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress",{"_index":730,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetprogress.tofixed(1",{"_index":778,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets",{"_index":709,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets.length",{"_index":712,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgets[this.budgets.length",{"_index":714,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.add(data",{"_index":706,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.delete(this.latestbudget.budget_id",{"_index":784,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.getall",{"_index":710,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.budgetservice.update(this.latestbudget.budget_id",{"_index":703,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatebudgetprogress",{"_index":715,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.calculatetotalexpenses(fromdate",{"_index":872,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays",{"_index":858,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendardays.push",{"_index":874,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.calendartitle",{"_index":868,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.canvasref?.nativeelement.getcontext('2d",{"_index":2011,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories",{"_index":1003,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{}}}],["this.categories.filter(category",{"_index":1006,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categories.foreach((cat",{"_index":1984,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categories.foreach(cat",{"_index":1986,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat",{"_index":2006,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorycolors[cat.name",{"_index":1987,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorykey",{"_index":2146,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.categorymap[cat.category_id",{"_index":1985,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categorymap[item.category_id",{"_index":1998,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryref",{"_index":1013,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryref.nativeelement.contains(target",{"_index":1014,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryselected.emit(category",{"_index":1009,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categoryservice.getall",{"_index":1982,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.categoryservice.getsortedcategoriesbyexpensecount",{"_index":1004,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.categorytype",{"_index":1005,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.charts[id",{"_index":2012,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.charts[id].destroy",{"_index":2013,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.chartseries",{"_index":1614,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.chartxaxis",{"_index":1612,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.closemodal",{"_index":707,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.closemodal.emit",{"_index":1258,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.configservice.getapiurl",{"_index":2084,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.createform",{"_index":170,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.currency",{"_index":687,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/ExpenseListComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currency}${(spent",{"_index":746,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${remaining.tofixed(2",{"_index":752,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${spent.tofixed(2",{"_index":745,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currency}${totalbudget.tofixed(2",{"_index":751,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.currentdate",{"_index":1761,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.getdate().tostring().padstart(2",{"_index":1617,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getfullyear",{"_index":1576,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.getmonth",{"_index":1577,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.currentdate.setdate(this.currentdate.getdate",{"_index":1764,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setfullyear(this.currentdate.getfullyear",{"_index":1766,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.setmonth(this.currentdate.getmonth",{"_index":1765,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentdate.todatestring",{"_index":1768,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentmonth",{"_index":855,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.currentsection",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentsong",{"_index":1864,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentsong?.url",{"_index":1859,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.currentyear",{"_index":857,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.defaultviewtype",{"_index":1752,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.delete.emit(this.selectedexpense.expense_id",{"_index":1259,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.developmentenvironment",{"_index":1155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.displayedpercentage",{"_index":732,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.duration.set(song.duration",{"_index":1865,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.edit.emit(updatedexpense",{"_index":1256,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform",{"_index":1240,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.patchvalue",{"_index":1249,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.valid",{"_index":1252,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.editform.value",{"_index":1255,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.expenseform",{"_index":169,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('location')?.valuechanges.subscribe(val",{"_index":229,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.get('note')?.valuechanges.subscribe(val",{"_index":236,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.invalid",{"_index":204,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.markallastouched",{"_index":205,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.patchvalue",{"_index":187,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.reset",{"_index":203,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseform.value",{"_index":206,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expensekey",{"_index":2180,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.expenses",{"_index":1983,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(exp",{"_index":2008,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenses.filter(item",{"_index":1996,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.expenseselected.emit(expense",{"_index":1286,"title":{},"body":{"components/ExpenseListComponent.html":{}}}],["this.expenseservice.add(data",{"_index":208,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.expenseservice.getall",{"_index":219,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.expenseservice.searchbydaterange(datestr",{"_index":887,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.expenseservice.searchbydaterange(fromdate.toisostring",{"_index":1354,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.fb.group",{"_index":178,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.filteredlocationsuggestions",{"_index":232,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filteredlocationsuggestions.length",{"_index":235,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions",{"_index":238,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.filterednotesuggestions.length",{"_index":241,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.formatdateforinput(this.currentdate",{"_index":1772,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formatmonthforinput(this.currentdate",{"_index":1776,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.generateexpenseanalysisprompt(prompt",{"_index":1350,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.generateuserid",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["this.get",{"_index":2342,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.getall",{"_index":608,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getall().find(item",{"_index":1201,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["this.getlast30daysexpenses",{"_index":1348,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.getsongurl(firstsong",{"_index":1904,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.getuserdatafromlocalstorage",{"_index":2086,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.globalloader.hide",{"_index":2236,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloader.show('searching",{"_index":2235,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.globalloadercomponent",{"_index":1466,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.hide",{"_index":1468,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloadercomponent?.show(text",{"_index":1467,"title":{},"body":{"injectables/GlobalLoaderService.html":{}}}],["this.globalloaderservice.hide",{"_index":1048,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.register(this",{"_index":1451,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.globalloaderservice.show",{"_index":1346,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["this.globalloaderservice.show(\"searching",{"_index":1045,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.globalloaderservice.show(\"suggesting",{"_index":1050,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.history",{"_index":1126,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.history.push",{"_index":1120,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{}}}],["this.http.get(`${this.baseurl}?query=${query}&limit=10&page=0`).pipe",{"_index":1047,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["this.http.post(url",{"_index":2087,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.initform",{"_index":1239,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.interval",{"_index":1867,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.isbrowser",{"_index":604,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.iscategorydropdownopen",{"_index":1008,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.isdarkmode",{"_index":691,"title":{},"body":{"components/BudgetComponent.html":{},"components/PieChartComponent.html":{}}}],["this.iseditmode",{"_index":694,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.iseditopen",{"_index":1250,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.isexpenseroute",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismenuopen",{"_index":1687,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.ismobile",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ismusicroute",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isopen",{"_index":2228,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.isvisible",{"_index":1453,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.latestbudget",{"_index":713,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.amount",{"_index":697,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.fromdate",{"_index":698,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.latestbudget.todate",{"_index":699,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadbudgets",{"_index":692,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.loadcategories",{"_index":1002,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["this.loaddata",{"_index":1568,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.loaddaydata",{"_index":1992,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loaddaydata(expenses",{"_index":1573,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loader.hide",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/GlobalLoaderComponent.html":{}}}],["this.loader.show",{"_index":1456,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.loadmonthdata",{"_index":1990,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadmonthdata(expenses",{"_index":1572,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.loadsuggestionsfromlocalstorage",{"_index":175,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.loadyeardata",{"_index":1991,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.loadyeardata(expenses",{"_index":1574,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.locationsuggestions",{"_index":220,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.locationsuggestions.filter(loc",{"_index":233,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.message",{"_index":1452,"title":{},"body":{"components/GlobalLoaderComponent.html":{}}}],["this.messages",{"_index":358,"title":{},"body":{"components/AiComponent.html":{}}}],["this.modalexpenses",{"_index":888,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modalexpenses.reduce((acc",{"_index":890,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.modaltitle",{"_index":894,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.notesuggestions",{"_index":226,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.notesuggestions.filter(note",{"_index":239,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.oninputchanges",{"_index":176,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.onsongfinished",{"_index":1870,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.playsong(url",{"_index":1905,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.postapiservice.postuserdata",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["this.progress.set(0",{"_index":1911,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(seektime",{"_index":1919,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.progress.set(this.audio.currenttime",{"_index":1868,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query",{"_index":2232,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.slice(0",{"_index":2238,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.query.trim",{"_index":1852,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.query.trim().length",{"_index":2237,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.rendercalendar(this.currentyear",{"_index":854,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.renderchart(\"categorychart",{"_index":2000,"title":{},"body":{"components/PieChartComponent.html":{}}}],["this.resetformwithcurrentdatetime",{"_index":174,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.router.events",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.saavnservice.searchsongs(`${songname",{"_index":1898,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.searchsongs(q).subscribe((res",{"_index":1853,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.saavnservice.suggestnextsong(transformeddata",{"_index":1874,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(html",{"_index":357,"title":{},"body":{"components/AiComponent.html":{}}}],["this.search.emit(this.query",{"_index":2233,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.blur",{"_index":2234,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.searchinput?.nativeelement.focus",{"_index":2229,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["this.sectionservice.currentsection$.subscribe(section",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionservice.setsection(section",{"_index":1692,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/NavbarComponent.html":{},"components/SidebarComponent.html":{}}}],["this.sectionsource.asobservable",{"_index":2252,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.sectionsource.next(section",{"_index":2257,"title":{},"body":{"injectables/SectionService.html":{}}}],["this.selectedcategoryname",{"_index":189,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense",{"_index":1254,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense.category_name",{"_index":1251,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.amount",{"_index":1241,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.category_id",{"_index":1242,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.date",{"_index":1243,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.isextraspending",{"_index":1248,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.location",{"_index":1247,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.note",{"_index":1245,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.payment_mode",{"_index":1246,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.selectedexpense?.time",{"_index":1244,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.showaibutton",{"_index":1683,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["this.showbackbutton",{"_index":1948,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.showbudgetsection",{"_index":711,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.showlocationsuggestions",{"_index":231,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.showmodal",{"_index":695,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["this.shownotesuggestions",{"_index":237,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.songs.set(res.data.results",{"_index":1854,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.storageservice.getallbudgets",{"_index":605,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallcategories",{"_index":925,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getallexpenses",{"_index":923,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/PostApiService.html":{}}}],["this.storageservice.getuser",{"_index":2100,"title":{},"body":{"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["this.storageservice.syncbudgetwithschema",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.synccategorieswithschema",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncexpenseswithschema",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.storageservice.syncuserwithschema",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.suggestedperday",{"_index":768,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.syncuser(this.userkey",{"_index":2134,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.budgetkey",{"_index":2137,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.categorykey",{"_index":2121,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.syncwithschema(this.expensekey",{"_index":2124,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.theme.mode",{"_index":1567,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.title",{"_index":1609,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.toastcomponent",{"_index":2336,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastcomponent?.showtoast(message",{"_index":2337,"title":{},"body":{"injectables/ToastService.html":{}}}],["this.toastservice.register(this",{"_index":2302,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show(\"budget",{"_index":785,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('budget",{"_index":704,"title":{},"body":{"components/BudgetComponent.html":{}}}],["this.toastservice.show('error",{"_index":217,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["this.toastservice.show('expense",{"_index":209,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["this.toggleedit",{"_index":1257,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["this.tooltip",{"_index":1592,"title":{},"body":{"components/GraphsComponent.html":{}}}],["this.totalexpenses",{"_index":886,"title":{},"body":{"components/CalendarComponent.html":{}}}],["this.transformsongdata(this.currentsong",{"_index":1872,"title":{},"body":{"components/MusicComponent.html":{}}}],["this.userinput.trim",{"_index":348,"title":{},"body":{"components/AiComponent.html":{}}}],["this.userkey",{"_index":2184,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["this.userservice.getvalue('currency",{"_index":688,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.getvalue('id",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('last_backup",{"_index":2077,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.userservice.getvalue('theme_mode",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["this.userservice.update('id",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.update('last_backup",{"_index":2092,"title":{},"body":{"injectables/PostApiService.html":{}}}],["this.version",{"_index":588,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["this.viewtype",{"_index":1571,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["this.viewtypedaydiv",{"_index":1762,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.viewtypeyeardiv",{"_index":1763,"title":{},"body":{"components/HomeComponent.html":{}}}],["through",{"_index":2481,"title":{},"body":{"index.html":{}}}],["thu",{"_index":851,"title":{},"body":{"components/CalendarComponent.html":{}}}],["ticks",{"_index":2038,"title":{},"body":{"components/PieChartComponent.html":{}}}],["time",{"_index":116,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"injectables/ExpenseService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"index.html":{}}}],["timeamountmap",{"_index":1615,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.get(time",{"_index":1639,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(\"00:00:00",{"_index":1629,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timeamountmap.set(time",{"_index":1636,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times",{"_index":796,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/ToastComponent.html":{}}}],["times.map(time",{"_index":1638,"title":{},"body":{"components/GraphsComponent.html":{}}}],["times[value",{"_index":1640,"title":{},"body":{"components/GraphsComponent.html":{}}}],["timestamp",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["timestr",{"_index":199,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["title",{"_index":1165,"title":{},"body":{"components/CustomModalComponent.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["titlecase",{"_index":1785,"title":{},"body":{"components/HomeComponent.html":{}}}],["to.sethours(23",{"_index":1210,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["toast",{"_index":80,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["toast.classname",{"_index":2309,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.css",{"_index":2295,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.component.html",{"_index":2294,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.innerhtml",{"_index":2327,"title":{},"body":{"components/ToastComponent.html":{}}}],["toast.remove",{"_index":2329,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":314,"title":{"components/ToastComponent.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastcontainer",{"_index":2303,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.appendchild(toast",{"_index":2328,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcontainer.innerhtml",{"_index":2305,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastservice",{"_index":65,"title":{"injectables/ToastService.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["todate",{"_index":595,"title":{},"body":{"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"injectables/GeminiApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["todate.toisostring",{"_index":1355,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["today",{"_index":761,"title":{},"body":{"components/BudgetComponent.html":{},"components/CalendarComponent.html":{}}}],["todaysexpenses",{"_index":1618,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.foreach(item",{"_index":1630,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["todaysexpenses.sort((a",{"_index":1620,"title":{},"body":{"components/GraphsComponent.html":{}}}],["todaystr",{"_index":1616,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["toggle",{"_index":1684,"title":{},"body":{"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["togglecategorydropdown",{"_index":961,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["toggleedit",{"_index":1220,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["togglemenu",{"_index":1674,"title":{},"body":{"components/HamburgerMenuComponent.html":{}}}],["toggles",{"_index":996,"title":{},"body":{"components/CategoryDropdownComponent.html":{},"components/SearchButtonComponent.html":{}}}],["togglesearch",{"_index":2197,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["tomato",{"_index":2602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tone",{"_index":1391,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["toolbar",{"_index":1526,"title":{},"body":{"components/GraphsComponent.html":{}}}],["tooltip",{"_index":1487,"title":{},"body":{"components/GraphsComponent.html":{},"components/InfoIconComponent.html":{},"components/PieChartComponent.html":{}}}],["top",{"_index":2027,"title":{},"body":{"components/PieChartComponent.html":{}}}],["total",{"_index":889,"title":{},"body":{"components/CalendarComponent.html":{},"components/GraphsComponent.html":{}}}],["totalamount",{"_index":1582,"title":{},"body":{"components/GraphsComponent.html":{}}}],["totalbudget",{"_index":716,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalbudget).tofixed(2",{"_index":747,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totaldays",{"_index":755,"title":{},"body":{"components/BudgetComponent.html":{}}}],["totalexpenses",{"_index":816,"title":{},"body":{"components/CalendarComponent.html":{}}}],["touch",{"_index":2532,"title":{},"body":{"index.html":{}}}],["track",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tracker",{"_index":1949,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["tracking",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["tracks",{"_index":2220,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["transform",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["transformeddata",{"_index":1871,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata",{"_index":1821,"title":{},"body":{"components/MusicComponent.html":{}}}],["transformsongdata(data",{"_index":1836,"title":{},"body":{"components/MusicComponent.html":{}}}],["transition",{"_index":2240,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["translatey(0",{"_index":565,"title":{},"body":{"components/AppComponent.html":{}}}],["translatey(100",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["transparent",{"_index":1531,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{}}}],["travel",{"_index":2477,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["trends",{"_index":1374,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["triggers",{"_index":2203,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["trim",{"_index":1883,"title":{},"body":{"components/MusicComponent.html":{}}}],["trimmedinput",{"_index":347,"title":{},"body":{"components/AiComponent.html":{}}}],["trimmedinput.length",{"_index":349,"title":{},"body":{"components/AiComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":207,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/ExpenseListComponent.html":{},"injectables/GeminiApiService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["tslib",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["tue",{"_index":849,"title":{},"body":{"components/CalendarComponent.html":{}}}],["two",{"_index":2468,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2564,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeclasses",{"_index":2306,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses.success",{"_index":2324,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeclasses[type",{"_index":2323,"title":{},"body":{"components/ToastComponent.html":{}}}],["typeof",{"_index":600,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["typically",{"_index":575,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["typing",{"_index":2498,"title":{},"body":{"index.html":{}}}],["ui",{"_index":2455,"title":{},"body":{"index.html":{}}}],["ui/ux",{"_index":2442,"title":{},"body":{"index.html":{}}}],["uncategorized",{"_index":904,"title":{},"body":{"components/CalendarComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{}}}],["undefined",{"_index":601,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/ChatMessage.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["unique",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["unknown",{"_index":1934,"title":{},"body":{"components/MusicComponent.html":{},"injectables/SaavnService.html":{}}}],["unrelated",{"_index":1386,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["unused",{"_index":2525,"title":{},"body":{"index.html":{}}}],["up",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["update",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"injectables/CategoryService.html":{},"injectables/ExpenseService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["update(budget_id",{"_index":614,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{}}}],["update(category_id",{"_index":939,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["update(expense_id",{"_index":1198,"title":{},"body":{"interfaces/Expense.html":{},"injectables/ExpenseService.html":{}}}],["update(key",{"_index":2340,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":705,"title":{},"body":{"components/BudgetComponent.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"miscellaneous/variables.html":{}}}],["updateddata",{"_index":2154,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["updatedexpense",{"_index":1253,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["updatedprompt",{"_index":1349,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["updates",{"_index":408,"title":{},"body":{"components/AppComponent.html":{}}}],["updating",{"_index":2091,"title":{},"body":{"injectables/PostApiService.html":{}}}],["upi",{"_index":183,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["upload",{"_index":2522,"title":{},"body":{"index.html":{}}}],["upon",{"_index":2465,"title":{},"body":{"index.html":{}}}],["url",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"injectables/ConfigService.html":{},"components/MusicComponent.html":{},"injectables/PostApiService.html":{}}}],["url.startswith('/music",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["urls",{"_index":1142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["usage",{"_index":2538,"title":{},"body":{"index.html":{}}}],["use",{"_index":1108,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"injectables/SaavnService.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":132,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/GraphsComponent.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":138,"title":{"interfaces/User.html":{}},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"injectables/PostApiService.html":{},"injectables/SaavnService.html":{},"interfaces/Schema.html":{},"components/SearchButtonComponent.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":1087,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"injectables/SaavnService.html":{},"index.html":{}}}],["user.service",{"_index":915,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{}}}],["user_data",{"_index":2062,"title":{},"body":{"injectables/PostApiService.html":{}}}],["user_id",{"_index":913,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"injectables/PostApiService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"miscellaneous/variables.html":{}}}],["user_password",{"_index":2131,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["userdata",{"_index":2085,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userdata).pipe(take(1)).subscribe",{"_index":2088,"title":{},"body":{"injectables/PostApiService.html":{}}}],["userid",{"_index":547,"title":{},"body":{"components/AppComponent.html":{},"components/CategoryDropdownComponent.html":{},"injectables/PostApiService.html":{}}}],["userinput",{"_index":327,"title":{},"body":{"components/AiComponent.html":{}}}],["userkey",{"_index":2117,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userquery",{"_index":1340,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["users",{"_index":2439,"title":{},"body":{"index.html":{}}}],["userschema",{"_index":2126,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["userservice",{"_index":390,"title":{"injectables/UserService.html":{}},"body":{"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/GraphsComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usertheme",{"_index":1566,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["user’s",{"_index":1372,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["uses",{"_index":2069,"title":{},"body":{"injectables/PostApiService.html":{}}}],["using",{"_index":1396,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["util/app",{"_index":2113,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["util/config/config.service",{"_index":2073,"title":{},"body":{"injectables/PostApiService.html":{}}}],["utilities",{"_index":2608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utility",{"_index":2519,"title":{},"body":{"index.html":{}}}],["utilsservice",{"_index":2353,"title":{"injectables/UtilsService.html":{}},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["val?.tolowercase().trim",{"_index":230,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["valid",{"_index":1074,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["validators",{"_index":157,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["validators.maxlength(100",{"_index":185,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.maxlength(50",{"_index":184,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["validators.min(0",{"_index":180,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{}}}],["validators.required",{"_index":179,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/BudgetComponent.html":{},"components/ExpenseDetailsModalComponent.html":{}}}],["value",{"_index":135,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AppComponent.html":{},"injectables/AppVersionService.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"interfaces/ChatMessage.html":{},"injectables/ConfigService.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"injectables/GeminiApiService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.split",{"_index":1777,"title":{},"body":{"components/HomeComponent.html":{}}}],["value.trim",{"_index":1770,"title":{},"body":{"components/HomeComponent.html":{}}}],["values",{"_index":1139,"title":{},"body":{"injectables/ConfigService.html":{},"components/GraphsComponent.html":{},"injectables/PostApiService.html":{},"miscellaneous/variables.html":{}}}],["value}\\n",{"_index":1056,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["var",{"_index":257,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AiComponent.html":{},"components/AnalysisComponent.html":{},"components/AppComponent.html":{},"components/BudgetComponent.html":{},"components/CalendarComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/CustomModalComponent.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"components/FooterComponent.html":{},"components/GlobalLoaderComponent.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/InfoIconComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{},"components/SearchComponent.html":{},"components/SettingItemComponent.html":{},"components/SidebarComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2567,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":574,"title":{},"body":{"injectables/AppVersionService.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["version.service",{"_index":1321,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["version.service.ts",{"_index":572,"title":{},"body":{"injectables/AppVersionService.html":{},"coverage.html":{}}}],["version.service.ts:17",{"_index":581,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version.service.ts:29",{"_index":582,"title":{},"body":{"injectables/AppVersionService.html":{}}}],["version/app",{"_index":571,"title":{},"body":{"injectables/AppVersionService.html":{},"components/FooterComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"coverage.html":{}}}],["versions",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":2549,"title":{},"body":{"index.html":{}}}],["vibe",{"_index":1105,"title":{},"body":{"interfaces/ChatMessage.html":{},"injectables/SaavnService.html":{}}}],["view",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["viewchild",{"_index":155,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/PieChartComponent.html":{},"components/SearchButtonComponent.html":{}}}],["viewchild('amountinput",{"_index":127,"title":{},"body":{"components/AddExpenseComponent.html":{}}}],["viewchild('categorycanvas",{"_index":1971,"title":{},"body":{"components/PieChartComponent.html":{}}}],["viewchild('categorydownref",{"_index":998,"title":{},"body":{"components/CategoryDropdownComponent.html":{}}}],["viewchild('searchinput",{"_index":2226,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["viewed",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["views",{"_index":2471,"title":{},"body":{"index.html":{}}}],["viewtype",{"_index":1495,"title":{},"body":{"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/PieChartComponent.html":{}}}],["viewtypedaydiv",{"_index":1699,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewtypeyeardiv",{"_index":1700,"title":{},"body":{"components/HomeComponent.html":{}}}],["visibility",{"_index":151,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/CategoryDropdownComponent.html":{},"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["visualizes",{"_index":2473,"title":{},"body":{"index.html":{}}}],["visually",{"_index":1402,"title":{},"body":{"injectables/GeminiApiService.html":{},"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"components/AddExpenseComponent.html":{},"components/AppComponent.html":{},"interfaces/Budget.html":{},"components/BudgetComponent.html":{},"injectables/BudgetService.html":{},"components/CalendarComponent.html":{},"interfaces/Category.html":{},"components/CategoryDropdownComponent.html":{},"injectables/CategoryService.html":{},"components/CustomModalComponent.html":{},"interfaces/Expense.html":{},"components/ExpenseDetailsModalComponent.html":{},"components/ExpenseListComponent.html":{},"injectables/ExpenseService.html":{},"components/GlobalLoaderComponent.html":{},"injectables/GlobalLoaderService.html":{},"components/GraphsComponent.html":{},"components/HamburgerMenuComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/NavbarComponent.html":{},"components/PieChartComponent.html":{},"injectables/PostApiService.html":{},"components/SearchButtonComponent.html":{},"injectables/SectionService.html":{},"components/SidebarComponent.html":{},"injectables/StorageService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["v{{appversion",{"_index":1328,"title":{},"body":{"components/FooterComponent.html":{}}}],["w",{"_index":2313,"title":{},"body":{"components/ToastComponent.html":{}}}],["want",{"_index":782,"title":{},"body":{"components/BudgetComponent.html":{}}}],["warning",{"_index":1423,"title":{},"body":{"injectables/GeminiApiService.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["we're",{"_index":2118,"title":{},"body":{"interfaces/Schema.html":{},"injectables/StorageService.html":{}}}],["weather",{"_index":1406,"title":{},"body":{"injectables/GeminiApiService.html":{}}}],["webkit",{"_index":1787,"title":{},"body":{"components/HomeComponent.html":{}}}],["wed",{"_index":850,"title":{},"body":{"components/CalendarComponent.html":{}}}],["weekdays",{"_index":817,"title":{},"body":{"components/CalendarComponent.html":{}}}],["whenever",{"_index":2204,"title":{},"body":{"components/SearchButtonComponent.html":{}}}],["whether",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/GraphsComponent.html":{},"components/SearchButtonComponent.html":{}}}],["white",{"_index":2321,"title":{},"body":{"components/ToastComponent.html":{}}}],["whole",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["width",{"_index":1798,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchButtonComponent.html":{}}}],["window",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"components/PieChartComponent.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window.innerwidth",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["window.localstorage",{"_index":602,"title":{},"body":{"interfaces/Budget.html":{},"injectables/BudgetService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Expense.html":{},"injectables/ExpenseService.html":{},"interfaces/Schema.html":{},"injectables/StorageService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["window:resize",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["window:resize(event",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["wise",{"_index":2472,"title":{},"body":{"index.html":{}}}],["wisely",{"_index":2430,"title":{},"body":{"index.html":{}}}],["within",{"_index":2097,"title":{},"body":{"injectables/PostApiService.html":{}}}],["worker",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["worker.js",{"_index":2594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["works",{"_index":366,"title":{},"body":{"components/AnalysisComponent.html":{},"components/SearchComponent.html":{}}}],["x",{"_index":1540,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["xs",{"_index":2314,"title":{},"body":{"components/ToastComponent.html":{}}}],["y",{"_index":1545,"title":{},"body":{"components/GraphsComponent.html":{},"components/PieChartComponent.html":{}}}],["year",{"_index":834,"title":{},"body":{"components/CalendarComponent.html":{},"interfaces/ChatMessage.html":{},"components/GraphsComponent.html":{},"components/HomeComponent.html":{},"components/MusicComponent.html":{},"components/PieChartComponent.html":{},"injectables/SaavnService.html":{}}}],["yearly",{"_index":1505,"title":{},"body":{"components/GraphsComponent.html":{},"index.html":{}}}],["years",{"_index":2494,"title":{},"body":{"index.html":{}}}],["yellow",{"_index":739,"title":{},"body":{"components/BudgetComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1267,"title":{},"body":{"components/ExpenseDetailsModalComponent.html":{}}}],["yyyy",{"_index":1721,"title":{},"body":{"components/HomeComponent.html":{}}}],["z",{"_index":1797,"title":{},"body":{"components/HomeComponent.html":{}}}],["zone.js",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1527,"title":{},"body":{"components/GraphsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddExpenseComponent.html":{"url":"components/AddExpenseComponent.html","title":"component - AddExpenseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddExpenseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/add-expense/add-expense.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for adding new expenses.\nIt includes a reactive form and suggestions for location and notes.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-expense\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                                CategoryDropdownComponent\n                \n            \n\n            \n                styleUrls\n                ./add-expense.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-expense.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amountInput\n                            \n                            \n                                expenseForm\n                            \n                            \n                                filteredLocationSuggestions\n                            \n                            \n                                filteredNoteSuggestions\n                            \n                            \n                                locationSuggestions\n                            \n                            \n                                noteSuggestions\n                            \n                            \n                                selectedCategoryName\n                            \n                            \n                                showLocationSuggestions\n                            \n                            \n                                showNoteSuggestions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                loadSuggestionsFromLocalStorage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onInputChanges\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetFormWithCurrentDateTime\n                            \n                            \n                                selectLocationSuggestion\n                            \n                            \n                                selectNoteSuggestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, expenseService: ExpenseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor to inject dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder instance\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                LocalStorage-based expense service\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Toast notification service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Creates and configures the reactive form\n\n\n                        \n                            Returns :     FormGroup\n\n                        \n                            \n                                Configured FormGroup\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSuggestionsFromLocalStorage\n                        \n                    \n                \n            \n            \n                \nloadSuggestionsFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Loads past note and location suggestions from localStorage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that initializes the component\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Handles category selection from dropdown\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChanges\n                        \n                    \n                \n            \n            \n                \nonInputChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Subscribes to input changes and filters suggestions\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:122\n                        \n                    \n\n\n            \n                \n                        Submits the form and adds the expense\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFormWithCurrentDateTime\n                        \n                    \n                \n            \n            \n                \nresetFormWithCurrentDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Resets the form with the current date and time\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectLocationSuggestion\n                        \n                    \n                \n            \n            \n                \nselectLocationSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Selects a location suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected location\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectNoteSuggestion\n                        \n                    \n                \n            \n            \n                \nselectNoteSuggestion(suggestion: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/add-expense/add-expense.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Selects a note suggestion and fills it in the input\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                suggestion\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amountInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('amountInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:48\n                        \n                    \n\n            \n                \n                    Reference to the amount input element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenseForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:24\n                        \n                    \n\n            \n                \n                    The reactive form used to input expense data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:33\n                        \n                    \n\n            \n                \n                    Filtered location suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:42\n                        \n                    \n\n            \n                \n                    Filtered note suggestions based on user input\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        locationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:30\n                        \n                    \n\n            \n                \n                    Stored location suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:39\n                        \n                    \n\n            \n                \n                    Stored note suggestions based on previous expenses\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:27\n                        \n                    \n\n            \n                \n                    Currently selected category name for display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showLocationSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:36\n                        \n                    \n\n            \n                \n                    Controls visibility of location suggestions dropdown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNoteSuggestions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/add-expense/add-expense.component.ts:45\n                        \n                    \n\n            \n                \n                    Controls visibility of note suggestions dropdown\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService } from '../../service/localStorage/expense.service';\nimport { CategoryDropdownComponent } from '../../component/category-dropdown/category-dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\n\n/**\n  * @component\n  * @description\n  * Component for adding new expenses.\n  * \n  * It includes a reactive form and suggestions for location and notes.\n*/\n@Component({\n  selector: 'app-add-expense',\n  standalone: true,\n  imports: [ReactiveFormsModule, CommonModule, CategoryDropdownComponent],\n  templateUrl: './add-expense.component.html',\n  styleUrls: ['./add-expense.component.css']\n})\nexport class AddExpenseComponent implements OnInit {\n  /** The reactive form used to input expense data */\n  expenseForm: FormGroup;\n\n  /** Currently selected category name for display */\n  selectedCategoryName: string = 'Select Category';\n\n  /** Stored location suggestions based on previous expenses */\n  locationSuggestions: any[] = [];\n\n  /** Filtered location suggestions based on user input */\n  filteredLocationSuggestions: string[] = [];\n\n  /** Controls visibility of location suggestions dropdown */\n  showLocationSuggestions = false;\n\n  /** Stored note suggestions based on previous expenses */\n  noteSuggestions: any[] = [];\n\n  /** Filtered note suggestions based on user input */\n  filteredNoteSuggestions: string[] = [];\n\n  /** Controls visibility of note suggestions dropdown */\n  showNoteSuggestions = false;\n\n  /** Reference to the amount input element */\n  @ViewChild('amountInput') amountInput!: ElementRef;\n\n  /**\n   * Constructor to inject dependencies\n   * @param fb FormBuilder instance\n   * @param expenseService LocalStorage-based expense service\n   * @param toastService Toast notification service\n   */\n  constructor(\n    private fb: FormBuilder,\n    private expenseService: ExpenseService,\n    private toastService: ToastService\n  ) {\n    this.expenseForm = this.createForm();\n  }\n\n  /** Lifecycle hook that initializes the component */\n  ngOnInit(): void {\n    setTimeout(() => {\n      this.amountInput?.nativeElement.focus();\n    }, 50);\n    this.resetFormWithCurrentDateTime();\n    this.loadSuggestionsFromLocalStorage();\n    this.onInputChanges();\n  }\n\n  /**\n   * Creates and configures the reactive form\n   * @returns Configured FormGroup\n   */\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      category_id: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      payment_mode: ['UPI', Validators.required],\n      location: ['', Validators.maxLength(50)],\n      note: ['', Validators.maxLength(100)],\n      isExtraSpending: [false, Validators.required]\n    });\n  }\n\n  /**\n   * Handles category selection from dropdown\n   * @param category The selected category\n   */\n  onCategorySelected(category: any): void {\n    this.expenseForm.patchValue({ category_id: category.category_id });\n    this.selectedCategoryName = category.name;\n  }\n\n  /** Resets the form with the current date and time */\n  resetFormWithCurrentDateTime(): void {\n    const now = new Date();\n\n    const dateStr = `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    const timeStr = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`;\n\n    this.expenseForm.reset({\n      amount: '',\n      category_id: '',\n      date: dateStr,\n      time: timeStr,\n      payment_mode: 'UPI',\n      location: '',\n      note: '',\n      isExtraSpending: false\n    });\n\n    this.selectedCategoryName = 'Select Category';\n  }\n\n  /** Submits the form and adds the expense */\n  onSubmit() {\n    if (this.expenseForm.invalid) {\n      this.expenseForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.expenseForm.value;\n    try {\n      this.expenseService.add(data);\n      this.toastService.show('Expense added successfully!', 'success');\n      this.resetFormWithCurrentDateTime();\n      this.loadSuggestionsFromLocalStorage();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error adding expense.', 'error');\n    }\n  }\n\n  /** Loads past note and location suggestions from localStorage */\n  loadSuggestionsFromLocalStorage(): void {\n    const allExpenses = this.expenseService.getAll() || [];\n\n    this.locationSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.location?.trim())\n          .filter(loc => loc)\n      )\n    ];\n\n    this.noteSuggestions = [\n      ...new Set(\n        allExpenses\n          .map(item => item.note?.trim())\n          .filter(note => note)\n      )\n    ];\n  }\n\n  /** Subscribes to input changes and filters suggestions */\n  onInputChanges(): void {\n    this.expenseForm.get('location')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showLocationSuggestions = false;\n        this.filteredLocationSuggestions = [];\n        return;\n      }\n      this.filteredLocationSuggestions = this.locationSuggestions.filter(loc =>\n        loc.toLowerCase().includes(input)\n      );\n      this.showLocationSuggestions = this.filteredLocationSuggestions.length > 0;\n    });\n\n    this.expenseForm.get('note')?.valueChanges.subscribe(val => {\n      const input = val?.toLowerCase().trim() || '';\n\n      if (!input) {\n        this.showNoteSuggestions = false;\n        this.filteredNoteSuggestions = [];\n        return;\n      }\n\n      this.filteredNoteSuggestions = this.noteSuggestions.filter(note =>\n        note.toLowerCase().includes(input)\n      );\n      this.showNoteSuggestions = this.filteredNoteSuggestions.length > 0;\n    });\n\n  }\n\n  /**\n   * Selects a location suggestion and fills it in the input\n   * @param suggestion The selected location\n   */\n  selectLocationSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ location: suggestion });\n    this.showLocationSuggestions = false;\n  }\n\n  /**\n   * Selects a note suggestion and fills it in the input\n   * @param suggestion The selected note\n   */\n  selectNoteSuggestion(suggestion: string): void {\n    this.expenseForm.patchValue({ note: suggestion });\n    this.showNoteSuggestions = false;\n  }\n}\n\n    \n\n    \n        \n    ➕ Add Expense -->\n    \n\n        \n        \n            \n            \n                Amount\n                \n\n\n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n            \n\n            \n            \n                Category\n                \n                \n                    Category is required\n                \n            \n        \n\n        \n        \n            \n                Date\n                \n                \n                    Date is required\n                \n            \n            \n                Time\n                \n                \n                    Time is required\n                \n            \n        \n\n        \n        \n            \n                Payment Mode\n                \n                    UPI\n                    Cash\n                    Others\n                \n            \n\n            \n                Location\n                \n\n                \n                \n                    \n                        {{ loc }}\n                    \n                \n\n                \n                    Location cannot be more than 50 characters\n                \n            \n        \n\n        \n        \n            Note\n            \n\n            \n            \n                \n                    {{ note }}\n                \n            \n\n            \n                Note cannot be more than 100 characters\n            \n        \n\n        \n        \n            \n                Mark as Extra Spending\n                \n                    \n                    \n                    \n                    \n                \n            \n        \n        \n            \n                Add Expense\n            \n        \n\n    \n\n    \n\n    \n                \n                    ./add-expense.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    ➕ Add Expense -->                                                            Amount                                                    Amount cannot be negative                                                    Amount is required                                                                    Category                                                    Category is required                                                                                Date                                                    Date is required                                                        Time                                                    Time is required                                                                                Payment Mode                                    UPI                    Cash                    Others                                                        Location                                                                                            {{ loc }}                                                                        Location cannot be more than 50 characters                                                                Note                                                                        {{ note }}                                                        Note cannot be more than 100 characters                                                                Mark as Extra Spending                                                                                                                                                                        Add Expense                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddExpenseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AiComponent.html":{"url":"components/AiComponent.html","title":"component - AiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/ai/ai.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ai\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            HttpClientModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./ai.component.html\n            \n\n\n\n            \n                styleUrl\n                ./ai.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                responseHtml\n                            \n                            \n                                userInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geminiApi: GeminiApiService, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/ai/ai.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geminiApi\n                                                  \n                                                        \n                                                                        GeminiApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                    DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                        \n                    send()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/ai/ai.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        responseHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeHtml | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/ai/ai.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { marked } from 'marked';\nimport { GeminiApiService } from '../../service/gemini-api/gemini-api.service';\n\n@Component({\n  selector: 'app-ai',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HttpClientModule],\n  templateUrl: './ai.component.html',\n  styleUrl: './ai.component.css'\n})\nexport class AiComponent {\n  userInput = '';\n  responseHtml: SafeHtml | null = null;\n\n  constructor(\n    private geminiApi: GeminiApiService,\n    private sanitizer: DomSanitizer\n  ) { }\n\n  async send() {\n    const trimmedInput = this.userInput.trim();\n    if (trimmedInput.length  {\n//       if (msg.role === 'model') {\n//         const raw = msg.parts[0].text;\n//         const html = await marked.parse(raw); return {\n//           ...msg,\n//           safeHtml: this.sanitizer.bypassSecurityTrustHtml(html)\n//         };\n//       }\n//       return msg;\n//     }));\n\n//     this.messages = mapped;\n//   }\n\n// }\n\n\n\n    \n\n    \n        \n  \n    \n      💬 AI Assistant\n      \n      \n      \n        \n\n        \n        \n\n        \n          \n        \n      \n    \n    \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n      \n        \n          \n            \n              {{ msg.parts[0].text }}\n            \n            \n              \n            \n          \n        \n      \n      Thinking...\n    \n\n    \n      \n      \n        Send\n      \n    \n  \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            💬 AI Assistant                                                                                                                                                {{ msg.parts[0].text }}                                                                                Thinking...                            Send             -->'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnalysisComponent.html":{"url":"components/AnalysisComponent.html","title":"component - AnalysisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnalysisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/analysis/analysis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-analysis\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./analysis.component.html\n            \n\n\n\n            \n                styleUrl\n                ./analysis.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-analysis',\n  imports: [],\n  templateUrl: './analysis.component.html',\n  styleUrl: './analysis.component.css'\n})\nexport class AnalysisComponent {\n\n}\n\n    \n\n    \n        analysis works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'analysis works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnalysisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component of the application.\nManages global state, mobile view detection, section tracking,\ntheme application, schema syncing, and PWA update activation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                                SidebarComponent\n                                FooterComponent\n                                ToastComponent\n                                GlobalLoaderComponent\n                            CommonModule\n                                AddExpenseComponent\n                                SearchComponent\n                                SettingsComponent\n                                ListExpensesComponent\n                                HomeComponent\n                                BudgetComponent\n                                AnalysisComponent\n                                CalendarComponent\n                                AiComponent\n                                MusicComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection\n                            \n                            \n                                isExpenseRoute\n                            \n                            \n                                isMobile\n                            \n                            \n                                isMusicRoute\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateUserId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                    \n                                onRightClick\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:contextmenu\n                            \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, loader: GlobalLoaderService, sectionService: SectionService, storageService: StorageService, router: Router, postApiService: PostApiService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:66\n                            \n                        \n\n                \n                    \n                            Constructor for AppComponent.\nInitializes route tracking, section updates, PWA update listener, and services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for managing user preferences\n\n                                                        \n                                                \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Global loader overlay service\n\n                                                        \n                                                \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to track current section changes\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Local storage schema sync service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Router to track route changes\n\n                                                        \n                                                \n                                                \n                                                        postApiService\n                                                  \n                                                        \n                                                                        PostApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Backend API post service\n\n                                                        \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular platform ID to check if running in browser\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:contextmenu\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:contextmenu(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        generateUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Generates a unique user ID by combining timestamp and random string.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Generated user ID string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Angular lifecycle hook called after component initialization.\nApplies theme, syncs schema, sets user ID, and shows loader.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Event listener for window resize to update mobile view detection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Resize event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onRightClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRightClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:contextmenu', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Disables the context menu on right-click for the whole app.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Mouse event object\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'home'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:51\n                        \n                    \n\n            \n                \n                    Currently active section of the app (e.g., 'home', 'settings').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpenseRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:61\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the root/expenses page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:56\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the app is being viewed on a mobile device.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMusicRoute\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:66\n                        \n                    \n\n            \n                \n                    Boolean indicating whether the current route is the music page.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:82\n                        \n                    \n\n            \n                \n                    Service for managing user preferences\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, Inject } from '@angular/core';\nimport { CommonModule, isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { SidebarComponent } from './shared/sidebar/sidebar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { ToastComponent } from './shared/toast/toast.component';\nimport { GlobalLoaderComponent } from './shared/global-loader/global-loader.component';\nimport { AddExpenseComponent } from './features/add-expense/add-expense.component';\nimport { SearchComponent } from './features/search/search.component';\nimport { SettingsComponent } from './features/settings/settings.component';\nimport { ListExpensesComponent } from './features/list-expenses/list-expenses.component';\nimport { HomeComponent } from './features/home/home.component';\nimport { CalendarComponent } from './features/calendar/calendar.component';\nimport { BudgetComponent } from './features/budget/budget.component';\nimport { AnalysisComponent } from './features/analysis/analysis.component';\nimport { AiComponent } from './features/ai/ai.component';\nimport { MusicComponent } from './features/music/music.component';\n\nimport { StorageService } from './service/localStorage/storage.service';\nimport { UserService } from './service/localStorage/user.service';\nimport { GlobalLoaderService } from './service/global-loader/global-loader.service';\nimport { SectionService } from './service/section/section.service';\nimport { PostApiService } from './service/backend-api/post/post-api.service';\n\n/**\n * Root component of the application.\n * Manages global state, mobile view detection, section tracking,\n * theme application, schema syncing, and PWA update activation.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    NavbarComponent, SidebarComponent, FooterComponent, ToastComponent,\n    GlobalLoaderComponent, CommonModule, AddExpenseComponent, SearchComponent,\n    SettingsComponent, ListExpensesComponent, HomeComponent, BudgetComponent,\n    AnalysisComponent, CalendarComponent, AiComponent, MusicComponent\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  /**\n   * Currently active section of the app (e.g., 'home', 'settings').\n   */\n  currentSection: string = 'home';\n\n  /**\n   * Boolean indicating whether the app is being viewed on a mobile device.\n   */\n  isMobile: boolean = false;\n\n  /**\n   * Boolean indicating whether the current route is the root/expenses page.\n   */\n  isExpenseRoute = false;\n\n  /**\n   * Boolean indicating whether the current route is the music page.\n   */\n  isMusicRoute = false;\n\n  /**\n   * Constructor for AppComponent.\n   * Initializes route tracking, section updates, PWA update listener, and services.\n   * \n   * @param userService Service for managing user preferences\n   * @param loader Global loader overlay service\n   * @param sectionService Service to track current section changes\n   * @param storageService Local storage schema sync service\n   * @param router Angular Router to track route changes\n   * @param postApiService Backend API post service\n   * @param swUpdate Service Worker update manager\n   * @param platformId Angular platform ID to check if running in browser\n   */\n  constructor(\n    public userService: UserService,\n    private loader: GlobalLoaderService,\n    private sectionService: SectionService,\n    private storageService: StorageService,\n    private router: Router,\n    private postApiService: PostApiService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n\n    // Track current section name\n    this.sectionService.currentSection$.subscribe(section => {\n      this.currentSection = section;\n    });\n\n    // Track route changes to detect page-specific routes\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: any) => {\n        const url = event.urlAfterRedirects || event.url;\n        this.isExpenseRoute = url === '/';\n        this.isMusicRoute = url.startsWith('/music');\n      });\n  }\n\n  /**\n   * Angular lifecycle hook called after component initialization.\n   * Applies theme, syncs schema, sets user ID, and shows loader.\n   */\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = window.innerWidth  {\n        this.loader.hide();\n      }, 500);\n\n      // Sync schema for stored data\n      this.storageService.syncCategoriesWithSchema();\n      this.storageService.syncExpensesWithSchema();\n      this.storageService.syncUserWithSchema();\n      this.storageService.syncBudgetWithSchema();\n\n      // Apply saved theme mode\n      const savedTheme = this.userService.getValue('theme_mode');\n      if (savedTheme === 'dark') {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n\n      // Ensure user ID exists\n      let userId = this.userService.getValue('id');\n      if (!userId) {\n        userId = this.generateUserId();\n        this.userService.update('id', userId);\n      } else {\n        this.postApiService.postUserData();\n      }\n    }\n  }\n\n  /**\n   * Event listener for window resize to update mobile view detection.\n   * @param event Resize event object\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.isMobile = event.target.innerWidth \n    \n\n    \n        \n  \n  \n    \n    \n      \n      \n        \n          \n          \n            \n          \n          \n          \n          \n          \n          \n          \n          \n          \n        \n      \n    \n    \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .mobile-slide-up {\n    animation: slideUp 0.3s ease-out forwards;\n}\n\n@keyframes slideUp {\n    from {\n        transform: translateY(100%);\n        opacity: 0;\n    }\n\n    to {\n        transform: translateY(0);\n        opacity: 1;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppVersionService.html":{"url":"injectables/AppVersionService.html","title":"injectable - AppVersionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppVersionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/app-version/app-version.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to provide the current application version.\nThis version is typically injected from the environment configuration.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for AppVersionService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getVersion\n                        \n                    \n                \n            \n            \n                \ngetVersion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/app-version/app-version.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the current application version.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                A string representing the app version\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.applicationVersion\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/app-version/app-version.service.ts:17\n                        \n                    \n\n            \n                \n                    Stores the application version from the environment file.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service to provide the current application version.\n * \n * This version is typically injected from the environment configuration.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppVersionService {\n\n  /**\n   * Stores the application version from the environment file.\n   */\n  private readonly version: string = environment.applicationVersion;\n\n  /**\n   * Constructor for AppVersionService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the current application version.\n   * \n   * @returns A string representing the app version\n   */\n  getVersion(): string {\n    return this.version;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Budget.html":{"url":"interfaces/Budget.html","title":"interface - Budget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Budget\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            budget_id\n                                        \n                                \n                                \n                                        \n                                            fromDate\n                                        \n                                \n                                \n                                        \n                                            toDate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        budget_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        budget_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fromDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fromDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BudgetComponent.html":{"url":"components/BudgetComponent.html","title":"component - BudgetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/budget/budget.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-budget\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./budget.component.html\n            \n\n\n\n            \n                styleUrl\n                ./budget.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animatedBudgetProgress\n                            \n                            \n                                avgAllowedPerDay\n                            \n                            \n                                avgSpentPerDay\n                            \n                            \n                                budgetColorClass\n                            \n                            \n                                budgetForm\n                            \n                            \n                                budgetMessage\n                            \n                            \n                                budgetProgress\n                            \n                            \n                                budgets\n                            \n                            \n                                currency\n                            \n                            \n                                displayedPercentage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isEditMode\n                            \n                            \n                                latestBudget\n                            \n                            \n                                showBudgetSection\n                            \n                            \n                                showModal\n                            \n                            \n                                suggestedPerDay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animatePercentage\n                            \n                            \n                                calculateBudgetProgress\n                            \n                            \n                                closeModal\n                            \n                            \n                                createForm\n                            \n                            \n                                deleteBudget\n                            \n                            \n                                loadBudgets\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openEditModal\n                            \n                            \n                                openModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, budgetService: BudgetService, toastService: ToastService, fb: FormBuilder, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/budget/budget.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        budgetService\n                                                  \n                                                        \n                                                                        BudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animatePercentage\n                        \n                    \n                \n            \n            \n                \nanimatePercentage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calculateBudgetProgress\n                        \n                    \n                \n            \n            \n                \ncalculateBudgetProgress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createForm\n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     FormGroup\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBudget\n                        \n                    \n                \n            \n            \n                \ndeleteBudget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:192\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBudgets\n                        \n                    \n                \n            \n            \n                \nloadBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditModal\n                        \n                    \n                \n            \n            \n                \nopenEditModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/budget/budget.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animatedBudgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgAllowedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        avgSpentPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetColorClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'bg-green-500'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgetProgress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        budgets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedPercentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        latestBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Budget\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showBudgetSection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        suggestedPerDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/budget/budget.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { Budget, BudgetService } from '../../service/localStorage/budget.service';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../service/toast/toast.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\nexport type ChartOptions = {\n  series: ApexNonAxisChartSeries;\n  chart: ApexChart;\n  labels: string[];\n  plotOptions: ApexPlotOptions;\n};\n@Component({\n  selector: 'app-budget',\n  standalone: true,\n  imports: [ReactiveFormsModule,\n    CommonModule],\n  templateUrl: './budget.component.html',\n  styleUrl: './budget.component.css'\n})\nexport class BudgetComponent implements OnInit {\n  budgetForm: FormGroup;\n  budgets: Budget[] = [];\n  showModal = false;\n  showBudgetSection = false;\n  latestBudget!: Budget;\n  budgetProgress = 0;\n  budgetColorClass = 'bg-green-500';\n  budgetMessage = '';\n  avgAllowedPerDay = 0;\n  avgSpentPerDay = 0;\n  suggestedPerDay = 0;\n  isEditMode = false;\n  currency: string | null;\n  isDarkMode: boolean = false;\n  animatedBudgetProgress = 0;\n  displayedPercentage = 0;\n\n\n  constructor(\n    private expenseService: ExpenseService,\n    private budgetService: BudgetService,\n    private toastService: ToastService,\n    private fb: FormBuilder,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n    this.budgetForm = this.createForm();\n    const savedTheme = this.userService.getValue('theme_mode') ?? 'light';\n    if (savedTheme === 'dark') {\n      this.isDarkMode = true;\n    }\n    else {\n      this.isDarkMode = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.loadBudgets();\n  }\n\n  createForm(): FormGroup {\n    return this.fb.group({\n      amount: ['', [Validators.required, Validators.min(0)]],\n      fromDate: ['', Validators.required],\n      toDate: ['', Validators.required],\n    });\n  }\n\n  openModal(): void {\n    this.budgetForm.reset();\n    this.isEditMode = false;\n    this.showModal = true;\n  }\n\n  openEditModal(): void {\n    this.isEditMode = true;\n    this.showModal = true;\n    this.budgetForm.patchValue({\n      amount: this.latestBudget.amount,\n      fromDate: this.latestBudget.fromDate,\n      toDate: this.latestBudget.toDate,\n    });\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n  }\n\n  onSubmit() {\n    if (this.budgetForm.invalid) {\n      this.budgetForm.markAllAsTouched();\n      return;\n    }\n\n    const data = this.budgetForm.value;\n\n    try {\n      if (this.isEditMode) {\n        this.budgetService.update(this.latestBudget.budget_id, data);\n        this.toastService.show('Budget updated successfully!', 'success');\n      } else {\n        this.budgetService.add(data);\n        this.toastService.show('Budget added successfully!', 'success');\n      }\n\n      this.loadBudgets();\n      this.closeModal();\n    } catch (error) {\n      console.error('Submit failed:', error);\n      this.toastService.show('Error saving budget.', 'error');\n    }\n  }\n\n  loadBudgets() {\n    this.budgets = this.budgetService.getAll();\n    this.showBudgetSection = this.budgets.length > 0;\n\n    if (this.showBudgetSection) {\n      this.latestBudget = this.budgets[this.budgets.length - 1];\n      this.calculateBudgetProgress();\n    }\n  }\n\n  calculateBudgetProgress() {\n    const totalBudget = parseFloat(this.latestBudget.amount.toString());\n    const fromDate = new Date(this.latestBudget.fromDate);\n    const toDate = new Date(this.latestBudget.toDate);\n\n    const expenses: Expense[] = this.expenseService.getAll();\n    const expensesInRange = expenses.filter((exp: any) => {\n      const date = new Date(exp.date);\n      return date >= fromDate && date  sum + parseFloat(exp.amount), 0);\n    const percentage = Math.min((spent / totalBudget) * 100, 100);\n    const remaining = Math.max(totalBudget - spent, 0);\n    this.budgetProgress = percentage;\n    this.animatedBudgetProgress = 0;\n    this.displayedPercentage = 0;\n\n    setTimeout(() => {\n      this.animatedBudgetProgress = this.budgetProgress;\n    }, 100);\n\n    this.animatePercentage();\n\n    // Color class logic\n    if (percentage > 80) this.budgetColorClass = 'bg-red-500';\n    else if (percentage > 50) this.budgetColorClass = 'bg-yellow-500';\n    else if (percentage > 30) this.budgetColorClass = 'bg-blue-500';\n    else this.budgetColorClass = 'bg-green-500';\n\n    // Budget message\n    if (spent > totalBudget) {\n      this.budgetMessage = `⚠️ You have exceeded your budget! You spent ${this.currency}${spent.toFixed(2)} which is ${this.currency}${(spent - totalBudget).toFixed(2)} over the limit set between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 😰`;\n    } else {\n      this.budgetMessage = `✅ You have spent ${this.currency}${spent.toFixed(2)} out of ${this.currency}${totalBudget.toFixed(2)} between ${this.latestBudget.fromDate} and ${this.latestBudget.toDate}. 💸 Remaining: ${this.currency}${remaining.toFixed(2)}`;\n    }\n\n    // Average insights\n    const totalDays = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)) + 1;\n    const today = new Date();\n    const elapsedDays = Math.max(Math.ceil((today.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24)), 1);\n    const remainingDays = Math.max(totalDays - elapsedDays, 1);\n\n    this.avgAllowedPerDay = totalBudget / totalDays;\n    this.avgSpentPerDay = spent / elapsedDays;\n    this.suggestedPerDay = remaining / remainingDays;\n  }\n\n  animatePercentage() {\n    const duration = 800;\n    const steps = 40;\n    const increment = this.budgetProgress / steps;\n    let currentStep = 0;\n\n    const interval = setInterval(() => {\n      currentStep++;\n      this.displayedPercentage = +(increment * currentStep).toFixed(1);\n\n      if (currentStep >= steps) {\n        this.displayedPercentage = +this.budgetProgress.toFixed(1);\n        clearInterval(interval);\n      }\n    }, duration / steps);\n  }\n\n  deleteBudget() {\n    if (confirm(\"Are you sure you want to delete this budget?\")) {\n      this.budgetService.delete(this.latestBudget.budget_id);\n      this.toastService.show(\"Budget deleted successfully\", 'success');\n      this.closeModal();\n    }\n    this.loadBudgets();\n  }\n}\n    \n\n    \n        \n\n    \n    \n        \n            💰 Budget Progress\n            \n                \n\n                    \n                        {{ displayedPercentage.toFixed(1) }}%\n                    \n\n                \n            \n\n            \n                {{ budgetMessage }}\n            \n\n            \n                \n                    Avg Allowed / Day\n                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}\n                \n                \n                    Spent / Day\n                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}\n                \n                \n                    Suggested / Day\n                    {{currency}}{{ suggestedPerDay.toFixed(2) }}\n                \n            \n        \n        \n            \n                \n                    Update\n                \n                \n                    Delete\n                \n            \n        \n\n    \n\n    \n    \n        \n            \n            \n                \n            \n\n            \n            \n                \n            \n            \n                ➕ Add Budget\n            \n        \n    \n\n    \n    \n        \n            \n                \n                    {{ isEditMode ? 'Update Budget' : 'Add Budget' }}\n                \n\n                &times;\n            \n            \n                Amount\n                \n                \n                    Amount cannot be negative\n                \n                \n                    Amount is required\n                \n                From Date\n                \n                \n                    From Date is required\n                \n                To Date\n                \n                \n                    To Date is required\n                \n                \n                    Cancel\n                    Save\n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            💰 Budget Progress                                                                        {{ displayedPercentage.toFixed(1) }}%                                                                            {{ budgetMessage }}                                                            Avg Allowed / Day                    {{currency}}{{ avgAllowedPerDay.toFixed(2) }}                                                    Spent / Day                    {{currency}}{{ avgSpentPerDay.toFixed(2) }}                                                    Suggested / Day                    {{currency}}{{ suggestedPerDay.toFixed(2) }}                                                                                            Update                                                    Delete                                                                                                                                                                                            ➕ Add Budget                                                                                        {{ isEditMode ? \\'Update Budget\\' : \\'Add Budget\\' }}                                ×                                        Amount                                                    Amount cannot be negative                                                    Amount is required                                From Date                                                    From Date is required                                To Date                                                    To Date is required                                                    Cancel                    Save                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BudgetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BudgetService.html":{"url":"injectables/BudgetService.html","title":"injectable - BudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/budget.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/budget.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(budget_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Budget[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(budget_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/budget.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                budget_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface Budget {\n  budget_id: string,\n  amount: number,\n  fromDate: string,\n  toDate: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n\n  constructor(\n    private storageService: StorageService\n  ) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getAll(): Budget[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllBudgets();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Budget[] = this.getAll();\n    const budget_id = crypto.randomUUID();\n    all.push({ ...data, budget_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  update(budget_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.map(item =>\n      item.budget_id === budget_id ? { ...item, ...newData } : item\n    );\n    all = all.map(item => (\n      { ...item, amount: Math.round(item.amount * 100) / 100 }\n    )\n    );\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n\n  delete(budget_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Budget[] = this.getAll();\n    all = all.filter(item => item.budget_id !== budget_id);\n    localStorage.setItem(this.storageService.getBudgetKey(), JSON.stringify(all));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalendarComponent.html":{"url":"components/CalendarComponent.html","title":"component - CalendarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CalendarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/calendar/calendar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calendar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./calendar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./calendar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendarDays\n                            \n                            \n                                calendarTitle\n                            \n                            \n                                currency\n                            \n                            \n                                currentMonth\n                            \n                            \n                                currentYear\n                            \n                            \n                                modalExpenses\n                            \n                            \n                                modalTitle\n                            \n                            \n                                showModal\n                            \n                            \n                                totalExpenses\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekDays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotalExpenses\n                            \n                            \n                                changeMonth\n                            \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openModal\n                            \n                            \n                                renderCalendar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotalExpenses\n                        \n                    \n                \n            \n            \n                \ncalculateTotalExpenses(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMonth\n                        \n                    \n                \n            \n            \n                \nchangeMonth(offset: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offset\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openModal\n                        \n                    \n                \n            \n            \n                \nopenModal(dateStr: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateStr\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderCalendar\n                        \n                    \n                \n            \n            \n                \nrenderCalendar(year: number, month: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/calendar/calendar.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        calendarDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMonth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getMonth()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentYear\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modalTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalExpenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n                    \n                \n                    \n                        \n                                Defined in src/app/features/calendar/calendar.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../service/localStorage/user.service';\n\n\n@Component({\n  selector: 'app-calendar',\n  imports: [CommonModule],\n  templateUrl: './calendar.component.html',\n  styleUrl: './calendar.component.css'\n})\n\nexport class CalendarComponent implements OnInit {\n  currentYear = new Date().getFullYear();\n  currentMonth = new Date().getMonth();\n  calendarTitle = '';\n  totalExpenses = 0;\n  calendarDays: any[] = [];\n  showModal = false;\n  modalTitle = '';\n  modalExpenses: any[] = [];\n  currency: string | null;\n  weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n  constructor(\n    private expenseService: ExpenseService,\n    public userService: UserService\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  changeMonth(offset: number): void {\n    this.currentMonth += offset;\n    if (this.currentMonth  11) {\n      this.currentMonth = 0;\n      this.currentYear++;\n    }\n    this.renderCalendar(this.currentYear, this.currentMonth);\n  }\n\n  renderCalendar(year: number, month: number): void {\n    this.calendarDays = [];\n    const today = new Date();\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthDays = new Date(year, month, 0).getDate();\n    const monthStr = String(month + 1).padStart(2, '0');\n    this.calendarTitle = `${new Date(year, month).toLocaleString('default', { month: 'long' })} ${year}`;\n\n    const fromDate = `${year}-${monthStr}-01`;\n    const toDate = `${year}-${monthStr}-${daysInMonth}`;\n    this.calculateTotalExpenses(fromDate, toDate);\n\n    // Previous month days\n    for (let i = firstDay - 1; i >= 0; i--) {\n      this.calendarDays.push({ label: prevMonthDays - i, classes: 'text-[var(--color-gray-500)] bg-[var(--color-surface)] opacity-50', isCurrentMonth: false });\n    }\n\n    // Current month days\n    for (let day = 1; day  sum + (Number(item.amount) || 0), 0);\n    } catch (e) {\n      console.error(\"Failed to fetch monthly data:\", e);\n      this.totalExpenses = 0;\n    }\n  }\n\n  openModal(dateStr: string): void {\n    try {\n      const expenses: Expense[] = this.expenseService.searchByDateRange(dateStr, dateStr);\n      this.modalExpenses = expenses || [];\n      const total = this.modalExpenses.reduce((acc, exp) => acc + parseInt(exp.amount || 0), 0);\n      this.modalTitle = `Expenses on ${dateStr}: ${total}`;\n      this.showModal = true;\n    } catch (err) {\n      console.error('Error loading expenses for date:', err);\n    }\n  }\n\n  closeModal(): void {\n    this.showModal = false;\n    this.modalExpenses = [];\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            &lt;\n            \n            Total Expenses: {{currency}} {{\n                    totalExpenses }}\n            \n            \n                &gt;\n        \n        \n            \n                {{ calendarTitle }}\n            \n\n            \n                {{ day }}\n            \n\n            \n                \n                    \n                        {{ day.label }}\n                    \n                \n            \n        \n    \n\n    \n    \n\n        \n            \n                {{ modalTitle }}\n                &times;\n            \n\n            \n                No expenses found for this\n                    date.\n                \n                    \n                        {{currency}} {{ exp.amount }}\n                        {{ exp.category_name || 'Uncategorized' }}\n                    \n                    \n                        Time: {{ exp.time }}\n                        Note: {{ exp.note }}\n                        Location: {{ exp.location }}\n                        Payment Mode: {{ exp.payment_mode }}\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Total Expenses: {{currency}} {{                    totalExpenses }}                                        >                                            {{ calendarTitle }}                                        {{ day }}                                                                                    {{ day.label }}                                                                                                        {{ modalTitle }}                ×                                        No expenses found for this                    date.                                                            {{currency}} {{ exp.amount }}                        {{ exp.category_name || \\'Uncategorized\\' }}                                                                Time: {{ exp.time }}                        Note: {{ exp.note }}                        Location: {{ exp.location }}                        Payment Mode: {{ exp.payment_mode }}                                                            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalendarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            expense_count\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDropdownComponent.html":{"url":"components/CategoryDropdownComponent.html","title":"component - CategoryDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/category-dropdown/category-dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Dropdown component for selecting an expense category.\nEmits selected category to the parent component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dropdown\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./category-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    \n                                categoryRef\n                            \n                            \n                                isCategoryDropdownOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadCategories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onDocumentClick\n                            \n                            \n                                selectCategory\n                            \n                            \n                                toggleCategoryDropdown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryType\n                            \n                            \n                                dropdownMaxHeightClass\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                categorySelected\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor to inject services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage categories\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage user data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"custom\" | \"all\"\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:52\n                            \n                        \n                \n                    \n                        Optional categoryType to filter categories\n\n'default': only default categories\n'custom': only custom categories\n'all': all categories (default)\n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropdownMaxHeightClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'max-h-40'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:43\n                            \n                        \n                \n                    \n                        Optional max-height Tailwind class for scrollable dropdown\nDefault is 'max-h-40' (10rem)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedCategoryName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:36\n                            \n                        \n                \n                    \n                        Name of the currently selected category (display only)\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        categorySelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/category-dropdown/category-dropdown.component.ts:30\n                            \n                        \n                \n                    \n                        Emits the selected category to parent\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCategories\n                        \n                    \n                \n            \n            \n                \nloadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Loads sorted categories from service\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Initializes and loads categories\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDocumentClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDocumentClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Listens to clicks outside dropdown to close it\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Click event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCategory\n                        \n                    \n                \n            \n            \n                \nselectCategory(category: Category)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Handles category selection from the list\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            Category\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The selected category\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleCategoryDropdown\n                        \n                    \n                \n            \n            \n                \ntoggleCategoryDropdown()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/category-dropdown/category-dropdown.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Toggles category dropdown visibility\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:55\n                        \n                    \n\n            \n                \n                    List of categories to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        categoryRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categorydownRef')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:61\n                        \n                    \n\n            \n                \n                    Reference to the dropdown DOM element\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCategoryDropdownOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/category-dropdown/category-dropdown.component.ts:58\n                        \n                    \n\n            \n                \n                    Dropdown visibility state\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Category, CategoryService } from '../../service/localStorage/category.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\n/**\n * Dropdown component for selecting an expense category.\n * Emits selected category to the parent component.\n */\n@Component({\n  selector: 'app-category-dropdown',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './category-dropdown.component.html',\n  styleUrls: ['./category-dropdown.component.css']\n})\nexport class CategoryDropdownComponent {\n  /**\n   * Emits the selected category to parent\n   * @type {EventEmitter}\n   */\n  @Output() categorySelected = new EventEmitter();\n\n  /**\n   * Name of the currently selected category (display only)\n   * @type {string}\n   */\n  @Input() selectedCategoryName: string = 'Select Category';\n\n  /**\n   * Optional max-height Tailwind class for scrollable dropdown\n   * @type {string}\n   * Default is 'max-h-40' (10rem)\n   */\n  @Input() dropdownMaxHeightClass: string = 'max-h-40';\n\n  /**\n   * Optional categoryType to filter categories\n   * @type {'default' | 'custom' | 'all'}\n   * - 'default': only default categories\n   * - 'custom': only custom categories\n   * - 'all': all categories (default)\n   */\n  @Input() categoryType: 'default' | 'custom' | 'all' = 'all';\n\n  /** List of categories to display */\n  categories: Category[] = [];\n\n  /** Dropdown visibility state */\n  isCategoryDropdownOpen: boolean = false;\n\n  /** Reference to the dropdown DOM element */\n  @ViewChild('categorydownRef') categoryRef!: ElementRef;\n\n  /**\n   * Constructor to inject services\n   * @param categoryService Service to manage categories\n   * @param userService Service to manage user data\n   */\n  constructor(private categoryService: CategoryService, private userService: UserService) { }\n\n  /** \n   * Initializes and loads categories\n   */\n  ngOnInit(): void {\n    this.loadCategories();\n  }\n\n  /** Loads sorted categories from service */\n  loadCategories(): void {\n    this.categories = this.categoryService.getSortedCategoriesByExpenseCount();\n    if (this.categoryType !== 'all') {\n      if (this.categoryType === 'custom') {\n        let userId = this.userService.getValue('id') || '0';\n        this.categories = this.categories.filter(category =>\n          category.user_id === userId\n        );\n      }\n      else {\n        this.categories = this.categories.filter(category =>\n          category.user_id === '0'\n        );\n      }\n    }\n  }\n\n  /** Toggles category dropdown visibility */\n  toggleCategoryDropdown(): void {\n    this.isCategoryDropdownOpen = !this.isCategoryDropdownOpen;\n  }\n\n  /**\n   * Handles category selection from the list\n   * @param category The selected category\n   */\n  selectCategory(category: Category): void {\n    this.categorySelected.emit(category);\n    this.selectedCategoryName = category.name;\n    this.isCategoryDropdownOpen = false;\n  }\n\n  /**\n   * Listens to clicks outside dropdown to close it\n   * @param event Click event\n   */\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: MouseEvent): void {\n    const target = event.target as HTMLElement;\n    if (\n      this.isCategoryDropdownOpen &&\n      this.categoryRef &&\n      !this.categoryRef.nativeElement.contains(target)\n    ) {\n      this.isCategoryDropdownOpen = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        {{ selectedCategoryName }}\n    \n    \n        \n            {{ cat.name }} {{ cat.icon }}\n         \n    \n\n    \n\n    \n                \n                    ./category-dropdown.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ selectedCategoryName }}                            {{ cat.name }} {{ cat.icon }}             '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getSortedCategoriesByExpenseCount\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/category.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(category_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSortedCategoriesByExpenseCount\n                        \n                    \n                \n            \n            \n                \ngetSortedCategoriesByExpenseCount()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Category[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(category_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/category.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Expense } from './expense.service';\nimport { StorageService } from './storage.service';\nimport { UserService } from './user.service';\n\nexport interface Category {\n  category_id: string;\n  name: string;\n  icon: string;\n  color: string;\n  user_id: string;\n  is_active: string,\n\n  // additional field not a part of table\n  expense_count: number;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class CategoryService {\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  constructor(private storageService: StorageService, private userService: UserService) { };\n\n  getSortedCategoriesByExpenseCount(): Category[] {\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n\n    const expenseCountMap = expenses.reduce((map, expense) => {\n      map[expense.category_id] = (map[expense.category_id] || 0) + 1;\n      return map;\n    }, {} as { [key: string]: number });\n\n    return categories\n      .map((category) => ({\n        ...category,\n        expense_count: expenseCountMap[category.category_id] || 0\n      }))\n      .sort((a, b) => b.expense_count - a.expense_count || a.name.localeCompare(b.name));\n  }\n\n  getAll(): Category[] {\n    if (!this.isBrowser()) return [];\n    return this.storageService.getAllCategories();\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    const category_id = crypto.randomUUID();\n    const user_id = this.userService.getValue('id') || '0';\n\n    all.push({ ...data, category_id, user_id });\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  update(category_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Category[] = this.getAll();\n    all = all.map(item => item.category_id === category_id ? { ...item, ...newData } : item);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(all));\n  }\n\n  delete(category_id: string): void {\n    if (!this.isBrowser()) return;\n    const all: Category[] = this.getAll();\n    // Check if the category actually exists\n    const categoryExists = all.some(c => c.category_id === category_id);\n    if (!categoryExists) {\n      console.warn(`Category with ID ${category_id} not found.`);\n      return;\n    }\n\n    const updated = all.filter(c => c.category_id !== category_id);\n    localStorage.setItem(this.storageService.getCategoryKey(), JSON.stringify(updated));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChatMessage.html":{"url":"interfaces/ChatMessage.html","title":"interface - ChatMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChatMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            parts\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        parts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parts:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     \"user\" | \"model\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"user\" | \"model\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/config/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service responsible for providing configuration values across the application,\nsuch as API base URLs based on the current environment (local or live).\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                developmentEnvironment\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getapiUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/config/config.service.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getapiUrl\n                        \n                    \n                \n            \n            \n                \ngetapiUrl()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/util/config/config.service.ts:29\n                        \n                    \n\n\n            \n                \n                        Returns the appropriate API base URL based on the development environment.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The API base URL for the current environment.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        developmentEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : environment.developmentEnvironment\n                    \n                \n                    \n                        \n                                Defined in src/app/service/util/config/config.service.ts:18\n                        \n                    \n\n            \n                \n                    The current environment setting.\nPossible values: 'local' | 'live'.\nChange this value to switch API endpoints.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { environment } from '../../../../environments/environments';\n\n/**\n * Service responsible for providing configuration values across the application,\n * such as API base URLs based on the current environment (local or live).\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n\n  /**\n   * The current environment setting.\n   * Possible values: 'local' | 'live'.\n   * Change this value to switch API endpoints.\n   */\n  private readonly developmentEnvironment: string = environment.developmentEnvironment;\n  /**\n   * Creates an instance of ConfigService.\n   */\n  constructor() { }\n\n  /**\n   * Returns the appropriate API base URL based on the development environment.\n   *\n   * @returns {string} The API base URL for the current environment.\n   */\n  getapiUrl(): string {\n    if (this.developmentEnvironment === \"local\") {\n      return \"http://localhost:8000\";\n    }\n    else if (this.developmentEnvironment === \"live\") {\n      return \"https://exwiseapi.onrender.com\";\n    }\n    else {\n      return \"http://localhost:8000\";\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomModalComponent.html":{"url":"components/CustomModalComponent.html","title":"component - CustomModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CustomModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/custom-modal/custom-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-custom-modal\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./custom-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalId\n                            \n                            \n                                onClose\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onClose\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => { }\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Modal Title'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/custom-modal/custom-modal.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-custom-modal',\n  templateUrl: './custom-modal.component.html',\n  standalone: true,\n  imports: []\n})\nexport class CustomModalComponent {\n  @Input() modalId!: string;\n  @Input() title: string = 'Modal Title';\n  @Input() onClose: () => void = () => { };\n}\n\n    \n\n    \n        \n    \n        {{ title }}\n        &times;\n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}        ×        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Expense.html":{"url":"interfaces/Expense.html","title":"interface - Expense","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Expense\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            category_color\n                                        \n                                \n                                \n                                        \n                                            category_icon\n                                        \n                                \n                                \n                                        \n                                            category_id\n                                        \n                                \n                                \n                                        \n                                            category_name\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            expense_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isExtraSpending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_mode\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expense_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expense_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isExtraSpending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isExtraSpending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseDetailsModalComponent.html":{"url":"components/ExpenseDetailsModalComponent.html","title":"component - ExpenseDetailsModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseDetailsModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-details-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                                CategoryDropdownComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-details-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editForm\n                            \n                            \n                                selectedCategoryName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategorySelected\n                            \n                            \n                                onDelete\n                            \n                            \n                                submitEdit\n                            \n                            \n                                toggleEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                isEditOpen\n                            \n                            \n                                selectedExpense\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEditOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedExpense\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeModal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategorySelected\n                        \n                    \n                \n            \n            \n                \nonCategorySelected(category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitEdit\n                        \n                    \n                \n            \n            \n                \nsubmitEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEdit\n                        \n                    \n                \n            \n            \n                \ntoggleEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Select Category'\n                    \n                \n                    \n                        \n                                Defined in src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CategoryDropdownComponent } from \"../../category-dropdown/category-dropdown.component\";\n\n@Component({\n  selector: 'app-expense-details-modal',\n  templateUrl: './expense-details-modal.component.html',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, CategoryDropdownComponent],\n})\nexport class ExpenseDetailsModalComponent implements OnInit {\n  @Input() selectedExpense: any;\n  @Input() currency: string | null = '';\n  @Input() isEditOpen: boolean = false;\n  @Output() closeModal = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() edit = new EventEmitter();\n  selectedCategoryName: string = 'Select Category';\n  editForm!: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n  ) {\n    this.initForm();\n  }\n\n  ngOnInit() { }\n\n  initForm() {\n    this.editForm = this.fb.group({\n      amount: [this.selectedExpense?.amount || '', [Validators.required]],\n      category_id: [this.selectedExpense?.category_id || '', Validators.required],\n      date: [this.selectedExpense?.date || '', Validators.required],\n      time: [this.selectedExpense?.time || '', Validators.required],\n      note: [this.selectedExpense?.note || ''],\n      payment_mode: [this.selectedExpense?.payment_mode || '', Validators.required],\n      location: [this.selectedExpense?.location || ''],\n      isExtraSpending: [this.selectedExpense?.isExtraSpending || false]\n    });\n  }\n\n  onCategorySelected(category: any) {\n    this.editForm.patchValue({ category_id: category.category_id });\n  }\n\n  toggleEdit() {\n    this.isEditOpen = !this.isEditOpen;\n    if (this.isEditOpen) {\n      this.selectedCategoryName = this.selectedExpense.category_name;\n      this.initForm();\n    }\n  }\n\n  submitEdit() {\n    if (this.editForm.valid) {\n      const updatedExpense = {\n        ...this.selectedExpense,\n        ...this.editForm.value,\n      };\n      this.edit.emit(updatedExpense);\n      this.toggleEdit();\n    }\n  }\n\n  close() {\n    this.closeModal.emit();\n  }\n\n  onDelete() {\n    this.delete.emit(this.selectedExpense.expense_id);\n  }\n}\n    \n\n    \n        \n    \n\n        \n        \n            \n                {{ isEditOpen ? 'Edit Expense' : 'Expense Details' }}\n            \n            \n                \n            \n        \n\n        \n        \n            \n            \n                Amount: {{ currency }} {{ selectedExpense.amount }}\n                Category: {{ selectedExpense.category_name || 'Uncategorized' }}\n                Date: {{ selectedExpense.date }}\n                Time: {{ selectedExpense.time }}\n                Note: {{ selectedExpense.note }}\n                Payment Mode: {{ selectedExpense.payment_mode }}\n                Location: {{ selectedExpense.location }}\n                Extra Spending: Yes\n            \n\n            \n            \n                \n                \n                    \n                    \n                        Amount\n                        \n                        \n                            Amount cannot be negative\n                        \n                        \n                            Amount is required\n                        \n                    \n\n                    \n                    \n                        Category\n                        \n                        \n                            Category is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Date\n                        \n                        \n                            Date is required\n                        \n                    \n                    \n                        Time\n                        \n                        \n                            Time is required\n                        \n                    \n                \n\n                \n                \n                    \n                        Payment Mode\n                        \n                            UPI\n                            Cash\n                            Others\n                        \n                    \n\n                    \n                        Location\n                        \n                        \n                            Location cannot be more than 50 characters\n                        \n                    \n                \n\n                \n                \n                    Note\n                    \n                    \n                        Note cannot be more than 100 characters\n                    \n                \n\n                \n                \n                    \n                        Mark as Extra Spending\n                        \n                            \n                            \n                            \n                            \n                        \n                    \n                \n\n            \n        \n\n        \n        \n            Close\n            Delete\n            Save\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                {{ isEditOpen ? \\'Edit Expense\\' : \\'Expense Details\\' }}                                                                                                                    Amount: {{ currency }} {{ selectedExpense.amount }}                Category: {{ selectedExpense.category_name || \\'Uncategorized\\' }}                Date: {{ selectedExpense.date }}                Time: {{ selectedExpense.time }}                Note: {{ selectedExpense.note }}                Payment Mode: {{ selectedExpense.payment_mode }}                Location: {{ selectedExpense.location }}                Extra Spending: Yes                                                                                                                                    Amount                                                                            Amount cannot be negative                                                                            Amount is required                                                                                                            Category                                                                            Category is required                                                                                                                                        Date                                                                            Date is required                                                                                        Time                                                                            Time is required                                                                                                                                        Payment Mode                                                    UPI                            Cash                            Others                                                                                        Location                                                                            Location cannot be more than 50 characters                                                                                                                Note                                                                Note cannot be more than 100 characters                                                                                                                Mark as Extra Spending                                                                                                                                                                                                                                                    Close            Delete            Save            '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseDetailsModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpenseListComponent.html":{"url":"components/ExpenseListComponent.html","title":"component - ExpenseListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ExpenseListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/list-expenses/expense-list/expense-list.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-expense-list\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./expense-list.component.html\n            \n\n\n\n            \n                styleUrl\n                ./expense-list.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                darkenColor\n                            \n                            \n                                getFormattedDate\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                expenseSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currency\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        expenses\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        expenseSelected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        darkenColor\n                        \n                    \n                \n            \n            \n                \ndarkenColor(color: string, percent: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                color\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                percent\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormattedDate\n                        \n                    \n                \n            \n            \n                \ngetFormattedDate(exp: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exp\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(expense: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/list-expenses/expense-list/expense-list.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-expense-list',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './expense-list.component.html',\n  styleUrl: './expense-list.component.css'\n})\n\nexport class ExpenseListComponent {\n  @Input() expenses: any[] = [];\n  @Input() currency: string | null;\n  @Output() expenseSelected = new EventEmitter();\n\n  constructor(\n  ) {\n    this.currency = '';\n\n  }\n\n  onSelect(expense: any) {\n    this.expenseSelected.emit(expense);\n  }\n\n  getFormattedDate(exp: any): string {\n    const date = new Date(exp.date);\n    return date.toLocaleDateString();\n  }\n\n  darkenColor(color: string, percent: number): string {\n    try {\n      const num = parseInt(color.replace('#', ''), 16);\n      const amt = Math.round(2.55 * percent * 100);\n      const R = (num >> 16) - amt;\n      const G = ((num >> 8) & 0x00FF) - amt;\n      const B = (num & 0x0000FF) - amt;\n\n      return `rgb(${Math.max(R, 0)}, ${Math.max(G, 0)}, ${Math.max(B, 0)})`;\n    } catch {\n      return color;\n    }\n  }\n}\n    \n\n    \n        \n    \n        \n        \n            \n\n            \n                {{ exp.category_icon }}\n            \n\n            \n                \n                    {{ exp.category_name || 'Uncategorized' }}\n                \n                \n                    {{ getFormattedDate(exp) }}\n\n                \n            \n        \n        \n        \n            \n                {{ currency }} {{ exp.amount }}\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{ exp.category_icon }}                                                            {{ exp.category_name || \\'Uncategorized\\' }}                                                    {{ getFormattedDate(exp) }}                                                                                {{ currency }} {{ exp.amount }}                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpenseListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExpenseService.html":{"url":"injectables/ExpenseService.html","title":"injectable - ExpenseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExpenseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/expense.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByExpenseId\n                            \n                            \n                                getLocalISOString\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                searchByDateRange\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/expense.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(data: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Expense[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByExpenseId\n                        \n                    \n                \n            \n            \n                \ngetByExpenseId(expense_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalISOString\n                        \n                    \n                \n            \n            \n                \ngetLocalISOString()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByDateRange\n                        \n                    \n                \n            \n            \n                \nsearchByDateRange(fromDate: string, toDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fromDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                toDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Expense[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(expense_id: string, newData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/expense.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                expense_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Category } from './category.service';\nimport { StorageService } from './storage.service';\n\n\nexport interface Expense {\n  expense_id: string;\n  amount: number;\n  category_id: string;\n  date: string;\n  time: string;\n  note?: string;\n  payment_mode: string;\n  location?: string;\n  isExtraSpending?: boolean;\n  // additional field not a part of table\n  category_name: string;\n  category_icon: string;\n  category_color: string;\n\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ExpenseService {\n\n  constructor(private storageService: StorageService) { }\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  getLocalISOString(): string {\n    const now = new Date();\n    const pad = (n: number) => n.toString().padStart(2, '0');\n\n    return `${now.getFullYear()}-${pad(now.getMonth() + 1)}-${pad(now.getDate())}T${pad(now.getHours())}:${pad(now.getMinutes())}:${pad(now.getSeconds())}`;\n  }\n\n  getAll(): Expense[] {\n    if (!this.isBrowser()) return [];\n    const expenses: Expense[] = this.storageService.getAllExpenses();\n    const categories: Category[] = this.storageService.getAllCategories();\n    const formattedExpense = expenses.map(item => ({\n      ...item,\n      amount: Math.round(item.amount * 100) / 100,\n    }));\n    return formattedExpense\n      .map(e => {\n        const cat = categories.find(c => c.category_id === e.category_id);\n        return {\n          ...e,\n          category_name: cat?.name || '',\n          category_icon: cat?.icon || '',\n          category_color: cat?.color || ''\n        };\n      })\n      .sort((a, b) => {\n        const dateA = new Date(`${a.date}T${a.time}`);\n        const dateB = new Date(`${b.date}T${b.time}`);\n        return dateB.getTime() - dateA.getTime();\n      });\n  }\n\n  add(data: Omit): void {\n    if (!this.isBrowser()) return;\n    const all: Expense[] = this.getAll();\n    const expense_id = crypto.randomUUID();\n    all.push({ ...data, expense_id, amount: Math.round(data.amount * 100) / 100 });\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  update(expense_id: string, newData: Partial): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.map(item => item.expense_id === expense_id ? { ...item, ...newData } : item);\n    all = all.map(item => ({ ...item, amount: Math.round(item.amount * 100) / 100 }));\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  getByExpenseId(expense_id: string): Expense | null {\n    if (!this.isBrowser()) return null;\n    return this.getAll().find(item => item.expense_id === expense_id) || null;\n  }\n\n  delete(expense_id: string): void {\n    if (!this.isBrowser()) return;\n    let all: Expense[] = this.getAll();\n    all = all.filter(item => item.expense_id !== expense_id);\n    localStorage.setItem(this.storageService.getExpenseKey(), JSON.stringify(all));\n  }\n\n  searchByDateRange(fromDate: string, toDate: string): Expense[] {\n    if (!this.isBrowser()) return [];\n    const all: Expense[] = this.getAll();\n    const from = new Date(fromDate);\n    const to = new Date(toDate);\n\n    return all.filter(item => {\n      const itemDate = new Date(item.date);\n      itemDate.setHours(0, 0, 0, 0);\n      from.setHours(0, 0, 0, 0);\n      to.setHours(23, 59, 59, 999);\n      return itemDate >= from && itemDate \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                appVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        appVersion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/footer/footer.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AppVersionService } from '../../service/util/app-version/app-version.service';\n@Component({\n  selector: 'app-footer',\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent {\n  appVersion: string = \"\";\n  constructor(private appVersionService: AppVersionService) {\n    this.appVersion = this.appVersionService.getVersion();\n  }\n}\n\n    \n\n    \n        \n    © 2025 exwise. All rights reserved. v{{appVersion}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    © 2025 exwise. All rights reserved. v{{appVersion}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeminiApiService.html":{"url":"injectables/GeminiApiService.html","title":"injectable - GeminiApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeminiApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/gemini-api/gemini-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateExpenseAnalysisPrompt\n                            \n                            \n                                getLast30DaysExpenses\n                            \n                            \n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateExpenseAnalysisPrompt\n                        \n                    \n                \n            \n            \n                \ngenerateExpenseAnalysisPrompt(userQuery: string, last15DaysExpenses: Pick[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userQuery\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                last15DaysExpenses\n                                            \n                                                            Pick[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLast30DaysExpenses\n                        \n                    \n                \n            \n            \n                \ngetLast30DaysExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Pick[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResponse(prompt: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/gemini-api/gemini-api.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prompt\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/gemini-api/gemini-api.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\nimport { GlobalLoaderService } from '../global-loader/global-loader.service';\nimport { ExpenseService, Expense } from '../localStorage/expense.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeminiApiService {\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService, private expenseService: ExpenseService) { }\n\n  async getResponse(prompt: string): Promise {\n\n    this.globalLoaderService.show(\"📊 Analyzing your expenses..\");\n    const expenses = this.getLast30DaysExpenses();\n    const updatedPrompt = this.generateExpenseAnalysisPrompt(prompt, expenses);\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: [{\n        parts: [{ text: updatedPrompt }]\n      }]\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      this.globalLoaderService.hide();\n      return parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n    } catch (err) {\n      this.globalLoaderService.hide();\n      console.error('Gemini API error:', err);\n      return 'Error fetching response' + err;\n    }\n  }\n\n  getLast30DaysExpenses(): Pick[] {\n    const toDate = new Date();\n    const fromDate = new Date();\n    fromDate.setDate(toDate.getDate() - 29);\n\n    const results = this.expenseService.searchByDateRange(fromDate.toISOString(), toDate.toISOString());\n\n    return results.map(exp => ({\n      amount: exp.amount,\n      note: exp.note,\n      location: exp.location,\n      date: exp.date + \"T\" + exp.time,\n      category_name: exp.category_name,\n      payment_mode: exp.payment_mode,\n      isExtraSpending: exp.isExtraSpending\n    }));\n  }\n\n  generateExpenseAnalysisPrompt(\n    userQuery: string,\n    last15DaysExpenses: Pick[]\n  ): string {\n    const baseInstructions = `\nYou are a polite and helpful financial assistant AI. Your sole purpose is to help the user **analyze and predict** their expenses from the last 30 days.\n\n🎯 Responsibilities:\n- Use only the provided expense data for any analysis, answers or predictions.\n- Predict the user’s expenses by identifying trends, patterns, or averages from the last 30 days.\n- Politely respond to greetings like “Hi”, “Hello”, or “How are you?” with a short, friendly message.\n- If the user asks a question unrelated to the expense data, you must not answer it.\n\n💬 Response Format:\n- Reply in a friendly and human-like tone.\n- Use emojis where helpful.\n- Do NOT return raw JSON, or code blocks.\n- Structure your response using bullet points, short sentences, or paragraph style that's visually appealing.\n- Do not add any extra message at the beginning.\n\n🚫 When the user asks something unrelated (e.g., weather, politics, personal advice), respond with:\n- \"❌ I'm here only to help with your expense data. Please ask something related to your recent spending.\"\n- \"⚠️ I cannot process questions outside your expense data.\"\n- \"🛑 Let’s keep this focused on your expenses so I can assist you better.\"\n(Include any other appropriate warning messages if the user continues asking unrelated questions.)\n\nHere is the user's last 30 days of expense data:\n`;\n\n    const dataBlock = JSON.stringify(last15DaysExpenses, null, 2);\n\n    const prompt = `\n${baseInstructions}\nExpense Data:\n${dataBlock}\n\nUser Query:\n\"${userQuery}\"\n`;\n\n    return prompt.trim();\n  }\n\n}\n\n\n// for chat\n\n// import { Injectable } from '@angular/core';\n// import { HttpClient, HttpHeaders } from '@angular/common/http';\n// import { environment } from '../../../environments/environments';\n// import { firstValueFrom } from 'rxjs';\n\n// export interface ChatMessage {\n//   role: 'user' | 'model';\n//   parts: { text: string }[];\n// }\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class GeminiApiService {\n//   private history: ChatMessage[] = [];\n\n//   private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n//   constructor(private http: HttpClient) {}\n\n//   async sendMessage(message: string): Promise {\n//     this.history.push({ role: 'user', parts: [{ text: message }] });\n\n//     const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n//     const body = {\n//       contents: this.history\n//     };\n\n//     try {\n//       const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n//       const parts = res?.candidates?.[0]?.content?.parts;\n//       const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n//       this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n//       return modelReply;\n//     } catch (err) {\n//       console.error('Error:', err);\n//       return 'Error fetching response';\n//     }\n//   }\n\n//   getHistory(): ChatMessage[] {\n//     return this.history;\n//   }\n// }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GetApiService.html":{"url":"injectables/GetApiService.html","title":"injectable - GetApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GetApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/get/get-api.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/get/get-api.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetApiService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GlobalLoaderComponent.html":{"url":"components/GlobalLoaderComponent.html","title":"component - GlobalLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GlobalLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/global-loader/global-loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-global-loader\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./global-loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./global-loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/global-loader/global-loader.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/global-loader/global-loader.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service'\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-global-loader',\n  imports: [CommonModule],\n  templateUrl: './global-loader.component.html',\n  styleUrl: './global-loader.component.css'\n})\nexport class GlobalLoaderComponent {\n  isVisible = false;\n  message = \"\";\n\n  constructor(private globalLoaderService: GlobalLoaderService) {\n    this.globalLoaderService.register(this);\n  }\n\n  show(text: string = \"Loading...\") {\n    this.message = text;\n    this.isVisible = true;\n  }\n\n  hide() {\n    this.isVisible = false;\n  }\n}\n\n// constructor(private loader: LoaderService) {}\n\n// loadSomething() {\n//   this.loader.show();\n//   setTimeout(() => {\n//     this.loader.hide();\n//   }, 3000);\n// }\n\n    \n\n    \n        \n    \n    \n    \n    {{message}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{message}}'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GlobalLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalLoaderService.html":{"url":"injectables/GlobalLoaderService.html","title":"injectable - GlobalLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GlobalLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/global-loader/global-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                globalLoaderComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(component: GlobalLoaderComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                            GlobalLoaderComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/global-loader/global-loader.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"Loading...\"\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalLoaderComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalLoaderComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/global-loader/global-loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GlobalLoaderComponent } from '../../shared/global-loader/global-loader.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalLoaderService {\n\n  private globalLoaderComponent!: GlobalLoaderComponent;\n\n  register(component: GlobalLoaderComponent) {\n    this.globalLoaderComponent = component;\n  }\n  \n  show(text: string = \"Loading...\") {\n    this.globalLoaderComponent?.show(text);\n  }\n\n  hide() {\n    this.globalLoaderComponent?.hide();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GraphsComponent.html":{"url":"components/GraphsComponent.html","title":"component - GraphsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GraphsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/graphs/graphs.component.ts\n\n\n\n    \n        Description\n    \n    \n        GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-graphs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            NgApexchartsModule\n                \n            \n\n            \n                styleUrls\n                ./graphs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./graphs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chartDetails\n                            \n                            \n                                chartSeries\n                            \n                            \n                                chartXAxis\n                            \n                            \n                                chartYAxis\n                            \n                            \n                                dataLabels\n                            \n                            \n                                grid\n                            \n                            \n                                stroke\n                            \n                            \n                                theme\n                            \n                            \n                                title\n                            \n                            \n                                tooltip\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                switchView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, expenseService: ExpenseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/graphs/graphs.component.ts:122\n                            \n                        \n\n                \n                    \n                            Constructs GraphsComponent with injected services.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for accessing user settings like theme and currency\n\n                                                        \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for retrieving stored expenses\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:32\n                            \n                        \n                \n                    \n                        The current selected date used for filtering expense data.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/graphs/graphs.component.ts:26\n                            \n                        \n                \n                    \n                        Determines whether to show monthly or daily or yearly view.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Loads chart data based on the current view type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by time for the current day.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by day for the current month.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData(expenses: Expense[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:323\n                        \n                    \n\n\n            \n                \n                        Loads and processes expense data grouped by month for the current year.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                expenses\n                                            \n                                                            Expense[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of all expenses\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:147\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called when @Input values change.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing changed input properties\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchView\n                        \n                    \n                \n            \n            \n                \nswitchView(viewType: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/graphs/graphs.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Switches between 'month', 'year' and 'day' view and reloads chart data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                viewType\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    View type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        chartDetails\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexChart\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:61\n                        \n                    \n\n            \n                \n                    Main chart configuration such as type, zoom, toolbar.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartSeries\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ApexAxisChartSeries\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:37\n                        \n                    \n\n            \n                \n                    Chart series data used by ApexCharts.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartXAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexXAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:80\n                        \n                    \n\n            \n                \n                    X-axis configuration including categories and tooltip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartYAxis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexYAxis\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: true\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:47\n                        \n                    \n\n            \n                \n                    Y-axis configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataLabels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexDataLabels\n\n                    \n                \n                \n                    \n                        Default value : {\n    enabled: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:91\n                        \n                    \n\n            \n                \n                    Data label configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        grid\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexGrid\n\n                    \n                \n                \n                    \n                        Default value : {\n    show: false\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:54\n                        \n                    \n\n            \n                \n                    Grid styling for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stroke\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexStroke\n\n                    \n                \n                \n                    \n                        Default value : {\n    curve: \"smooth\"\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:98\n                        \n                    \n\n            \n                \n                    Stroke configuration for line smoothing.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTheme\n\n                    \n                \n                \n                    \n                        Default value : {\n    mode: 'light'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:110\n                        \n                    \n\n            \n                \n                    Theme configuration for light or dark mode.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTitleSubtitle\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:105\n                        \n                    \n\n            \n                \n                    Title of the chart including total expense.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tooltip\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApexTooltip\n\n                    \n                \n                \n                    \n                        Default value : {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:117\n                        \n                    \n\n            \n                \n                    Tooltip configuration for the chart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/graphs/graphs.component.ts:130\n                        \n                    \n\n            \n                \n                    Service for accessing user settings like theme and currency\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport {\n  ApexAxisChartSeries, ApexChart, ApexXAxis, ApexDataLabels,\n  ApexStroke, ApexTitleSubtitle, ApexTheme, ApexTooltip, ApexGrid, ApexYAxis\n} from 'ng-apexcharts';\nimport { UserService } from '../../service/localStorage/user.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\n\n/**\n * GraphsComponent displays area charts for expenses based on selected time range (month/day/year).\n */\n@Component({\n  standalone: true,\n  selector: 'app-graphs',\n  templateUrl: './graphs.component.html',\n  styleUrls: ['./graphs.component.css'],\n  imports: [NgApexchartsModule]\n})\nexport class GraphsComponent implements OnInit, OnChanges {\n\n  /**\n   * Determines whether to show monthly or daily or yearly view.\n   * @type {'month' | 'day' | 'year'}\n   */\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * The current selected date used for filtering expense data.\n   * @type {Date}\n   */\n  @Input() currentDate!: Date;\n\n  /**\n   * Chart series data used by ApexCharts.\n   */\n  chartSeries: ApexAxisChartSeries = [\n    {\n      name: \"Expenses\",\n      data: []\n    }\n  ];\n\n  /**\n   * Y-axis configuration for the chart.\n   */\n  chartYAxis: ApexYAxis = {\n    show: true\n  };\n\n  /**\n   * Grid styling for the chart.\n   */\n  grid: ApexGrid = {\n    show: false\n  };\n\n  /**\n   * Main chart configuration such as type, zoom, toolbar.\n   */\n  chartDetails: ApexChart = {\n    type: \"area\",\n    height: 350,\n    toolbar: {\n      show: false\n    },\n    zoom: {\n      enabled: false\n    },\n    foreColor: 'var(--color-text)',\n    background: 'transparent',\n    animations: {\n      enabled: true\n    }\n  };\n\n  /**\n   * X-axis configuration including categories and tooltip.\n   */\n  chartXAxis: ApexXAxis = {\n    type: 'category',\n    categories: [],\n    tooltip: {\n      enabled: false\n    }\n  };\n\n  /**\n   * Data label configuration for the chart.\n   */\n  dataLabels: ApexDataLabels = {\n    enabled: false\n  };\n\n  /**\n   * Stroke configuration for line smoothing.\n   */\n  stroke: ApexStroke = {\n    curve: \"smooth\"\n  };\n\n  /**\n   * Title of the chart including total expense.\n   */\n  title: ApexTitleSubtitle = {};\n\n  /**\n   * Theme configuration for light or dark mode.\n   */\n  theme: ApexTheme = {\n    mode: 'light'\n  };\n\n  /**\n   * Tooltip configuration for the chart.\n   */\n  tooltip: ApexTooltip = {\n    shared: true,\n    intersect: false,\n    y: {},\n    x: {}\n  };\n\n  /**\n   * Constructs GraphsComponent with injected services.\n   * @param userService Service for accessing user settings like theme and currency\n   * @param expenseService Service for retrieving stored expenses\n   */\n  constructor(\n    public userService: UserService,\n    private expenseService: ExpenseService\n  ) { }\n\n  /**\n   * Lifecycle hook called after component initialization.\n   */\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.theme.mode = userTheme === 'dark' ? 'dark' : 'light';\n    this.loadData();\n  }\n\n  /**\n   * Lifecycle hook called when @Input values change.\n   * @param changes Object containing changed input properties\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  /**\n   * Switches between 'month', 'year' and 'day' view and reloads chart data.\n   * @param viewType View type to switch to\n   */\n  switchView(viewType: 'month' | 'day' | 'year'): void {\n    this.viewType = viewType;\n    this.loadData();\n  }\n\n  /**\n   * Loads chart data based on the current view type.\n   */\n  loadData(): void {\n    const expenses: Expense[] = this.expenseService.getAll();\n    if (this.viewType === 'month') {\n      this.loadMonthData(expenses);\n    } else if (this.viewType === 'day') {\n      this.loadDayData(expenses);\n    }\n    else {\n      this.loadYearData(expenses);\n    }\n  }\n\n  /**\n   * Loads and processes expense data grouped by day for the current month.\n   * @param expenses List of all expenses\n   */\n  loadMonthData(expenses: Expense[]): void {\n    const dayAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    let totalAmount = 0;\n    currentMonthExpenses.forEach(item => {\n      const day = parseInt(item.date.split('-')[2]);\n      const amount = item.amount;\n      totalAmount += amount;\n\n      if (dayAmountMap.has(day)) {\n        dayAmountMap.set(day, dayAmountMap.get(day)! + amount);\n      } else {\n        dayAmountMap.set(day, amount);\n      }\n    });\n\n    const days = Array.from(dayAmountMap.keys()).sort((a, b) => a - b);\n    const amounts = days.map(day => dayAmountMap.get(day)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const day = days[value - 1];\n          const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n          const monthName = monthNames[this.currentDate.getMonth()];\n          const year = this.currentDate.getFullYear();\n          return `${day} ${monthName} ${year}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: days.map(day => day.toString()),\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by time for the current day.\n   * @param expenses List of all expenses\n   */\n  loadDayData(expenses: Expense[]): void {\n    const timeAmountMap = new Map();\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.sort((a, b) => {\n      const [aHours, aMinutes, aSeconds] = a.time.split(\":\").map(Number);\n      const [bHours, bMinutes, bSeconds] = b.time.split(\":\").map(Number);\n\n      if (aHours !== bHours) return aHours - bHours;\n      if (aMinutes !== bMinutes) return aMinutes - bMinutes;\n      return aSeconds - bSeconds;\n    });\n\n\n    // timeAmountMap.set(\"00:00:00\", 0);\n    let totalAmount = 0;\n    todaysExpenses.forEach(item => {\n      const [hour, minute, second] = item.time.split(\":\");\n      const time = `${hour}:${minute}:${second}`;\n      totalAmount += item.amount;\n      timeAmountMap.set(time, item.amount);\n    });\n\n    const times = Array.from(timeAmountMap.keys());\n    const amounts = times.map(time => timeAmountMap.get(time)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => {\n          return `${value} ${this.userService.getValue('currency')}`;\n        }\n      },\n      x: {\n        formatter: (value: any) => {\n          const time = times[value - 1];\n          return `Time: ${time}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total Expenses: \" + totalAmount,\n      align: \"center\",\n      style: {\n        color: 'var(--color-text)'\n      }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: times,\n      tooltip: {\n        enabled: false\n      }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n\n  /**\n   * Loads and processes expense data grouped by month for the current year.\n   * @param expenses List of all expenses\n   */\n  loadYearData(expenses: Expense[]): void {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n    const monthAmountMap = new Map();\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    let totalAmount = 0;\n    currentYearExpenses.forEach(item => {\n      const month = parseInt(item.date.split('-')[1]);\n      totalAmount += item.amount;\n      const monthName = monthNames[month - 1];\n      monthAmountMap.set(monthName, (monthAmountMap.get(monthName) || 0) + item.amount);\n    });\n\n    const months = Array.from(monthAmountMap.keys()).reverse();\n    const amounts = months.map(month => monthAmountMap.get(month)!);\n\n    this.tooltip = {\n      shared: true,\n      intersect: false,\n      y: {\n        formatter: (value: number) => `${value} ${this.userService.getValue('currency')}`\n      },\n      x: {\n        formatter: (_value: any) => {\n          const fullNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          return `Month: ${fullNames[_value - 1]}`;\n        }\n      }\n    };\n\n    this.title = {\n      text: \"Total: \" + totalAmount,\n      align: \"center\",\n      style: { color: 'var(--color-text)' }\n    };\n\n    this.chartXAxis = {\n      type: 'category',\n      categories: months,\n      tooltip: { enabled: false }\n    };\n\n    this.chartSeries = [{\n      name: \"Expenses\",\n      data: amounts\n    }];\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n    \n\n    \n                \n                    ./graphs.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GraphsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HamburgerMenuComponent.html":{"url":"components/HamburgerMenuComponent.html","title":"component - HamburgerMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HamburgerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/hamburger-menu/hamburger-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hamburger-menu\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./hamburger-menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./hamburger-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuOpen\n                            \n                            \n                                showAIButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                            \n                                    \n                                onClick\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:click(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAIButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/hamburger-menu/hamburger-menu.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-hamburger-menu',\n  imports: [CommonModule],\n  templateUrl: './hamburger-menu.component.html',\n  styleUrls: ['./hamburger-menu.component.css'],\n})\nexport class HamburgerMenuComponent {\n\n  showAIButton = false;\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showAIButton = section !== 'ai';\n    });\n  }\n  isMenuOpen = false;\n\n  // Toggle the menu when the button is clicked\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  // Close the menu if clicked outside\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    const clickedInside = event.target instanceof HTMLElement && event.target.closest('.hamburger-menu-container');\n    if (!clickedInside) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n    \n        \n            \n                🔍 Search\n            \n            \n                ⚙️ Settings\n            \n        \n    \n -->\n\n\n    \n        \n    \n\n    \n\n    \n                \n                    ./hamburger-menu.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🔍 Search                                        ⚙️ Settings                         -->                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HamburgerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n    \n        Description\n    \n    \n        HomeComponent is the main dashboard that displays graphs and charts\nbased on the user's selected time view: day, month, or year.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                GraphsComponent\n                            FormsModule\n                            CommonModule\n                                PieChartComponent\n                \n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                defaultViewType\n                            \n                            \n                                forceInputReset\n                            \n                            \n                                viewType\n                            \n                            \n                                viewTypeDayDiv\n                            \n                            \n                                viewTypeYearDiv\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockKey\n                            \n                            \n                                formatDateForInput\n                            \n                            \n                                formatMonthForInput\n                            \n                            \n                                getDisplayDate\n                            \n                            \n                                goNext\n                            \n                            \n                                goPrevious\n                            \n                            \n                                onInputChange\n                            \n                            \n                                onMonthChange\n                            \n                            \n                                setViewType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockKey\n                        \n                    \n                \n            \n            \n                \nblockKey(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Prevents the user from using backspace/delete keys in certain inputs.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Keyboard event\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDateForInput\n                        \n                    \n                \n            \n            \n                \nformatDateForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM-DD for input[type=date].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMonthForInput\n                        \n                    \n                \n            \n            \n                \nformatMonthForInput(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Formats a Date object to YYYY-MM for input[type=month].\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date object to format\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted string\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDisplayDate\n                        \n                    \n                \n            \n            \n                \ngetDisplayDate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Returns the formatted string to display based on selected view type.\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                Formatted date string for display\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goNext\n                        \n                    \n                \n            \n            \n                \ngoNext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Navigates to the next day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goPrevious\n                        \n                    \n                \n            \n            \n                \ngoPrevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Navigates to the previous day, month, or year depending on current view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Handles input change for day-type date picker.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMonthChange\n                        \n                    \n                \n            \n            \n                \nonMonthChange(event: any, inputRef: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Handles input change for month-type input.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Input event\n\n                                            \n                                        \n                                        \n                                                inputRef\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Reference to the input element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewType\n                        \n                    \n                \n            \n            \n                \nsetViewType(view: \"month\" | \"day\" | \"year\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Sets the active view type and resets state flags accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                view\n                                            \n                                                        \"month\" | \"day\" | \"year\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The view type to switch to\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n            \n                \n                    Current selected date to show data for.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultViewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:23\n                        \n                    \n\n            \n                \n                    The default view type to be loaded on component init.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forceInputReset\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:48\n                        \n                    \n\n            \n                \n                    Boolean to force resetting of input fields.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewType\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : this.defaultViewType\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n            \n                \n                    Current active view type ('month', 'day', or 'year').\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeDayDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:33\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of day-specific input section.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewTypeYearDiv\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:38\n                        \n                    \n\n            \n                \n                    Flag to toggle visibility of year-specific input section.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { GraphsComponent } from '../../component/graphs/graphs.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { PieChartComponent } from '../../component/pie-chart/pie-chart.component';\n\n/**\n * HomeComponent is the main dashboard that displays graphs and charts\n * based on the user's selected time view: day, month, or year.\n */\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [GraphsComponent, FormsModule, CommonModule, PieChartComponent],\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  /**\n   * The default view type to be loaded on component init.\n   */\n  defaultViewType: 'month' | 'day' | 'year' = 'month';\n\n  /**\n   * Current active view type ('month', 'day', or 'year').\n   */\n  viewType: 'month' | 'day' | 'year' = this.defaultViewType;\n\n  /**\n   * Flag to toggle visibility of day-specific input section.\n   */\n  viewTypeDayDiv: boolean = false;\n\n  /**\n   * Flag to toggle visibility of year-specific input section.\n   */\n  viewTypeYearDiv: boolean = false;\n\n  /**\n   * Current selected date to show data for.\n   */\n  currentDate: Date = new Date();\n\n  /**\n   * Boolean to force resetting of input fields.\n   */\n  forceInputReset: boolean = false;\n\n  /**\n   * Sets the active view type and resets state flags accordingly.\n   * @param view The view type to switch to\n   */\n  setViewType(view: 'month' | 'day' | 'year') {\n    if (this.viewType != view) {\n      this.defaultViewType = view;\n      this.viewType = view;\n      this.currentDate = new Date();\n      this.viewTypeDayDiv = false;\n      this.viewTypeYearDiv = false;\n\n      if (this.viewType === 'day') {\n        this.viewTypeDayDiv = true;\n      }\n\n      if (this.viewType === 'year') {\n        this.viewTypeYearDiv = true;\n      }\n    }\n  }\n\n  /**\n   * Navigates to the previous day, month, or year depending on current view.\n   */\n  goPrevious() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() - 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() - 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() - 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Navigates to the next day, month, or year depending on current view.\n   */\n  goNext() {\n    if (this.viewType === 'day') {\n      this.currentDate.setDate(this.currentDate.getDate() + 1);\n    } else if (this.viewType === 'month') {\n      this.currentDate.setMonth(this.currentDate.getMonth() + 1);\n    } else if (this.viewType === 'year') {\n      this.currentDate.setFullYear(this.currentDate.getFullYear() + 1);\n    }\n    this.currentDate = new Date(this.currentDate);\n  }\n\n  /**\n   * Returns the formatted string to display based on selected view type.\n   * @returns Formatted date string for display\n   */\n  getDisplayDate(): string {\n    if (this.viewType === 'day') {\n      return this.currentDate.toDateString();\n    } else if (this.viewType === 'month') {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n      return `${monthNames[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n    } else {\n      return `${this.currentDate.getFullYear()}`;\n    }\n  }\n\n  /**\n   * Handles input change for day-type date picker.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onInputChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n      return;\n    }\n\n    const parsed = new Date(value);\n    if (!isNaN(parsed.getTime())) {\n      this.currentDate = parsed;\n    } else {\n      inputRef.value = this.formatDateForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Handles input change for month-type input.\n   * @param event Input event\n   * @param inputRef Reference to the input element\n   */\n  onMonthChange(event: any, inputRef: HTMLInputElement) {\n    const value = event.target.value;\n    if (!value || value.trim() === '') {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n      return;\n    }\n\n    const [year, month] = value.split('-').map(Number);\n    if (!isNaN(year) && !isNaN(month)) {\n      this.currentDate = new Date(year, month - 1);\n    } else {\n      inputRef.value = this.formatMonthForInput(this.currentDate);\n    }\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM-DD` for input[type=date].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatDateForInput(date: Date): string {\n    return date.toISOString().split('T')[0];\n  }\n\n  /**\n   * Formats a Date object to `YYYY-MM` for input[type=month].\n   * @param date Date object to format\n   * @returns Formatted string\n   */\n  formatMonthForInput(date: Date): string {\n    return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n  }\n\n  /**\n   * Prevents the user from using backspace/delete keys in certain inputs.\n   * @param event Keyboard event\n   */\n  blockKey(event: KeyboardEvent) {\n    if (['Backspace', 'Delete'].includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n}\n    \n\n    \n        \n    \n    \n        \n            \n            \n\n            \n                {{ \"month\" | titlecase }}\n            \n            \n                {{ \"day\" | titlecase }}\n            \n\n            \n                {{ \"year\" | titlecase }}\n            \n        \n    \n\n    \n        \n            \n\n        \n\n        \n        \n            \n            \n                {{ getDisplayDate() }}\n            \n\n            \n            \n                \n\n                \n\n            \n        \n\n\n        \n            \n        \n    \n\n    \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                input[type=\"date\"]::-webkit-calendar-picker-indicator,\ninput[type=\"month\"]::-webkit-calendar-picker-indicator {\n  filter: var(--icon-color2);\n  cursor: pointer;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  border: none;\n  outline: none;\n}\n\ninput[type=\"date\"],\ninput[type=\"month\"] {\n  cursor: pointer;\n}\n\n.hiddeninput {\n  z-index: 50;\n  background: none;\n  width: 100px;\n  color: transparent;\n}\n\n.hiddeninputdiv {\n  right: -23px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    {{ \"month\" | titlecase }}                                        {{ \"day\" | titlecase }}                                        {{ \"year\" | titlecase }}                                                                                                                {{ getDisplayDate() }}                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoIconComponent.html":{"url":"components/InfoIconComponent.html","title":"component - InfoIconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoIconComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/info-icon/info-icon.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info-icon\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./info-icon.component.html\n            \n\n\n\n            \n                styleUrl\n                ./info-icon.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Info tooltip'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/info-icon/info-icon.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-info-icon',\n  imports: [],\n  templateUrl: './info-icon.component.html',\n  styleUrl: './info-icon.component.css'\n})\nexport class InfoIconComponent {\n  @Input() message: string = 'Info tooltip';\n}\n\n    \n\n    \n        \n    \n    \n        {{ message }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ message }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InfoIconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MusicComponent.html":{"url":"components/MusicComponent.html","title":"component - MusicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MusicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/music/music.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-music\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./music.component.html\n            \n\n\n\n            \n                styleUrl\n                ./music.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                audio\n                            \n                            \n                                currentSong\n                            \n                            \n                                duration\n                            \n                            \n                                interval\n                            \n                            \n                                progress\n                            \n                            \n                                query\n                            \n                            \n                                songs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                getSongUrl\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onSeek\n                            \n                            \n                                    Async\n                                onSongFinished\n                            \n                            \n                                playSong\n                            \n                            \n                                searchSong\n                            \n                            \n                                transformSongData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(saavnService: SaavnService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/music/music.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        saavnService\n                                                  \n                                                        \n                                                                        SaavnService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSongUrl\n                        \n                    \n                \n            \n            \n                \ngetSongUrl(song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSeek\n                        \n                    \n                \n            \n            \n                \nonSeek(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSongFinished\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSongFinished()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playSong\n                        \n                    \n                \n            \n            \n                \nplaySong(url: string, song: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                song\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSong\n                        \n                    \n                \n            \n            \n                \nsearchSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transformSongData\n                        \n                    \n                \n            \n            \n                \ntransformSongData(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/music/music.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: any; type: any; year: any; duration: any; label: any; playCount: any; language: any; copyright: any; album: { name: any; }; artists: { all: any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Audio()\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSong\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        interval\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        progress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal(0)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        songs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : signal([])\n                    \n                \n                    \n                        \n                                Defined in src/app/features/music/music.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, signal, effect, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { SaavnService } from '../../service/saavan-api/saavan.service';\n\n@Component({\n  selector: 'app-music',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './music.component.html',\n  styleUrl: './music.component.css'\n})\nexport class MusicComponent implements OnDestroy {\n  query = '';\n  songs = signal([]);\n  audio = new Audio();\n  currentSong: any = null;\n  progress = signal(0);\n  duration = signal(0);\n  interval: any = null;\n\n  constructor(private saavnService: SaavnService) { }\n\n  searchSong() {\n    const q = this.query.trim();\n    if (q) {\n      this.saavnService.searchSongs(q).subscribe((res) => {\n        this.songs.set(res.data.results || []);\n      });\n    }\n  }\n\n  getSongUrl(song: any): string {\n    return song.downloadUrl?.find((d: any) => d.quality === '320kbps')?.url || '';\n  }\n\n  playSong(url: string, song: any) {\n    if (!this.audio) {\n      this.audio = new Audio();\n    }\n\n    if (this.currentSong?.url === url) {\n      if (this.audio.paused) {\n        this.audio.play();\n      } else {\n        this.audio.pause();\n      }\n    } else {\n      this.audio.src = url;\n      this.audio.play();\n      this.currentSong = { ...song, url };\n      this.duration.set(song.duration);\n    }\n\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.audio) {\n        this.progress.set(this.audio.currentTime);\n      }\n    }, 500);\n\n    this.audio.onended = () => {\n      this.onSongFinished();\n    };\n  }\n\n  async onSongFinished() {\n    try {\n      const transformedData = this.transformSongData(this.currentSong);\n\n      // Get AI suggestion\n      const nextSong = await this.saavnService.suggestNextSong(transformedData);\n\n      if (!nextSong || typeof nextSong !== 'string' || nextSong.trim() === '') {\n        console.warn('No song suggestion received from AI.');\n        return; // Stop if no suggestion\n      }\n\n      let cleanedSong = nextSong.trim();\n\n      if (cleanedSong.startsWith(\"```json\")) {\n        cleanedSong = cleanedSong.replace(/^```json/, \"\").replace(/```$/, \"\").trim();\n      } else if (cleanedSong.startsWith(\"```\")) {\n        cleanedSong = cleanedSong.replace(/^```/, \"\").replace(/```$/, \"\").trim();\n      }\n\n      let songDetails: { songName: string; artistsName: string };\n\n      try {\n        songDetails = JSON.parse(cleanedSong);\n      } catch (jsonError) {\n        console.error('Failed to parse AI response as JSON:', jsonError);\n        return; // Stop if JSON parsing fails\n      }\n\n      const { songName, artistsName } = songDetails || {};\n      const mainArtist = artistsName ? artistsName.split(\",\")[0].trim() : \"\";\n      if (!songName || !mainArtist) {\n        console.warn('Incomplete song details received from AI:', songDetails);\n        return; // Stop if required fields are missing\n      }\n\n      // Search and play the song\n      this.saavnService.searchSongs(`${songName} ${mainArtist}`).subscribe({\n        next: (res) => {\n          const results = res.data?.results || [];\n          if (results.length > 0) {\n            const firstSong = results[0];\n            const url = this.getSongUrl(firstSong);\n            this.playSong(url, firstSong);\n          } else {\n            console.warn('No search results found for suggested song.');\n          }\n        },\n        error: (searchError) => {\n          console.error('Error during song search:', searchError);\n        }\n      });\n    } catch (error) {\n      console.error('Error in onSongFinished:', error);\n    } finally {\n      // Reset progress and cleanup\n      this.currentSong = null;\n      this.progress.set(0);\n      clearInterval(this.interval);\n    }\n  }\n\n  formatTime(seconds: number) {\n    const min = Math.floor(seconds / 60);\n    const sec = Math.floor(seconds % 60);\n    return `${min}:${sec.toString().padStart(2, '0')}`;\n  }\n\n  ngOnDestroy() {\n    clearInterval(this.interval);\n  }\n\n  onSeek(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const seekTime = Number(target.value);\n    if (this.audio) {\n      this.audio.currentTime = seekTime;\n      this.progress.set(seekTime);\n    }\n  }\n\n  transformSongData(data: any) {\n    return {\n      name: data.name,\n      type: data.type,\n      year: data.year,\n      duration: data.duration,\n      label: data.label,\n      playCount: data.playCount,\n      language: data.language,\n      copyright: data.copyright,\n      album: {\n        name: data.album?.name || ''\n      },\n      artists: {\n        all: (data.artists?.primary || []).map((artist: any) => ({\n          name: artist.name\n        }))\n      }\n    };\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n      Search\n    \n  \n\n  \n  \n    \n      \n\n      \n        \n      \n    \n\n    \n      {{ song.name }}\n      {{ song.artists.primary[0]?.name || 'Unknown Artist' }}\n    \n\n    {{ formatTime(song.duration) }}\n  \n\n\n\n\n\n\n  \n  \n\n  \n  \n    \n    \n      \n        {{ currentSong.name }}\n        \n          {{ currentSong.artists.primary[0]?.name || 'Unknown Artist' }}\n        \n      \n\n      \n        \n          {{ formatTime(progress()) }} / {{ formatTime(duration()) }}\n        \n        \n          \n        \n      \n    \n\n    \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Search                                                      {{ song.name }}      {{ song.artists.primary[0]?.name || \\'Unknown Artist\\' }}        {{ formatTime(song.duration) }}                                {{ currentSong.name }}                  {{ currentSong.artists.primary[0]?.name || \\'Unknown Artist\\' }}                                      {{ formatTime(progress()) }} / {{ formatTime(duration()) }}                                                      '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MusicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n            \n                imports\n                \n                            CommonModule\n                                HamburgerMenuComponent\n                \n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showBackButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/navbar/navbar.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showBackButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/navbar/navbar.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SectionService } from '../../service/section/section.service';\nimport { HamburgerMenuComponent } from '../hamburger-menu/hamburger-menu.component';\n\n@Component({\n  selector: 'app-navbar',\n  imports: [CommonModule, HamburgerMenuComponent],\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent {\n  showBackButton = false;\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.showBackButton = section !== 'home';\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n        \n        \n        \n            Expense Tracker\n        \n    \n    \n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    Expense Tracker                '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PieChartComponent.html":{"url":"components/PieChartComponent.html","title":"component - PieChartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PieChartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/pie-chart/pie-chart.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pie-chart\n            \n\n            \n                standalone\n                true\n            \n\n\n            \n                styleUrls\n                ./pie-chart.component.css\n            \n\n\n\n            \n                templateUrl\n                ./pie-chart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                canvasRef\n                            \n                            \n                                categories\n                            \n                            \n                                categoryColors\n                            \n                            \n                                categoryMap\n                            \n                            \n                                charts\n                            \n                            \n                                currency\n                            \n                            \n                                expenses\n                            \n                            \n                                isDarkMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadDayData\n                            \n                            \n                                loadMonthData\n                            \n                            \n                                loadYearData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                renderChart\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentDate\n                            \n                            \n                                viewType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoryService, expenseService: ExpenseService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        expenseService\n                                                  \n                                                        \n                                                                        ExpenseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewType\n                    \n                \n                \n                    \n                        Type :     \"month\" | \"day\" | \"year\"\n\n                    \n                \n                \n                    \n                        Default value : 'month'\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/pie-chart/pie-chart.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDayData\n                        \n                    \n                \n            \n            \n                \nloadDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMonthData\n                        \n                    \n                \n            \n            \n                \nloadMonthData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadYearData\n                        \n                    \n                \n            \n            \n                \nloadYearData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        renderChart\n                        \n                    \n                \n            \n            \n                \nrenderChart(id: string, type: string, undefined: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/pie-chart/pie-chart.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('categoryCanvas', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categoryMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        charts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expenses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Expense[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/pie-chart/pie-chart.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnChanges, SimpleChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { CategoryService, Category } from '../../service/localStorage/category.service';\nimport { ExpenseService, Expense } from '../../service/localStorage/expense.service';\nimport { UserService } from '../../service/localStorage/user.service';\n\ndeclare const Chart: any;\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css'],\n  standalone: true,\n})\nexport class PieChartComponent implements OnInit, OnChanges, AfterViewInit {\n  isDarkMode: boolean = false;\n  categoryMap: any = {};\n  categories: Category[] = []\n  expenses: Expense[] = [];\n  charts: { [key: string]: any } = {};\n  categoryColors: { [key: string]: string } = {};\n  currency: string | null;\n\n  @ViewChild('categoryCanvas', { static: false }) canvasRef!: ElementRef;\n  @Input() viewType: 'month' | 'day' | 'year' = 'month';\n  @Input() currentDate!: Date;\n\n  constructor(\n    private categoryService: CategoryService,\n    private expenseService: ExpenseService,\n    private userService: UserService,\n  ) {\n    this.currency = this.userService.getValue('currency');\n  }\n\n  ngOnInit(): void {\n    const userTheme = this.userService.getValue('theme_mode');\n    this.isDarkMode = userTheme === 'dark';\n    this.categories = this.categoryService.getAll();\n    this.expenses = this.expenseService.getAll();\n    this.categories.forEach((cat) => {\n      this.categoryMap[cat.category_id] = cat.name;\n    });\n    this.categories.forEach(cat => {\n      this.categoryColors[cat.name] = cat.color;\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.loadData();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['viewType'] || changes['currentDate']) {\n      this.loadData();\n    }\n  }\n\n  loadData(): void {\n    if (typeof window !== 'undefined' && (window as any).Chart) {\n      if (this.viewType === 'month') {\n        this.loadMonthData();\n      } else if (this.viewType === 'year') {\n        this.loadYearData();\n      } else if (this.viewType === 'day') {\n        this.loadDayData();\n      }\n    } else {\n      console.error(\"Chart.js is not loaded properly.\");\n    }\n  }\n\n  loadMonthData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n    const currentMonth = this.currentDate.getMonth() + 1;\n\n    const currentMonthExpenses = this.expenses.filter(item => {\n      const [year, month] = item.date.split('-').map(Number);\n      return year === currentYear && month === currentMonth;\n    });\n\n    currentMonthExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadDayData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const todayStr = `${this.currentDate.getFullYear()}-${(this.currentDate.getMonth() + 1).toString().padStart(2, '0')}-${this.currentDate.getDate().toString().padStart(2, '0')}`;\n\n    const todaysExpenses = this.expenses.filter(exp => exp.date === todayStr);\n\n    todaysExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n  loadYearData(): void {\n    const categoryTotals: { [key: string]: number } = {};\n    const currentYear = this.currentDate.getFullYear();\n\n    const currentYearExpenses = this.expenses.filter(item => {\n      const [year] = item.date.split('-').map(Number);\n      return year === currentYear;\n    });\n\n    currentYearExpenses.forEach(item => {\n      const catName = this.categoryMap[item.category_id] || \"Other\";\n      categoryTotals[catName] = (categoryTotals[catName] || 0) + item.amount;\n    });\n\n    this.renderChart(\"categoryChart\", \"doughnut\", {\n      labels: Object.keys(categoryTotals),\n      data: Object.values(categoryTotals),\n      label: \"Amount: \" + this.currency,\n      backgroundColors: Object.keys(categoryTotals).map(cat => this.categoryColors[cat] || \"#ccc\")\n    });\n  }\n\n\n  renderChart(id: string, type: string, { labels, data, label, backgroundColors, borderColor }: any) {\n    const ctx = this.canvasRef?.nativeElement.getContext('2d');\n    if (!ctx) return;\n\n    if (this.charts[id]) {\n      this.charts[id].destroy();\n      delete this.charts[id];\n    }\n\n    const datasetConfig: any = {\n      label: label,\n      data: data,\n      backgroundColor: backgroundColors,\n      borderColor: borderColor || backgroundColors,\n      borderWidth: 1\n    };\n\n    if (type === \"line\") {\n      datasetConfig.fill = false;\n      datasetConfig.tension = 0.3;\n    }\n    try {\n      (window as any).Chart = (window as any).Chart || Chart;\n      this.charts[id] = new (window as any).Chart(ctx, {\n        type: type,\n        data: {\n          labels: labels,\n          datasets: [datasetConfig]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: type === \"bar\" || type === \"line\" ? \"top\" : \"bottom\",\n              labels: {\n                color: this.isDarkMode ? \"#fff\" : \"#111\"\n              }\n            },\n            title: {\n              display: false\n            },\n            tooltip: {\n              callbacks: {\n                label: function (context: any) {\n                  let value = context.parsed.y !== undefined ? context.parsed.y : context.parsed;\n                  return `${context.dataset.label}${value.toLocaleString(\"en-IN\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                  })}`;\n                }\n              }\n            }\n          },\n          scales: type === \"bar\" || type === \"line\" ? {\n            x: {\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            },\n            y: {\n              beginAtZero: true,\n              ticks: {\n                color: this.isDarkMode ? \"#ddd\" : \"#111\"\n              }\n            }\n          } : {}\n        }\n      });\n    } catch (error) {\n      console.error(\"Error rendering chart:\", error);\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n  \n\n    \n\n    \n                \n                    ./pie-chart.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PieChartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostApiService.html":{"url":"injectables/PostApiService.html","title":"injectable - PostApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/backend-api/post/post-api.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\nwith the backend API. Intended to run silently once every 24 hours.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserDataFromLocalStorage\n                            \n                            \n                                postUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, configService: ConfigService, storageService: StorageService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/backend-api/post/post-api.service.ts:15\n                            \n                        \n\n                \n                    \n                            Creates an instance of PostApiService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular HttpClient to perform HTTP requests\n\n                                                        \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Provides API base URL based on environment\n\n                                                        \n                                                \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Accesses user data from LocalStorage\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Manages user-specific values like id and last_backup\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDataFromLocalStorage\n                        \n                    \n                \n            \n            \n                \ngetUserDataFromLocalStorage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Gathers all relevant user data from LocalStorage to be sent to the backend.\nor undefined if user_id is not available.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                An object containing user_id, expenses, budget, category, and user_data\nor undefined if user_id is not available.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postUserData\n                        \n                    \n                \n            \n            \n                \npostUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/backend-api/post/post-api.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Posts user data to the server in the background if more than 24 hours have passed\nsince the last successful backup. Uses /api/post/ endpoint.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { ConfigService } from '../../util/config/config.service';\nimport { StorageService } from '../../localStorage/storage.service';\nimport { UserService } from '../../localStorage/user.service';\n\n/**\n * Service to handle background POST requests to sync user data (expenses, budget, categories, etc.)\n * with the backend API. Intended to run silently once every 24 hours.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostApiService {\n\n  /**\n   * Creates an instance of PostApiService.\n   * @param http Angular HttpClient to perform HTTP requests\n   * @param configService Provides API base URL based on environment\n   * @param storageService Accesses user data from LocalStorage\n   * @param userService Manages user-specific values like `id` and `last_backup`\n   */\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigService,\n    private storageService: StorageService,\n    private userService: UserService\n  ) { }\n\n  /**\n   * Posts user data to the server in the background if more than 24 hours have passed\n   * since the last successful backup. Uses `/api/post/` endpoint.\n   */\n  postUserData(): void {\n    const lastBackupStr = this.userService.getValue('last_backup');\n    const now = new Date();\n    const lastBackup = lastBackupStr ? new Date(lastBackupStr) : null;\n    const shouldBackup = !lastBackup || (now.getTime() - lastBackup.getTime()) > 24 * 60 * 60 * 1000;\n\n    if (shouldBackup) {\n      //console.log('Posting user data in the background...');\n      const url = this.configService.getapiUrl() + '/api/post/';\n      const userData = this.getUserDataFromLocalStorage();\n\n      this.http.post(url, userData).pipe(take(1)).subscribe({\n        next: () => {\n          //console.log('User data posted successfully. Updating last_backup...');\n          this.userService.update('last_backup', now.toISOString());\n        },\n        error: err => {\n          console.error('Error posting user data', err);\n        }\n      });\n    } else {\n      //console.log('Backup skipped. Last backup was within 24 hours.');\n    }\n  }\n\n  /**\n   * Gathers all relevant user data from LocalStorage to be sent to the backend.\n   *\n   * @returns An object containing user_id, expenses, budget, category, and user_data\n   * or `undefined` if user_id is not available.\n   */\n  getUserDataFromLocalStorage(): any {\n    const userId = this.userService.getValue('id');\n    if (!userId) {\n      console.warn('User ID is missing, skipping backup.');\n      return;\n    }\n\n    const userData = this.storageService.getUser();\n    const expenses = this.storageService.getAllExpenses();\n    const budget = this.storageService.getAllBudgets();\n    const categories = this.storageService.getAllCategories();\n\n    return {\n      user_id: userId,\n      expenses: expenses || [],\n      budget: budget || [],\n      category: categories || [],\n      user_data: userData || {}\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaavnService.html":{"url":"injectables/SaavnService.html","title":"injectable - SaavnService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SaavnService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/saavan-api/saavan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                history\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHistory\n                            \n                            \n                                searchSongs\n                            \n                            \n                                    Async\n                                suggestNextSong\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, globalLoaderService: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalLoaderService\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHistory\n                        \n                    \n                \n            \n            \n                \ngetHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         ChatMessage[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchSongs\n                        \n                    \n                \n            \n            \n                \nsearchSongs(query: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        suggestNextSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    suggestNextSong(currentSong: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/saavan-api/saavan.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentSong\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://saavn.dev/api/search/songs'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChatMessage[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/service/saavan-api/saavan.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\nimport { finalize } from 'rxjs/operators';\nimport { environment } from '../../../environments/environments';\nimport { firstValueFrom } from 'rxjs';\n\nexport interface ChatMessage {\n  role: 'user' | 'model';\n  parts: { text: string }[];\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaavnService {\n  private history: ChatMessage[] = [];\n  private baseUrl = 'https://saavn.dev/api/search/songs';\n  private apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${environment.geminiApiKey}`;\n\n  constructor(private http: HttpClient, private globalLoaderService: GlobalLoaderService) { }\n\n  searchSongs(query: string) {\n    this.globalLoaderService.show(\"Searching songs...\");\n\n    return this.http.get(`${this.baseUrl}?query=${query}&limit=10&page=0`).pipe(\n      finalize(() => {\n        this.globalLoaderService.hide();\n      })\n    );\n  }\n\n  async suggestNextSong(currentSong: any) {\n    \n    this.globalLoaderService.show(\"Suggesting next song...\");\n\n    const formatField = (fieldName: string, value: any) => {\n      if (value === null || value === undefined || value === '') {\n        return '';\n      }\n      if (fieldName === 'Duration') {\n        return `${fieldName}: ${value} seconds\\n`;\n      }\n      return `${fieldName}: ${value}\\n`;\n    };\n\n    // Safely extract album name\n    const albumName = currentSong.album?.name || '';\n\n    // Safely extract artists names as comma separated string\n    const artistsName = (currentSong.artists?.all && currentSong.artists.all.length > 0)\n      ? currentSong.artists.all.map((artist: any) => artist.name).join(', ')\n      : '';\n\n    // Build prompt string by concatenating only valid fields\n    const prompt = `\nYou are a smart music recommendation assistant. Your job is to analyze the mood and style of the current song the user is listening to and suggest the most accurate next song that fits or enhances the user's mood and listening experience.\n\nGiven the current song details:\n${formatField('Name', currentSong.name)}${formatField('Type', currentSong.type)}${formatField('Year', currentSong.year)}${formatField('Duration', currentSong.duration)}${formatField('Label', currentSong.label)}${formatField('Language', currentSong.language)}${formatField('Copyright', currentSong.copyright)}${formatField('Album Name', albumName)}${formatField('Artist Name', artistsName)}\n\n🎯 Responsibilities:\n- Analyze the mood and style of the current song based on the given details(name, album name, language, artist, year, etc.).\n- Suggest the next song that is the most accurate match in mood, vibe, and style to provide a smooth and positive user experience.\n- Use only the current song’s metadata to infer the best next song.\n- Do not include any additional text, explanation, or formatting in your response.\n\nProvide only the JSON object and no extra text, no backticks, no markdown formatting:\n{\n  \"songName\": \"string\",\n  \"artistsName\": \"string\"\n}\n`;\n    this.history.push({ role: 'user', parts: [{ text: prompt }] });\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const body = {\n      contents: this.history\n    };\n\n    try {\n      const res: any = await firstValueFrom(this.http.post(this.apiUrl, body, { headers }));\n      const parts = res?.candidates?.[0]?.content?.parts;\n      const modelReply = parts?.map((p: any) => p.text).join('\\n\\n') || 'No response';\n\n      this.history.push({ role: 'model', parts: [{ text: modelReply }] });\n\n      return modelReply;\n    } catch (err) {\n      console.error('Error:', err);\n      return 'Error fetching response';\n    }\n\n  }\n\n  getHistory(): ChatMessage[] {\n    return this.history;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Schema.html":{"url":"interfaces/Schema.html","title":"interface - Schema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Schema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\"\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchButtonComponent.html":{"url":"components/SearchButtonComponent.html","title":"component - SearchButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/search-button/search-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SearchButtonComponent\nA floating action button that expands into a search input field.\nEmits the search query to the parent component and shows a global loader while processing.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./search-button.component.css\n            \n\n\n\n            \n                templateUrl\n                ./search-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                query\n                            \n                            \n                                    \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                            \n                                onSearch\n                            \n                            \n                                toggleSearch\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(globalLoader: GlobalLoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of SearchButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        globalLoader\n                                                  \n                                                        \n                                                                        GlobalLoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to control the global loading indicator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/search-button/search-button.component.ts:40\n                            \n                        \n                \n                    \n                        Emits the current search query to the parent component.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Triggers whenever the search input value changes.\nRestricts the query length to a maximum of 10 characters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSearch\n                        \n                    \n                \n            \n            \n                \nonSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handles the search action when user presses Enter.\n\nEmits the query to the parent.\nRemoves focus from the input.\nDisplays the global loader for a short duration.\n\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/component/search-button/search-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Toggles the visibility of the search input field.\nIf opened, it automatically focuses the input field after a short delay.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:25\n                        \n                    \n\n            \n                \n                    Tracks whether the search input is open or closed.\nDefaults to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        query\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:30\n                        \n                    \n\n            \n                \n                    Stores the current search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('searchInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/component/search-button/search-button.component.ts:35\n                        \n                    \n\n            \n                \n                    Reference to the search input field in the template.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { GlobalLoaderService } from '../../service/global-loader/global-loader.service';\n\n/**\n * SearchButtonComponent\n *\n * A floating action button that expands into a search input field.\n * Emits the search query to the parent component and shows a global loader while processing.\n */\n@Component({\n  selector: 'app-search-button',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './search-button.component.html',\n  styleUrls: ['./search-button.component.css']\n})\nexport class SearchButtonComponent {\n\n  /**\n   * Tracks whether the search input is open or closed.\n   * Defaults to `false`.\n   */\n  isOpen = false;\n\n  /**\n   * Stores the current search query entered by the user.\n   */\n  query = '';\n\n  /**\n   * Reference to the search input field in the template.\n   */\n  @ViewChild('searchInput') searchInput!: ElementRef;\n\n  /**\n   * Emits the current search query to the parent component.\n   */\n  @Output() search = new EventEmitter();\n\n  /**\n   * Creates an instance of SearchButtonComponent.\n   * @param globalLoader Service to control the global loading indicator\n   */\n  constructor(\n    private globalLoader: GlobalLoaderService\n  ) { }\n\n  /**\n   * Toggles the visibility of the search input field.\n   * If opened, it automatically focuses the input field after a short delay.\n   */\n  toggleSearch(): void {\n    this.isOpen = !this.isOpen;\n\n    if (this.isOpen) {\n      setTimeout(() => {\n        this.searchInput?.nativeElement.focus();\n      }, 50);\n    }\n  }\n\n  /**\n   * Handles the search action when user presses Enter.\n   * - Emits the query to the parent.\n   * - Removes focus from the input.\n   * - Displays the global loader for a short duration.\n   */\n  onSearch(): void {\n    console.log('Child emitting search query:', this.query);\n    this.search.emit(this.query);\n    this.searchInput?.nativeElement.blur();\n    this.globalLoader.show('Searching...');\n    setTimeout(() => {\n      this.globalLoader.hide();\n    }, 500);\n  }\n\n  /**\n   * Triggers whenever the search input value changes.\n   * Restricts the query length to a maximum of 10 characters.\n   */\n  onInputChange(): void {\n    if (this.query.trim().length > 10) {\n      this.query = this.query.slice(0, 10);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n      \n      \n\n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./search-button.component.css\n                \n                /* Optional: smoother animation for width transition */\n:host {\n  display: block;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchComponent.html":{"url":"components/SearchComponent.html","title":"component - SearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/search/search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  imports: [],\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.css'\n})\nexport class SearchComponent {\n\n}\n\n    \n\n    \n        🔍 Search Expenses\nsearch works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '🔍 Search Expensessearch works!'\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SectionService.html":{"url":"injectables/SectionService.html","title":"injectable - SectionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SectionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/section/section.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentSection$\n                            \n                            \n                                    Private\n                                sectionSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setSection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setSection\n                        \n                    \n                \n            \n            \n                \nsetSection(section: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/section/section.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentSection$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.sectionSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sectionSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('home')\n                    \n                \n                    \n                        \n                                Defined in src/app/service/section/section.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SectionService {\n  private sectionSource = new BehaviorSubject('home');\n  currentSection$ = this.sectionSource.asObservable();\n\n  setSection(section: string) {\n    this.sectionSource.next(section);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingItemComponent.html":{"url":"components/SettingItemComponent.html","title":"component - SettingItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/component/setting-item/setting-item.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-setting-item\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./setting-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/component/setting-item/setting-item.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-setting-item',\n  templateUrl: './setting-item.component.html',\n  standalone: true,\n  imports: []\n})\nexport class SettingItemComponent {\n  @Input() label!: string;\n}\n\n    \n\n    \n        \n    {{ label }}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ label }}    '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/sidebar/sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activePath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateAndClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sectionService: SectionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sectionService\n                                                  \n                                                        \n                                                                        SectionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateAndClose\n                        \n                    \n                \n            \n            \n                \nnavigateAndClose(section: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/sidebar/sidebar.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                section\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activePath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/sidebar/sidebar.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { SectionService } from '../../service/section/section.service';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent {\n  activePath: string = '';\n\n  constructor(private sectionService: SectionService) {\n    this.sectionService.currentSection$.subscribe(section => {\n      this.activePath = section;\n    });\n  }\n\n  navigateAndClose(section: string, event: Event) {\n    event.preventDefault();\n    this.sectionService.setSection(section);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      🏠 Home\n    \n    \n      ➕ Add\n        Expense\n    \n    \n      📋 List\n    \n    \n      📅\n        Calendar\n    \n    \n      💰\n        Budget\n    \n    \n       💬 AI\n        Assistant\n    \n    \n      ⚙️\n        Settings\n    \n  \n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            🏠 Home              ➕ Add        Expense              📋 List              📅        Calendar              💰        Budget               💬 AI        Assistant              ⚙️        Settings                                              '\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StorageService.html":{"url":"injectables/StorageService.html","title":"injectable - StorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                budgetKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                categoryKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                expenseKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                userKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllBudgets\n                            \n                            \n                                getAllCategories\n                            \n                            \n                                getAllExpenses\n                            \n                            \n                                getBudgetKey\n                            \n                            \n                                getCategoryKey\n                            \n                            \n                                getExpenseKey\n                            \n                            \n                                getUser\n                            \n                            \n                                getUserKey\n                            \n                            \n                                    Private\n                                    Static\n                                isBrowser\n                            \n                            \n                                syncBudgetWithSchema\n                            \n                            \n                                syncCategoriesWithSchema\n                            \n                            \n                                syncExpensesWithSchema\n                            \n                            \n                                syncUser\n                            \n                            \n                                syncUserWithSchema\n                            \n                            \n                                syncWithSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appVersionService: AppVersionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/storage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appVersionService\n                                                  \n                                                        \n                                                                        AppVersionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllBudgets\n                        \n                    \n                \n            \n            \n                \ngetAllBudgets()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllCategories\n                        \n                    \n                \n            \n            \n                \ngetAllCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllExpenses\n                        \n                    \n                \n            \n            \n                \ngetAllExpenses()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBudgetKey\n                        \n                    \n                \n            \n            \n                \ngetBudgetKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategoryKey\n                        \n                    \n                \n            \n            \n                \ngetCategoryKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpenseKey\n                        \n                    \n                \n            \n            \n                \ngetExpenseKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserKey\n                        \n                    \n                \n            \n            \n                \ngetUserKey()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncBudgetWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncBudgetWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncCategoriesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncCategoriesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncExpensesWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncExpensesWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUser\n                        \n                    \n                \n            \n            \n                \nsyncUser(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncUserWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncUserWithSchema()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        syncWithSchema\n                        \n                    \n                \n            \n            \n                \nsyncWithSchema(storageKey: string, defaultSchema: Schema)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/storage.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                storageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                defaultSchema\n                                            \n                                                            Schema\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        budgetKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'budget'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        categoryKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'categories'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        expenseKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'expenses'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        userKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user'\n                    \n                \n                    \n                        \n                                Defined in src/app/service/localStorage/storage.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Categories } from './data/categories';\nimport { AppVersionService } from '../util/app-version/app-version.service';\n\ninterface Schema {\n    [key: string]: any;\n}\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor(private appVersionService: AppVersionService) {\n    }\n    \n    private readonly categoryKey = 'categories';\n    private readonly expenseKey = 'expenses';\n    private readonly budgetKey = 'budget';\n    private readonly userKey = 'user';\n\n    // Check if we're in the browser\n    private static isBrowser(): boolean {\n        return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n    }\n\n    // Sync categories with schema\n    syncCategoriesWithSchema() {\n        const categorySchema: Schema = {\n            category_id: \"\",\n            name: \"\",\n            icon: \"\",\n            color: \"\",\n            is_active: \"\",\n            user_id: \"\"\n        };\n\n        return this.syncWithSchema(this.categoryKey, categorySchema);\n    }\n\n    // Sync expenses with schema\n    syncExpensesWithSchema() {\n        const expenseSchema: Schema = {\n            expense_id: \"\",\n            category_id: \"\",\n            amount: \"\",\n            date: \"\",\n            location: \"\",\n            note: \"\",\n            payment_mode: \"\",\n            time: \"\",\n            isExtraSpending: false\n        };\n\n        return this.syncWithSchema(this.expenseKey, expenseSchema);\n    }\n\n    // Sync user with schema\n    syncUserWithSchema() {\n        const userSchema: Schema = {\n            id: \"\",\n            backup_frequency: \"\",\n            email: \"\",\n            is_active: \"\",\n            is_backup: \"\",\n            last_backup: \"\",\n            name: \"\",\n            notifications: \"\",\n            user_password: \"\",\n            theme_mode: \"dark\",\n            currency: \"₹\",\n            app_version: \"0\"\n        };\n\n        return this.syncUser(this.userKey, userSchema);\n    }\n\n    // Sync budget with schema\n    syncBudgetWithSchema() {\n        const budgetSchema: Schema = {\n            budget_id: \"\",\n            amount: 0,\n            fromDate: \"\",\n            toDate: \"\"\n        };\n\n        return this.syncWithSchema(this.budgetKey, budgetSchema);\n    }\n\n    // Helper function for syncing with schema\n    syncWithSchema(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        let savedData = JSON.parse(localStorage.getItem(storageKey) || '[]');\n        if (storageKey === this.categoryKey) {\n            const pastData = JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n            const filteredPastData = pastData.filter((item: any) => item.user_id !== \"0\");\n            savedData = [...filteredPastData, ...Categories];\n        }\n\n        const schemaKeys = Object.keys(defaultSchema);\n        const updatedData = savedData.map((item: Schema) => {\n            const synced: Schema = {};\n\n            schemaKeys.forEach((key: string) => {\n                synced[key] = key in item ? item[key] : defaultSchema[key];\n            });\n\n            return synced;\n        });\n\n        localStorage.setItem(storageKey, JSON.stringify(updatedData));\n    }\n\n    syncUser(storageKey: string, defaultSchema: Schema) {\n        if (!StorageService.isBrowser()) {\n            console.error('localStorage is not available in this environment.');\n            return;\n        }\n\n        const savedSettings = JSON.parse(localStorage.getItem(storageKey) || '{}');\n        const schemaKeys = Object.keys(defaultSchema);\n\n        const syncedSettings: Schema = {};\n\n        schemaKeys.forEach((key: string) => {\n            syncedSettings[key] = key in savedSettings ? savedSettings[key] : defaultSchema[key];\n        });\n        syncedSettings['app_version'] = this.appVersionService.getVersion();\n\n        localStorage.setItem(this.userKey, JSON.stringify(syncedSettings));\n    }\n\n    getAllCategories() {\n        return JSON.parse(localStorage.getItem(this.categoryKey) || '[]');\n    }\n\n    getAllBudgets() {\n        return JSON.parse(localStorage.getItem(this.budgetKey) || '[]');\n    }\n\n    getUser() {\n        return JSON.parse(localStorage.getItem(this.userKey) || '{}');\n    }\n\n    getAllExpenses() {\n        return JSON.parse(localStorage.getItem(this.expenseKey) || '[]');\n    }\n\n    getCategoryKey(): string {\n        return this.categoryKey;\n    }\n\n    getExpenseKey(): string {\n        return this.expenseKey;\n    }\n\n    getBudgetKey(): string {\n        return this.budgetKey;\n    }\n\n    getUserKey(): string {\n        return this.userKey;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/toast/toast.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./toast.component.html\n            \n\n\n\n            \n                styleUrl\n                ./toast.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                showToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/toast/toast.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showToast\n                        \n                    \n                \n            \n            \n                \nshowToast(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/toast/toast.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AfterViewInit } from '@angular/core';\nimport { ToastService } from '../../service/toast/toast.service';\n\n@Component({\n  selector: 'app-toast',\n  imports: [],\n  templateUrl: './toast.component.html',\n  styleUrl: './toast.component.css'\n})\n\nexport class ToastComponent implements AfterViewInit {\n  constructor(private toastService: ToastService) { }\n\n  ngAfterViewInit(): void {\n    this.toastService.register(this);\n  }\n  showToast(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success') {\n    const toastContainer = document.getElementById('toast-container');\n\n    if (toastContainer) {\n      toastContainer.innerHTML = '';\n\n      const typeClasses: any = {\n        success: 'bg-green-500',\n        error: 'bg-red-500',\n        info: 'bg-blue-500',\n        warning: 'bg-yellow-500 text-black',\n      };\n\n      const toast = document.createElement('div');\n      toast.className = `\n        flex items-center justify-between max-w-xs w-full p-4 rounded shadow-lg\n        text-white dark:text-white\n        ${typeClasses[type] || typeClasses.success}\n        animate-fade-in\n      `;\n\n      toast.innerHTML = `\n        ${message}\n        &times;\n      `;\n\n      toastContainer.appendChild(toast);\n\n      setTimeout(() => {\n        toast.remove();\n      }, 3000);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddExpenseComponent', 'selector': 'app-add-expense'},{'name': 'AiComponent', 'selector': 'app-ai'},{'name': 'AnalysisComponent', 'selector': 'app-analysis'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BudgetComponent', 'selector': 'app-budget'},{'name': 'CalendarComponent', 'selector': 'app-calendar'},{'name': 'CategoryDropdownComponent', 'selector': 'app-category-dropdown'},{'name': 'CustomModalComponent', 'selector': 'app-custom-modal'},{'name': 'ExpenseDetailsModalComponent', 'selector': 'app-expense-details-modal'},{'name': 'ExpenseListComponent', 'selector': 'app-expense-list'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GlobalLoaderComponent', 'selector': 'app-global-loader'},{'name': 'GraphsComponent', 'selector': 'app-graphs'},{'name': 'HamburgerMenuComponent', 'selector': 'app-hamburger-menu'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InfoIconComponent', 'selector': 'app-info-icon'},{'name': 'ListExpensesComponent', 'selector': 'app-list-expenses'},{'name': 'MusicComponent', 'selector': 'app-music'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PieChartComponent', 'selector': 'app-pie-chart'},{'name': 'SearchButtonComponent', 'selector': 'app-search-button'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'SettingItemComponent', 'selector': 'app-setting-item'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/toast/toast.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toastComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(toast: ToastComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toast\n                                            \n                                                            ToastComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\" | \"warning\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/toast/toast.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\" | \"warning\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'success'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ToastComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/service/toast/toast.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastComponent } from '../../shared/toast/toast.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ToastService {\n  private toastComponent!: ToastComponent;\n\n  register(toast: ToastComponent) {\n    this.toastComponent = toast;\n  }\n\n  show(message: string, type: 'success' | 'error' | 'info' | 'warning' = 'success') {\n    this.toastComponent?.showToast(message, type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            app_version\n                                        \n                                \n                                \n                                        \n                                            backup_frequency\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_active\n                                        \n                                \n                                \n                                        \n                                            is_backup\n                                        \n                                \n                                \n                                        \n                                            last_backup\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            notifications\n                                        \n                                \n                                \n                                        \n                                            theme_mode\n                                        \n                                \n                                \n                                        \n                                            user_password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        app_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        app_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        backup_frequency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backup_frequency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_active:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_backup\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_backup:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notifications:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme_mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/localStorage/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                isBrowser\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storageService: StorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/service/localStorage/user.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storageService\n                                                  \n                                                        \n                                                                        StorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Record\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:40\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isBrowser\n                        \n                    \n                \n            \n            \n                \n                        \n                    isBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(key: string, value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/service/localStorage/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\nexport interface User {\n  id: string,\n  backup_frequency: string,\n  email: string,\n  is_active: string,\n  is_backup: string,\n  last_backup: string,\n  name: string,\n  notifications: string,\n  user_password: string,\n  theme_mode: string,\n  currency: string,\n  app_version: string\n};\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n\n  constructor(private storageService: StorageService) { };\n\n  private isBrowser(): boolean {\n    return typeof window !== 'undefined' && typeof window.localStorage !== 'undefined';\n  }\n\n  get(): Record {\n    if (!this.isBrowser()) return {};\n    return this.storageService.getUser();\n  }\n\n  update(key: string, value: any): void {\n    if (!this.isBrowser()) return;\n    const currentSettings = this.get();\n    currentSettings[key] = value;\n    localStorage.setItem(this.storageService.getUserKey(), JSON.stringify(currentSettings));\n  }\n\n  getValue(key: string): T | null {\n    const currentSettings = this.get();\n    return key in currentSettings ? currentSettings[key] : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/service/util/utils.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/service/util/utils.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.routes.server.ts\n            \n            variable\n            serverRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/category-dropdown/category-dropdown.component.ts\n            \n            component\n            CategoryDropdownComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/component/custom-modal/custom-modal.component.ts\n            \n            component\n            CustomModalComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/component/graphs/graphs.component.ts\n            \n            component\n            GraphsComponent\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                src/app/component/info-icon/info-icon.component.ts\n            \n            component\n            InfoIconComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-details-modal/expense-details-modal.component.ts\n            \n            component\n            ExpenseDetailsModalComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/component/list-expenses/expense-list/expense-list.component.ts\n            \n            component\n            ExpenseListComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/component/pie-chart/pie-chart.component.ts\n            \n            component\n            PieChartComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        src/app/component/pie-chart/pie-chart.component.ts\n            \n            variable\n            Chart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/component/search-button/search-button.component.ts\n            \n            component\n            SearchButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/component/setting-item/setting-item.component.ts\n            \n            component\n            SettingItemComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/features/add-expense/add-expense.component.ts\n            \n            component\n            AddExpenseComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/features/ai/ai.component.ts\n            \n            component\n            AiComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/analysis/analysis.component.ts\n            \n            component\n            AnalysisComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/budget/budget.component.ts\n            \n            component\n            BudgetComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                        src/app/features/budget/budget.component.ts\n            \n            type alias\n            ChartOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/features/list-expenses/list-expenses.component.ts\n            \n            component\n            ListExpensesComponent\n            \n                100 %\n                (37/37)\n            \n        \n        \n            \n                \n                src/app/features/music/music.component.ts\n            \n            component\n            MusicComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/features/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.component.ts\n            \n            component\n            SettingsComponent\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/get/get-api.service.ts\n            \n            injectable\n            GetApiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/service/backend-api/post/post-api.service.ts\n            \n            injectable\n            PostApiService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/gemini-api/gemini-api.service.ts\n            \n            injectable\n            GeminiApiService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/global-loader/global-loader.service.ts\n            \n            injectable\n            GlobalLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            injectable\n            BudgetService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/budget.service.ts\n            \n            interface\n            Budget\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/category.service.ts\n            \n            interface\n            Category\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/service/localStorage/data/categories.ts\n            \n            variable\n            Categories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            injectable\n            ExpenseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/expense.service.ts\n            \n            interface\n            Expense\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            injectable\n            StorageService\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/storage.service.ts\n            \n            interface\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/service/localStorage/user.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            injectable\n            SaavnService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/service/saavan-api/saavan.service.ts\n            \n            interface\n            ChatMessage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/service/section/section.service.ts\n            \n            injectable\n            SectionService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/toast/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/service/util/app-version/app-version.service.ts\n            \n            injectable\n            AppVersionService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/service/util/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/global-loader/global-loader.component.ts\n            \n            component\n            GlobalLoaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/hamburger-menu/hamburger-menu.component.ts\n            \n            component\n            HamburgerMenuComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/environments/environments.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            angularApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            browserDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            reqHandler\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/server.ts\n            \n            variable\n            serverDistFolder\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/common : ^19.2.0\n        \n            @angular/compiler : ^19.2.0\n        \n            @angular/core : ^19.2.0\n        \n            @angular/forms : ^19.2.0\n        \n            @angular/platform-browser : ^19.2.0\n        \n            @angular/platform-browser-dynamic : ^19.2.0\n        \n            @angular/platform-server : ^19.2.0\n        \n            @angular/router : ^19.2.0\n        \n            @angular/service-worker : ^19.2.0\n        \n            @angular/ssr : ^19.2.6\n        \n            apexcharts : ^4.7.0\n        \n            chart.js : ^4.4.9\n        \n            express : ^4.18.2\n        \n            marked : ^15.0.11\n        \n            ng-apexcharts : ^1.15.0\n        \n            ng2-charts : ^8.0.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.15.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n📘 Expense Tracker\n\nExpense Wisely – Where Your Money Stops Playing Hide and Seek!\n\n📌 Overview\nExpense Tracker is a mobile-first financial management application designed to help users easily track their daily and monthly expenses. The application emphasizes a user-friendly UI/UX tailored specifically for smartphones, allowing seamless personal finance management on the go.\nThis application leverages Angular as the frontend framework and Tailwind CSS for responsive and modern UI styling. All user data is stored in LocalStorage, making the app lightweight and independent of backend dependencies.\n\n🧰 Tech Stack\n\n\n\nTechnology\nPurpose\n\n\n\n\nAngular\nFrontend application logic\n\n\nTailwind CSS\nStyling and responsive UI\n\n\nLocalStorage\nPersistent data storage\n\n\n\n\n📱 Features & Functionality\n1. Dashboard View\n\nUpon launch, users are greeted with two interactive graphs:\n\nExpense Graph (Toggle: Monthly / Daily / Yearly): Displays a line graph representing user expenses over time. Users can switch between Monthly, Daily and Yearly views.\nCategory-wise Pie Chart: Visualizes how the expenses are distributed across different categories (e.g., Food, Travel, Shopping).\n\n\n\n\n2. Add Expense View\nAllows users to add new expense entries through a form. Input fields include:\n\n💰 Amount\n📅 Date & Time\n🏷️ Category (chosen from a dropdown list)\n💳 Payment Mode\n📍 Location\n📝 Note\n💡 Extra Spending\n\nAll expenses are stored in the device's LocalStorage and reflected immediately in graphs and listings.\n\n3. Calendar View\n\nUsers can view a monthly calendar to explore expenses on specific dates.\nTap any date to open a popup modal displaying all expenses for that day.\nNavigate across months and years to view past or future expenses.\n\n\n4. List View\n\nDisplays all user expenses in a scrollable, and sortable list.\n\nUsers can:\n\n🔍 Search expenses quickly by typing keywords (category, note, or payment mode).  \n🧾 Sort expenses by date, amount, or category.\n🎯 Filter by category, date, extra spending, and payment mode.\n🖱️ Tap any entry to open a modal with complete details and options to edit or delete the expense.\n\n\n\n\n5. Budget View\n\nUsers can define a budget range by selecting a start and end date.\n\nOnce a budget is set:\n\nA progress bar visually represents how much of the budget has been spent.\n\nInformative summary boxes display:\n\nAvg Allowed/Day\nSpent/Day\nSuggested/Day (based on remaining budget and days)\n\n\nUsers have the ability to edit or delete the budget for better flexibility and control.\n\n\n\n\n\n6. Settings View\nProvides customization and utility options for better personalization:\n\n🎨 Theme Mode Toggle (Dark / Light)\n⬇️ Download Data (export expenses data)\n📤 Import Data (upload expense data)\n➕ Add Category (custom categories for better organization)\n❌ Delete Category (remove unused or incorrect categories)\n🔄 Update App (Update the application to the latest release)\n\n\n📱 Mobile-First Design\n\nThe application is specifically designed for mobile devices.\nFeatures responsive components, intuitive touch controls, and visually appealing UI optimized for small screens.\nNot intended for laptop or desktop usage.\n\n\n🗃️ Data Storage\nAll user data is stored using the browser’s LocalStorage API, ensuring:\n\n✅ No need for a backend or server\n⚡ Fast read/write operations\n🔒 Data stays on the user's device for privacy and control\n\n\n📈 User Flow Summary\n\nLaunch App → View Expense Graphs (Toggle between Month/Day).\n\nAdd Expenses via the ➕ tab.\n\nNavigate to:\n\nCalendar to view per-date expenses.\nList for detailed log with search, filter, and sort options.\nBudget to monitor spending.\nSettings for customization.\n\n\n\n\n📄 Code Documentation\nFor developers and contributors, detailed code-level documentation is available here:👉 Documentation\n\n🖼️ Screenshots\n\n    \n    \n    \n    \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChartOptions   (src/.../budget.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/features/budget/budget.component.ts\n    \n    \n        \n            \n                \n                    \n                    ChartOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            angularApp   (src/.../server.ts)\n                        \n                        \n                            app   (src/.../server.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            browserDistFolder   (src/.../server.ts)\n                        \n                        \n                            Categories   (src/.../categories.ts)\n                        \n                        \n                            Chart   (src/.../pie-chart.component.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environments.ts)\n                        \n                        \n                            reqHandler   (src/.../server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            serverDistFolder   (src/.../server.ts)\n                        \n                        \n                            serverRoutes   (src/.../app.routes.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        angularApp\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AngularNodeAppEngine()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Default value : express()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        browserDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : resolve(serverDistFolder, '../browser')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reqHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createNodeRequestHandler(app)\n                    \n                \n\n            \n                \n                    Request handler used by the Angular CLI (for dev-server and during build) or Firebase Cloud Functions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverDistFolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : dirname(fileURLToPath(import.meta.url))\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(withEventReplay()), provideServiceWorker('ngsw-worker.js', {\n            enabled: !isDevMode(),\n            registrationStrategy: 'registerWhenStable:30000'\n          }), provideHttpClient()]\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/service/localStorage/data/categories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    category_id: '1',\n    name: 'Food & Drinks',\n    icon: '🍽️',\n    color: '#FF6347', // Tomato Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '2',\n    name: 'Groceries',\n    icon: '🛒',\n    color: '#4CAF50', // Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '3',\n    name: 'Shopping',\n    icon: '🛍️',\n    color: '#FF9800', // Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '4',\n    name: 'Bills & Utilities',\n    icon: '💡',\n    color: '#FFEB3B', // Yellow\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '5',\n    name: 'Entertainment',\n    icon: '🎮',\n    color: '#2196F3', // Blue\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '6',\n    name: 'Health',\n    icon: '🩺',\n    color: '#00BCD4', // Cyan\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '7',\n    name: 'Education',\n    icon: '📚',\n    color: '#9C27B0', // Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '8',\n    name: 'Subscriptions',\n    icon: '🔄',\n    color: '#FF5722', // Deep Orange\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '9',\n    name: 'Travel',\n    icon: '🌍',\n    color: '#3F51B5', // Indigo\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '10',\n    name: 'Rent',\n    icon: '🏠',\n    color: '#607D8B', // Blue Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '11',\n    name: 'Family & Friends',\n    icon: '👨‍👩‍👧‍👦',\n    color: '#8BC34A', // Light Green\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '12',\n    name: 'Miscellaneous',\n    icon: '📦',\n    color: '#9E9E9E', // Grey\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '13',\n    name: 'Gifts',\n    icon: '🎁',\n    color: '#F44336', // Red\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '14',\n    name: 'Party',\n    icon: '🎉',\n    color: '#FF4081', // Pink\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '15',\n    name: 'Personal Care',\n    icon: '🧖‍♂️',\n    color: '#673AB7', // Deep Purple\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '16',\n    name: 'Home & Hygiene',\n    icon: '🧹',\n    color: '#009688', // Teal\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '17',\n    name: 'Others',\n    icon: '❓',\n    color: '#FFC107', // Amber\n    is_active: 'true',\n    user_id: '0',\n  },\n  {\n    category_id: '18',\n    name: 'Recharge',\n    icon: '🔋',\n    color: '#8BC34A', // Light Green (for distinct differentiation)\n    is_active: 'true',\n    user_id: '0',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/component/pie-chart/pie-chart.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering(),\n    provideServerRouting(serverRoutes)\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Flag to indicate if the app is running in production mode.\n   * Set to true in the production environment.\n   */\n  production: false,\n\n  /**\n   * API key for accessing the Gemini AI API.\n   * Replace or secure this key before deploying to production.\n   */\n  geminiApiKey: 'AIzaSyAZT2MYoLB9gRwRa6NRan8NdFSVmmwzz04',\n\n  /**\n   * Current environment type.\n   * Possible values: 'local', 'live'\n   */\n  developmentEnvironment: 'live', // Change to 'live' for production or 'local' for local development\n\n  /**\n   * Application version.\n   * This should be updated with each release to track application versions.\n   */\n  applicationVersion: '25.8.24', // Current application version\n}\n                    \n                \n\n            \n                \n                    Application environment configuration for development mode.\nUse this file during development. It will be replaced by environment.prod.ts during build.\n\n                \n            \n\n        \n    \n\n    src/app/app.routes.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ServerRoute[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    path: '**',\n    renderMode: RenderMode.Prerender\n  }\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
